2019-07-24 09:46:47,699 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-VFTL6TA with PID 5572 (C:\123\company\target\classes started by 高羽翯 in C:\123\company)
2019-07-24 09:46:47,715 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-24 09:46:47,715 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-24 09:46:56,471 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 10.084 seconds (JVM running for 13.722)
2019-07-24 09:47:53,058 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product 
2019-07-24 09:47:53,100 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news 
2019-07-24 09:47:53,145 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 09:47:53,145 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 09:47:53,254 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 17
2019-07-24 09:47:53,239 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 09:47:53,384 DEBUG (NewsController.java:33)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 1,
    "title" : "创建新项目",
    "content" : "新闻内容",
    "writeDate" : 1466812800000
  }, {
    "newsId" : 2,
    "title" : "索尼位55降价送卡",
    "content" : "新闻内容3",
    "writeDate" : -30364761600000
  }, {
    "newsId" : 3,
    "title" : "理光b5不到二千",
    "content" : null,
    "writeDate" : 1191542400000
  }, {
    "newsId" : 5,
    "title" : "单反与镜头组合",
    "content" : null,
    "writeDate" : 1191369600000
  }, {
    "newsId" : 15,
    "title" : "百度将开拓美国和欧盟市场",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 16,
    "title" : "Uber CEO和马云交好",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 22,
    "title" : "今日早报",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 23,
    "title" : "高考查分被马云占了先机",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 24,
    "title" : "看完这个，你还想做微商吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 25,
    "title" : "农村电商只能成为空谈?",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 26,
    "title" : "上半年这些行业大爆炸",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 27,
    "title" : "阿里巴巴最为窘迫的四件事",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 28,
    "title" : "高管却离开了",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 30,
    "title" : "支付宝余额使用将受限",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 31,
    "title" : "国内垂直B2B电商平台TOP30",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 33,
    "title" : "谷歌要重新进入中国市场了吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 34,
    "title" : "今天",
    "content" : null,
    "writeDate" : 1467417600000
  } ]
}
2019-07-24 09:47:59,823 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news 
2019-07-24 09:47:59,823 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product 
2019-07-24 09:47:59,824 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 09:47:59,824 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 09:47:59,830 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 17
2019-07-24 09:47:59,833 DEBUG (NewsController.java:33)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 1,
    "title" : "创建新项目",
    "content" : "新闻内容",
    "writeDate" : 1466812800000
  }, {
    "newsId" : 2,
    "title" : "索尼位55降价送卡",
    "content" : "新闻内容3",
    "writeDate" : -30364761600000
  }, {
    "newsId" : 3,
    "title" : "理光b5不到二千",
    "content" : null,
    "writeDate" : 1191542400000
  }, {
    "newsId" : 5,
    "title" : "单反与镜头组合",
    "content" : null,
    "writeDate" : 1191369600000
  }, {
    "newsId" : 15,
    "title" : "百度将开拓美国和欧盟市场",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 16,
    "title" : "Uber CEO和马云交好",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 22,
    "title" : "今日早报",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 23,
    "title" : "高考查分被马云占了先机",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 24,
    "title" : "看完这个，你还想做微商吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 25,
    "title" : "农村电商只能成为空谈?",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 26,
    "title" : "上半年这些行业大爆炸",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 27,
    "title" : "阿里巴巴最为窘迫的四件事",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 28,
    "title" : "高管却离开了",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 30,
    "title" : "支付宝余额使用将受限",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 31,
    "title" : "国内垂直B2B电商平台TOP30",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 33,
    "title" : "谷歌要重新进入中国市场了吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 34,
    "title" : "今天",
    "content" : null,
    "writeDate" : 1467417600000
  } ]
}
2019-07-24 09:47:59,834 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 09:49:00,225 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users 
2019-07-24 09:49:00,227 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 09:49:00,238 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 14
2019-07-24 09:49:00,242 DEBUG (UserController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 2,
    "userName" : "user2",
    "password" : "222222",
    "status" : 1
  }, {
    "userId" : 9,
    "userName" : "user9",
    "password" : "999999",
    "status" : 1
  }, {
    "userId" : 10,
    "userName" : "user1010",
    "password" : "111111",
    "status" : 1
  }, {
    "userId" : 12,
    "userName" : "user11",
    "password" : "111111",
    "status" : 0
  }, {
    "userId" : 13,
    "userName" : "user123",
    "password" : "222222",
    "status" : 0
  }, {
    "userId" : 18,
    "userName" : "user167",
    "password" : "666666",
    "status" : 0
  }, {
    "userId" : 19,
    "userName" : "user19",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 20,
    "userName" : "user20",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 22,
    "userName" : "guoyan",
    "password" : "123456",
    "status" : 1
  }, {
    "userId" : 23,
    "userName" : "liuxinle",
    "password" : "111111",
    "status" : 1
  }, {
    "userId" : 24,
    "userName" : "maqiuyue",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 29,
    "userName" : "admin",
    "password" : "123456",
    "status" : 1
  }, {
    "userId" : 37,
    "userName" : "张三",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 41,
    "userName" : "王五愣2",
    "password" : "123456",
    "status" : 0
  } ]
}
2019-07-24 09:50:26,023 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 09:50:26,025 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String)
2019-07-24 09:50:26,029 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 10:08:06,682 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news 
2019-07-24 10:08:06,690 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product 
2019-07-24 10:08:06,698 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 10:08:06,699 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 10:08:06,717 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 17
2019-07-24 10:08:06,721 DEBUG (NewsController.java:33)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 1,
    "title" : "创建新项目",
    "content" : "新闻内容",
    "writeDate" : 1466812800000
  }, {
    "newsId" : 2,
    "title" : "索尼位55降价送卡",
    "content" : "新闻内容3",
    "writeDate" : -30364761600000
  }, {
    "newsId" : 3,
    "title" : "理光b5不到二千",
    "content" : null,
    "writeDate" : 1191542400000
  }, {
    "newsId" : 5,
    "title" : "单反与镜头组合",
    "content" : null,
    "writeDate" : 1191369600000
  }, {
    "newsId" : 15,
    "title" : "百度将开拓美国和欧盟市场",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 16,
    "title" : "Uber CEO和马云交好",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 22,
    "title" : "今日早报",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 23,
    "title" : "高考查分被马云占了先机",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 24,
    "title" : "看完这个，你还想做微商吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 25,
    "title" : "农村电商只能成为空谈?",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 26,
    "title" : "上半年这些行业大爆炸",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 27,
    "title" : "阿里巴巴最为窘迫的四件事",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 28,
    "title" : "高管却离开了",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 30,
    "title" : "支付宝余额使用将受限",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 31,
    "title" : "国内垂直B2B电商平台TOP30",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 33,
    "title" : "谷歌要重新进入中国市场了吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 34,
    "title" : "今天",
    "content" : null,
    "writeDate" : 1467417600000
  } ]
}
2019-07-24 10:08:06,722 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 10:14:21,046 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 10:14:21,046 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String)
2019-07-24 10:14:21,046 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 10:15:51,647 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 10:15:51,649 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String)
2019-07-24 10:15:51,652 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 10:15:51,666 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users 
2019-07-24 10:15:51,667 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 10:15:51,689 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 14
2019-07-24 10:15:51,694 DEBUG (UserController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 2,
    "userName" : "user2",
    "password" : "222222",
    "status" : 1
  }, {
    "userId" : 9,
    "userName" : "user9",
    "password" : "999999",
    "status" : 1
  }, {
    "userId" : 10,
    "userName" : "user1010",
    "password" : "111111",
    "status" : 1
  }, {
    "userId" : 12,
    "userName" : "user11",
    "password" : "111111",
    "status" : 0
  }, {
    "userId" : 13,
    "userName" : "user123",
    "password" : "222222",
    "status" : 0
  }, {
    "userId" : 18,
    "userName" : "user167",
    "password" : "666666",
    "status" : 0
  }, {
    "userId" : 19,
    "userName" : "user19",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 20,
    "userName" : "user20",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 22,
    "userName" : "guoyan",
    "password" : "123456",
    "status" : 1
  }, {
    "userId" : 23,
    "userName" : "liuxinle",
    "password" : "111111",
    "status" : 1
  }, {
    "userId" : 24,
    "userName" : "maqiuyue",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 29,
    "userName" : "admin",
    "password" : "123456",
    "status" : 1
  }, {
    "userId" : 37,
    "userName" : "张三",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 41,
    "userName" : "王五愣2",
    "password" : "123456",
    "status" : 0
  } ]
}
2019-07-24 10:15:54,212 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 10:15:54,214 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String)
2019-07-24 10:15:54,217 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 10:15:54,224 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users 
2019-07-24 10:15:54,226 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 10:15:54,231 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 14
2019-07-24 10:15:54,232 DEBUG (UserController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 2,
    "userName" : "user2",
    "password" : "222222",
    "status" : 1
  }, {
    "userId" : 9,
    "userName" : "user9",
    "password" : "999999",
    "status" : 1
  }, {
    "userId" : 10,
    "userName" : "user1010",
    "password" : "111111",
    "status" : 1
  }, {
    "userId" : 12,
    "userName" : "user11",
    "password" : "111111",
    "status" : 0
  }, {
    "userId" : 13,
    "userName" : "user123",
    "password" : "222222",
    "status" : 0
  }, {
    "userId" : 18,
    "userName" : "user167",
    "password" : "666666",
    "status" : 0
  }, {
    "userId" : 19,
    "userName" : "user19",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 20,
    "userName" : "user20",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 22,
    "userName" : "guoyan",
    "password" : "123456",
    "status" : 1
  }, {
    "userId" : 23,
    "userName" : "liuxinle",
    "password" : "111111",
    "status" : 1
  }, {
    "userId" : 24,
    "userName" : "maqiuyue",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 29,
    "userName" : "admin",
    "password" : "123456",
    "status" : 1
  }, {
    "userId" : 37,
    "userName" : "张三",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 41,
    "userName" : "王五愣2",
    "password" : "123456",
    "status" : 0
  } ]
}
2019-07-24 10:15:55,176 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 10:15:55,177 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String)
2019-07-24 10:15:55,180 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 10:15:55,191 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users 
2019-07-24 10:15:55,192 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 10:15:55,196 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 14
2019-07-24 10:15:55,198 DEBUG (UserController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 2,
    "userName" : "user2",
    "password" : "222222",
    "status" : 1
  }, {
    "userId" : 9,
    "userName" : "user9",
    "password" : "999999",
    "status" : 1
  }, {
    "userId" : 10,
    "userName" : "user1010",
    "password" : "111111",
    "status" : 1
  }, {
    "userId" : 12,
    "userName" : "user11",
    "password" : "111111",
    "status" : 0
  }, {
    "userId" : 13,
    "userName" : "user123",
    "password" : "222222",
    "status" : 0
  }, {
    "userId" : 18,
    "userName" : "user167",
    "password" : "666666",
    "status" : 0
  }, {
    "userId" : 19,
    "userName" : "user19",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 20,
    "userName" : "user20",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 22,
    "userName" : "guoyan",
    "password" : "123456",
    "status" : 1
  }, {
    "userId" : 23,
    "userName" : "liuxinle",
    "password" : "111111",
    "status" : 1
  }, {
    "userId" : 24,
    "userName" : "maqiuyue",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 29,
    "userName" : "admin",
    "password" : "123456",
    "status" : 1
  }, {
    "userId" : 37,
    "userName" : "张三",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 41,
    "userName" : "王五愣2",
    "password" : "123456",
    "status" : 0
  } ]
}
2019-07-24 10:15:55,357 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 10:15:55,359 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String)
2019-07-24 10:15:55,363 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 10:15:55,373 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users 
2019-07-24 10:15:55,374 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 10:15:55,378 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 14
2019-07-24 10:15:55,380 DEBUG (UserController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 2,
    "userName" : "user2",
    "password" : "222222",
    "status" : 1
  }, {
    "userId" : 9,
    "userName" : "user9",
    "password" : "999999",
    "status" : 1
  }, {
    "userId" : 10,
    "userName" : "user1010",
    "password" : "111111",
    "status" : 1
  }, {
    "userId" : 12,
    "userName" : "user11",
    "password" : "111111",
    "status" : 0
  }, {
    "userId" : 13,
    "userName" : "user123",
    "password" : "222222",
    "status" : 0
  }, {
    "userId" : 18,
    "userName" : "user167",
    "password" : "666666",
    "status" : 0
  }, {
    "userId" : 19,
    "userName" : "user19",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 20,
    "userName" : "user20",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 22,
    "userName" : "guoyan",
    "password" : "123456",
    "status" : 1
  }, {
    "userId" : 23,
    "userName" : "liuxinle",
    "password" : "111111",
    "status" : 1
  }, {
    "userId" : 24,
    "userName" : "maqiuyue",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 29,
    "userName" : "admin",
    "password" : "123456",
    "status" : 1
  }, {
    "userId" : 37,
    "userName" : "张三",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 41,
    "userName" : "王五愣2",
    "password" : "123456",
    "status" : 0
  } ]
}
2019-07-24 10:15:55,542 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 10:15:55,544 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String)
2019-07-24 10:15:55,550 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 10:15:55,558 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users 
2019-07-24 10:15:55,558 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 10:15:55,561 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 14
2019-07-24 10:15:55,563 DEBUG (UserController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 2,
    "userName" : "user2",
    "password" : "222222",
    "status" : 1
  }, {
    "userId" : 9,
    "userName" : "user9",
    "password" : "999999",
    "status" : 1
  }, {
    "userId" : 10,
    "userName" : "user1010",
    "password" : "111111",
    "status" : 1
  }, {
    "userId" : 12,
    "userName" : "user11",
    "password" : "111111",
    "status" : 0
  }, {
    "userId" : 13,
    "userName" : "user123",
    "password" : "222222",
    "status" : 0
  }, {
    "userId" : 18,
    "userName" : "user167",
    "password" : "666666",
    "status" : 0
  }, {
    "userId" : 19,
    "userName" : "user19",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 20,
    "userName" : "user20",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 22,
    "userName" : "guoyan",
    "password" : "123456",
    "status" : 1
  }, {
    "userId" : 23,
    "userName" : "liuxinle",
    "password" : "111111",
    "status" : 1
  }, {
    "userId" : 24,
    "userName" : "maqiuyue",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 29,
    "userName" : "admin",
    "password" : "123456",
    "status" : 1
  }, {
    "userId" : 37,
    "userName" : "张三",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 41,
    "userName" : "王五愣2",
    "password" : "123456",
    "status" : 0
  } ]
}
2019-07-24 10:15:56,483 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 10:15:56,485 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String)
2019-07-24 10:15:56,489 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 10:15:56,500 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users 
2019-07-24 10:15:56,501 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 10:15:56,509 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 14
2019-07-24 10:15:56,510 DEBUG (UserController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 2,
    "userName" : "user2",
    "password" : "222222",
    "status" : 1
  }, {
    "userId" : 9,
    "userName" : "user9",
    "password" : "999999",
    "status" : 1
  }, {
    "userId" : 10,
    "userName" : "user1010",
    "password" : "111111",
    "status" : 1
  }, {
    "userId" : 12,
    "userName" : "user11",
    "password" : "111111",
    "status" : 0
  }, {
    "userId" : 13,
    "userName" : "user123",
    "password" : "222222",
    "status" : 0
  }, {
    "userId" : 18,
    "userName" : "user167",
    "password" : "666666",
    "status" : 0
  }, {
    "userId" : 19,
    "userName" : "user19",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 20,
    "userName" : "user20",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 22,
    "userName" : "guoyan",
    "password" : "123456",
    "status" : 1
  }, {
    "userId" : 23,
    "userName" : "liuxinle",
    "password" : "111111",
    "status" : 1
  }, {
    "userId" : 24,
    "userName" : "maqiuyue",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 29,
    "userName" : "admin",
    "password" : "123456",
    "status" : 1
  }, {
    "userId" : 37,
    "userName" : "张三",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 41,
    "userName" : "王五愣2",
    "password" : "123456",
    "status" : 0
  } ]
}
2019-07-24 10:15:56,863 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 10:15:56,866 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String)
2019-07-24 10:15:56,870 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 10:15:56,881 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users 
2019-07-24 10:15:56,883 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 10:15:56,887 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 14
2019-07-24 10:15:56,888 DEBUG (UserController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 2,
    "userName" : "user2",
    "password" : "222222",
    "status" : 1
  }, {
    "userId" : 9,
    "userName" : "user9",
    "password" : "999999",
    "status" : 1
  }, {
    "userId" : 10,
    "userName" : "user1010",
    "password" : "111111",
    "status" : 1
  }, {
    "userId" : 12,
    "userName" : "user11",
    "password" : "111111",
    "status" : 0
  }, {
    "userId" : 13,
    "userName" : "user123",
    "password" : "222222",
    "status" : 0
  }, {
    "userId" : 18,
    "userName" : "user167",
    "password" : "666666",
    "status" : 0
  }, {
    "userId" : 19,
    "userName" : "user19",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 20,
    "userName" : "user20",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 22,
    "userName" : "guoyan",
    "password" : "123456",
    "status" : 1
  }, {
    "userId" : 23,
    "userName" : "liuxinle",
    "password" : "111111",
    "status" : 1
  }, {
    "userId" : 24,
    "userName" : "maqiuyue",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 29,
    "userName" : "admin",
    "password" : "123456",
    "status" : 1
  }, {
    "userId" : 37,
    "userName" : "张三",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 41,
    "userName" : "王五愣2",
    "password" : "123456",
    "status" : 0
  } ]
}
2019-07-24 10:15:57,001 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 10:15:57,005 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String)
2019-07-24 10:15:57,008 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 10:15:57,016 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users 
2019-07-24 10:15:57,017 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 10:15:57,021 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 14
2019-07-24 10:15:57,022 DEBUG (UserController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 2,
    "userName" : "user2",
    "password" : "222222",
    "status" : 1
  }, {
    "userId" : 9,
    "userName" : "user9",
    "password" : "999999",
    "status" : 1
  }, {
    "userId" : 10,
    "userName" : "user1010",
    "password" : "111111",
    "status" : 1
  }, {
    "userId" : 12,
    "userName" : "user11",
    "password" : "111111",
    "status" : 0
  }, {
    "userId" : 13,
    "userName" : "user123",
    "password" : "222222",
    "status" : 0
  }, {
    "userId" : 18,
    "userName" : "user167",
    "password" : "666666",
    "status" : 0
  }, {
    "userId" : 19,
    "userName" : "user19",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 20,
    "userName" : "user20",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 22,
    "userName" : "guoyan",
    "password" : "123456",
    "status" : 1
  }, {
    "userId" : 23,
    "userName" : "liuxinle",
    "password" : "111111",
    "status" : 1
  }, {
    "userId" : 24,
    "userName" : "maqiuyue",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 29,
    "userName" : "admin",
    "password" : "123456",
    "status" : 1
  }, {
    "userId" : 37,
    "userName" : "张三",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 41,
    "userName" : "王五愣2",
    "password" : "123456",
    "status" : 0
  } ]
}
2019-07-24 10:15:57,088 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 10:15:57,089 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String)
2019-07-24 10:15:57,092 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 10:15:57,102 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users 
2019-07-24 10:15:57,103 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 10:15:57,107 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 14
2019-07-24 10:15:57,110 DEBUG (UserController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 2,
    "userName" : "user2",
    "password" : "222222",
    "status" : 1
  }, {
    "userId" : 9,
    "userName" : "user9",
    "password" : "999999",
    "status" : 1
  }, {
    "userId" : 10,
    "userName" : "user1010",
    "password" : "111111",
    "status" : 1
  }, {
    "userId" : 12,
    "userName" : "user11",
    "password" : "111111",
    "status" : 0
  }, {
    "userId" : 13,
    "userName" : "user123",
    "password" : "222222",
    "status" : 0
  }, {
    "userId" : 18,
    "userName" : "user167",
    "password" : "666666",
    "status" : 0
  }, {
    "userId" : 19,
    "userName" : "user19",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 20,
    "userName" : "user20",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 22,
    "userName" : "guoyan",
    "password" : "123456",
    "status" : 1
  }, {
    "userId" : 23,
    "userName" : "liuxinle",
    "password" : "111111",
    "status" : 1
  }, {
    "userId" : 24,
    "userName" : "maqiuyue",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 29,
    "userName" : "admin",
    "password" : "123456",
    "status" : 1
  }, {
    "userId" : 37,
    "userName" : "张三",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 41,
    "userName" : "王五愣2",
    "password" : "123456",
    "status" : 0
  } ]
}
2019-07-24 10:15:57,254 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 10:15:57,256 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String)
2019-07-24 10:15:57,259 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 10:15:57,269 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users 
2019-07-24 10:15:57,270 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 10:15:57,274 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 14
2019-07-24 10:15:57,275 DEBUG (UserController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 2,
    "userName" : "user2",
    "password" : "222222",
    "status" : 1
  }, {
    "userId" : 9,
    "userName" : "user9",
    "password" : "999999",
    "status" : 1
  }, {
    "userId" : 10,
    "userName" : "user1010",
    "password" : "111111",
    "status" : 1
  }, {
    "userId" : 12,
    "userName" : "user11",
    "password" : "111111",
    "status" : 0
  }, {
    "userId" : 13,
    "userName" : "user123",
    "password" : "222222",
    "status" : 0
  }, {
    "userId" : 18,
    "userName" : "user167",
    "password" : "666666",
    "status" : 0
  }, {
    "userId" : 19,
    "userName" : "user19",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 20,
    "userName" : "user20",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 22,
    "userName" : "guoyan",
    "password" : "123456",
    "status" : 1
  }, {
    "userId" : 23,
    "userName" : "liuxinle",
    "password" : "111111",
    "status" : 1
  }, {
    "userId" : 24,
    "userName" : "maqiuyue",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 29,
    "userName" : "admin",
    "password" : "123456",
    "status" : 1
  }, {
    "userId" : 37,
    "userName" : "张三",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 41,
    "userName" : "王五愣2",
    "password" : "123456",
    "status" : 0
  } ]
}
2019-07-24 10:16:12,635 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 10:16:12,636 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String)
2019-07-24 10:16:12,639 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 10:16:12,649 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users 
2019-07-24 10:16:12,650 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 10:16:12,653 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 14
2019-07-24 10:16:12,655 DEBUG (UserController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 2,
    "userName" : "user2",
    "password" : "222222",
    "status" : 1
  }, {
    "userId" : 9,
    "userName" : "user9",
    "password" : "999999",
    "status" : 1
  }, {
    "userId" : 10,
    "userName" : "user1010",
    "password" : "111111",
    "status" : 1
  }, {
    "userId" : 12,
    "userName" : "user11",
    "password" : "111111",
    "status" : 0
  }, {
    "userId" : 13,
    "userName" : "user123",
    "password" : "222222",
    "status" : 0
  }, {
    "userId" : 18,
    "userName" : "user167",
    "password" : "666666",
    "status" : 0
  }, {
    "userId" : 19,
    "userName" : "user19",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 20,
    "userName" : "user20",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 22,
    "userName" : "guoyan",
    "password" : "123456",
    "status" : 1
  }, {
    "userId" : 23,
    "userName" : "liuxinle",
    "password" : "111111",
    "status" : 1
  }, {
    "userId" : 24,
    "userName" : "maqiuyue",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 29,
    "userName" : "admin",
    "password" : "123456",
    "status" : 1
  }, {
    "userId" : 37,
    "userName" : "张三",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 41,
    "userName" : "王五愣2",
    "password" : "123456",
    "status" : 0
  } ]
}
2019-07-24 10:16:13,691 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 10:16:13,693 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String)
2019-07-24 10:16:13,695 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 10:16:13,702 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users 
2019-07-24 10:16:13,703 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 10:16:13,706 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 14
2019-07-24 10:16:13,708 DEBUG (UserController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 2,
    "userName" : "user2",
    "password" : "222222",
    "status" : 1
  }, {
    "userId" : 9,
    "userName" : "user9",
    "password" : "999999",
    "status" : 1
  }, {
    "userId" : 10,
    "userName" : "user1010",
    "password" : "111111",
    "status" : 1
  }, {
    "userId" : 12,
    "userName" : "user11",
    "password" : "111111",
    "status" : 0
  }, {
    "userId" : 13,
    "userName" : "user123",
    "password" : "222222",
    "status" : 0
  }, {
    "userId" : 18,
    "userName" : "user167",
    "password" : "666666",
    "status" : 0
  }, {
    "userId" : 19,
    "userName" : "user19",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 20,
    "userName" : "user20",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 22,
    "userName" : "guoyan",
    "password" : "123456",
    "status" : 1
  }, {
    "userId" : 23,
    "userName" : "liuxinle",
    "password" : "111111",
    "status" : 1
  }, {
    "userId" : 24,
    "userName" : "maqiuyue",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 29,
    "userName" : "admin",
    "password" : "123456",
    "status" : 1
  }, {
    "userId" : 37,
    "userName" : "张三",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 41,
    "userName" : "王五愣2",
    "password" : "123456",
    "status" : 0
  } ]
}
2019-07-24 10:16:13,879 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 10:16:13,881 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String)
2019-07-24 10:16:13,884 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 10:16:13,893 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users 
2019-07-24 10:16:13,894 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 10:16:13,905 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 14
2019-07-24 10:16:13,906 DEBUG (UserController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 2,
    "userName" : "user2",
    "password" : "222222",
    "status" : 1
  }, {
    "userId" : 9,
    "userName" : "user9",
    "password" : "999999",
    "status" : 1
  }, {
    "userId" : 10,
    "userName" : "user1010",
    "password" : "111111",
    "status" : 1
  }, {
    "userId" : 12,
    "userName" : "user11",
    "password" : "111111",
    "status" : 0
  }, {
    "userId" : 13,
    "userName" : "user123",
    "password" : "222222",
    "status" : 0
  }, {
    "userId" : 18,
    "userName" : "user167",
    "password" : "666666",
    "status" : 0
  }, {
    "userId" : 19,
    "userName" : "user19",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 20,
    "userName" : "user20",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 22,
    "userName" : "guoyan",
    "password" : "123456",
    "status" : 1
  }, {
    "userId" : 23,
    "userName" : "liuxinle",
    "password" : "111111",
    "status" : 1
  }, {
    "userId" : 24,
    "userName" : "maqiuyue",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 29,
    "userName" : "admin",
    "password" : "123456",
    "status" : 1
  }, {
    "userId" : 37,
    "userName" : "张三",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 41,
    "userName" : "王五愣2",
    "password" : "123456",
    "status" : 0
  } ]
}
2019-07-24 10:16:14,073 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 10:16:14,075 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String)
2019-07-24 10:16:14,080 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 10:16:14,088 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users 
2019-07-24 10:16:14,089 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 10:16:14,092 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 14
2019-07-24 10:16:14,094 DEBUG (UserController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 2,
    "userName" : "user2",
    "password" : "222222",
    "status" : 1
  }, {
    "userId" : 9,
    "userName" : "user9",
    "password" : "999999",
    "status" : 1
  }, {
    "userId" : 10,
    "userName" : "user1010",
    "password" : "111111",
    "status" : 1
  }, {
    "userId" : 12,
    "userName" : "user11",
    "password" : "111111",
    "status" : 0
  }, {
    "userId" : 13,
    "userName" : "user123",
    "password" : "222222",
    "status" : 0
  }, {
    "userId" : 18,
    "userName" : "user167",
    "password" : "666666",
    "status" : 0
  }, {
    "userId" : 19,
    "userName" : "user19",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 20,
    "userName" : "user20",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 22,
    "userName" : "guoyan",
    "password" : "123456",
    "status" : 1
  }, {
    "userId" : 23,
    "userName" : "liuxinle",
    "password" : "111111",
    "status" : 1
  }, {
    "userId" : 24,
    "userName" : "maqiuyue",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 29,
    "userName" : "admin",
    "password" : "123456",
    "status" : 1
  }, {
    "userId" : 37,
    "userName" : "张三",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 41,
    "userName" : "王五愣2",
    "password" : "123456",
    "status" : 0
  } ]
}
2019-07-24 10:17:12,109 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 10:17:12,111 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String)
2019-07-24 10:17:12,114 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 10:19:30,573 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 10:19:30,574 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String)
2019-07-24 10:19:30,576 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 10:19:30,585 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users 
2019-07-24 10:19:30,587 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 10:19:30,591 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 14
2019-07-24 10:19:30,592 DEBUG (UserController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 2,
    "userName" : "user2",
    "password" : "222222",
    "status" : 1
  }, {
    "userId" : 9,
    "userName" : "user9",
    "password" : "999999",
    "status" : 1
  }, {
    "userId" : 10,
    "userName" : "user1010",
    "password" : "111111",
    "status" : 1
  }, {
    "userId" : 12,
    "userName" : "user11",
    "password" : "111111",
    "status" : 0
  }, {
    "userId" : 13,
    "userName" : "user123",
    "password" : "222222",
    "status" : 0
  }, {
    "userId" : 18,
    "userName" : "user167",
    "password" : "666666",
    "status" : 0
  }, {
    "userId" : 19,
    "userName" : "user19",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 20,
    "userName" : "user20",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 22,
    "userName" : "guoyan",
    "password" : "123456",
    "status" : 1
  }, {
    "userId" : 23,
    "userName" : "liuxinle",
    "password" : "111111",
    "status" : 1
  }, {
    "userId" : 24,
    "userName" : "maqiuyue",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 29,
    "userName" : "admin",
    "password" : "123456",
    "status" : 1
  }, {
    "userId" : 37,
    "userName" : "张三",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 41,
    "userName" : "王五愣2",
    "password" : "123456",
    "status" : 0
  } ]
}
2019-07-24 10:19:35,009 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 10:19:35,011 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String)
2019-07-24 10:19:35,014 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 10:19:35,022 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users 
2019-07-24 10:19:35,023 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 10:19:35,026 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 14
2019-07-24 10:19:35,028 DEBUG (UserController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 2,
    "userName" : "user2",
    "password" : "222222",
    "status" : 1
  }, {
    "userId" : 9,
    "userName" : "user9",
    "password" : "999999",
    "status" : 1
  }, {
    "userId" : 10,
    "userName" : "user1010",
    "password" : "111111",
    "status" : 1
  }, {
    "userId" : 12,
    "userName" : "user11",
    "password" : "111111",
    "status" : 0
  }, {
    "userId" : 13,
    "userName" : "user123",
    "password" : "222222",
    "status" : 0
  }, {
    "userId" : 18,
    "userName" : "user167",
    "password" : "666666",
    "status" : 0
  }, {
    "userId" : 19,
    "userName" : "user19",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 20,
    "userName" : "user20",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 22,
    "userName" : "guoyan",
    "password" : "123456",
    "status" : 1
  }, {
    "userId" : 23,
    "userName" : "liuxinle",
    "password" : "111111",
    "status" : 1
  }, {
    "userId" : 24,
    "userName" : "maqiuyue",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 29,
    "userName" : "admin",
    "password" : "123456",
    "status" : 1
  }, {
    "userId" : 37,
    "userName" : "张三",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 41,
    "userName" : "王五愣2",
    "password" : "123456",
    "status" : 0
  } ]
}
2019-07-24 10:19:36,137 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 10:19:36,139 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String)
2019-07-24 10:19:36,143 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 10:19:36,150 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users 
2019-07-24 10:19:36,151 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 10:19:36,154 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 14
2019-07-24 10:19:36,155 DEBUG (UserController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 2,
    "userName" : "user2",
    "password" : "222222",
    "status" : 1
  }, {
    "userId" : 9,
    "userName" : "user9",
    "password" : "999999",
    "status" : 1
  }, {
    "userId" : 10,
    "userName" : "user1010",
    "password" : "111111",
    "status" : 1
  }, {
    "userId" : 12,
    "userName" : "user11",
    "password" : "111111",
    "status" : 0
  }, {
    "userId" : 13,
    "userName" : "user123",
    "password" : "222222",
    "status" : 0
  }, {
    "userId" : 18,
    "userName" : "user167",
    "password" : "666666",
    "status" : 0
  }, {
    "userId" : 19,
    "userName" : "user19",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 20,
    "userName" : "user20",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 22,
    "userName" : "guoyan",
    "password" : "123456",
    "status" : 1
  }, {
    "userId" : 23,
    "userName" : "liuxinle",
    "password" : "111111",
    "status" : 1
  }, {
    "userId" : 24,
    "userName" : "maqiuyue",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 29,
    "userName" : "admin",
    "password" : "123456",
    "status" : 1
  }, {
    "userId" : 37,
    "userName" : "张三",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 41,
    "userName" : "王五愣2",
    "password" : "123456",
    "status" : 0
  } ]
}
2019-07-24 10:19:36,378 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 10:19:36,380 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String)
2019-07-24 10:19:36,382 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 10:19:36,389 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users 
2019-07-24 10:19:36,390 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 10:19:36,393 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 14
2019-07-24 10:19:36,394 DEBUG (UserController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 2,
    "userName" : "user2",
    "password" : "222222",
    "status" : 1
  }, {
    "userId" : 9,
    "userName" : "user9",
    "password" : "999999",
    "status" : 1
  }, {
    "userId" : 10,
    "userName" : "user1010",
    "password" : "111111",
    "status" : 1
  }, {
    "userId" : 12,
    "userName" : "user11",
    "password" : "111111",
    "status" : 0
  }, {
    "userId" : 13,
    "userName" : "user123",
    "password" : "222222",
    "status" : 0
  }, {
    "userId" : 18,
    "userName" : "user167",
    "password" : "666666",
    "status" : 0
  }, {
    "userId" : 19,
    "userName" : "user19",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 20,
    "userName" : "user20",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 22,
    "userName" : "guoyan",
    "password" : "123456",
    "status" : 1
  }, {
    "userId" : 23,
    "userName" : "liuxinle",
    "password" : "111111",
    "status" : 1
  }, {
    "userId" : 24,
    "userName" : "maqiuyue",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 29,
    "userName" : "admin",
    "password" : "123456",
    "status" : 1
  }, {
    "userId" : 37,
    "userName" : "张三",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 41,
    "userName" : "王五愣2",
    "password" : "123456",
    "status" : 0
  } ]
}
2019-07-24 10:19:36,545 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 10:19:36,546 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String)
2019-07-24 10:19:36,548 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 10:19:36,555 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users 
2019-07-24 10:19:36,556 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 10:19:36,561 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 14
2019-07-24 10:19:36,562 DEBUG (UserController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 2,
    "userName" : "user2",
    "password" : "222222",
    "status" : 1
  }, {
    "userId" : 9,
    "userName" : "user9",
    "password" : "999999",
    "status" : 1
  }, {
    "userId" : 10,
    "userName" : "user1010",
    "password" : "111111",
    "status" : 1
  }, {
    "userId" : 12,
    "userName" : "user11",
    "password" : "111111",
    "status" : 0
  }, {
    "userId" : 13,
    "userName" : "user123",
    "password" : "222222",
    "status" : 0
  }, {
    "userId" : 18,
    "userName" : "user167",
    "password" : "666666",
    "status" : 0
  }, {
    "userId" : 19,
    "userName" : "user19",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 20,
    "userName" : "user20",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 22,
    "userName" : "guoyan",
    "password" : "123456",
    "status" : 1
  }, {
    "userId" : 23,
    "userName" : "liuxinle",
    "password" : "111111",
    "status" : 1
  }, {
    "userId" : 24,
    "userName" : "maqiuyue",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 29,
    "userName" : "admin",
    "password" : "123456",
    "status" : 1
  }, {
    "userId" : 37,
    "userName" : "张三",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 41,
    "userName" : "王五愣2",
    "password" : "123456",
    "status" : 0
  } ]
}
2019-07-24 10:19:36,734 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 10:19:36,735 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String)
2019-07-24 10:19:36,738 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 10:19:36,745 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users 
2019-07-24 10:19:36,746 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 10:19:36,749 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 14
2019-07-24 10:19:36,750 DEBUG (UserController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 2,
    "userName" : "user2",
    "password" : "222222",
    "status" : 1
  }, {
    "userId" : 9,
    "userName" : "user9",
    "password" : "999999",
    "status" : 1
  }, {
    "userId" : 10,
    "userName" : "user1010",
    "password" : "111111",
    "status" : 1
  }, {
    "userId" : 12,
    "userName" : "user11",
    "password" : "111111",
    "status" : 0
  }, {
    "userId" : 13,
    "userName" : "user123",
    "password" : "222222",
    "status" : 0
  }, {
    "userId" : 18,
    "userName" : "user167",
    "password" : "666666",
    "status" : 0
  }, {
    "userId" : 19,
    "userName" : "user19",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 20,
    "userName" : "user20",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 22,
    "userName" : "guoyan",
    "password" : "123456",
    "status" : 1
  }, {
    "userId" : 23,
    "userName" : "liuxinle",
    "password" : "111111",
    "status" : 1
  }, {
    "userId" : 24,
    "userName" : "maqiuyue",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 29,
    "userName" : "admin",
    "password" : "123456",
    "status" : 1
  }, {
    "userId" : 37,
    "userName" : "张三",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 41,
    "userName" : "王五愣2",
    "password" : "123456",
    "status" : 0
  } ]
}
2019-07-24 10:19:36,910 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 10:19:36,912 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String)
2019-07-24 10:19:36,914 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 10:19:36,921 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users 
2019-07-24 10:19:36,922 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 10:19:36,925 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 14
2019-07-24 10:19:36,926 DEBUG (UserController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 2,
    "userName" : "user2",
    "password" : "222222",
    "status" : 1
  }, {
    "userId" : 9,
    "userName" : "user9",
    "password" : "999999",
    "status" : 1
  }, {
    "userId" : 10,
    "userName" : "user1010",
    "password" : "111111",
    "status" : 1
  }, {
    "userId" : 12,
    "userName" : "user11",
    "password" : "111111",
    "status" : 0
  }, {
    "userId" : 13,
    "userName" : "user123",
    "password" : "222222",
    "status" : 0
  }, {
    "userId" : 18,
    "userName" : "user167",
    "password" : "666666",
    "status" : 0
  }, {
    "userId" : 19,
    "userName" : "user19",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 20,
    "userName" : "user20",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 22,
    "userName" : "guoyan",
    "password" : "123456",
    "status" : 1
  }, {
    "userId" : 23,
    "userName" : "liuxinle",
    "password" : "111111",
    "status" : 1
  }, {
    "userId" : 24,
    "userName" : "maqiuyue",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 29,
    "userName" : "admin",
    "password" : "123456",
    "status" : 1
  }, {
    "userId" : 37,
    "userName" : "张三",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 41,
    "userName" : "王五愣2",
    "password" : "123456",
    "status" : 0
  } ]
}
2019-07-24 10:19:37,068 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 10:19:37,072 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String)
2019-07-24 10:19:37,074 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 10:19:37,082 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users 
2019-07-24 10:19:37,083 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 10:19:37,085 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 14
2019-07-24 10:19:37,086 DEBUG (UserController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 2,
    "userName" : "user2",
    "password" : "222222",
    "status" : 1
  }, {
    "userId" : 9,
    "userName" : "user9",
    "password" : "999999",
    "status" : 1
  }, {
    "userId" : 10,
    "userName" : "user1010",
    "password" : "111111",
    "status" : 1
  }, {
    "userId" : 12,
    "userName" : "user11",
    "password" : "111111",
    "status" : 0
  }, {
    "userId" : 13,
    "userName" : "user123",
    "password" : "222222",
    "status" : 0
  }, {
    "userId" : 18,
    "userName" : "user167",
    "password" : "666666",
    "status" : 0
  }, {
    "userId" : 19,
    "userName" : "user19",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 20,
    "userName" : "user20",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 22,
    "userName" : "guoyan",
    "password" : "123456",
    "status" : 1
  }, {
    "userId" : 23,
    "userName" : "liuxinle",
    "password" : "111111",
    "status" : 1
  }, {
    "userId" : 24,
    "userName" : "maqiuyue",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 29,
    "userName" : "admin",
    "password" : "123456",
    "status" : 1
  }, {
    "userId" : 37,
    "userName" : "张三",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 41,
    "userName" : "王五愣2",
    "password" : "123456",
    "status" : 0
  } ]
}
2019-07-24 10:19:37,229 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 10:19:37,231 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String)
2019-07-24 10:19:37,233 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 10:19:37,239 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users 
2019-07-24 10:19:37,240 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 10:19:37,243 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 14
2019-07-24 10:19:37,244 DEBUG (UserController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 2,
    "userName" : "user2",
    "password" : "222222",
    "status" : 1
  }, {
    "userId" : 9,
    "userName" : "user9",
    "password" : "999999",
    "status" : 1
  }, {
    "userId" : 10,
    "userName" : "user1010",
    "password" : "111111",
    "status" : 1
  }, {
    "userId" : 12,
    "userName" : "user11",
    "password" : "111111",
    "status" : 0
  }, {
    "userId" : 13,
    "userName" : "user123",
    "password" : "222222",
    "status" : 0
  }, {
    "userId" : 18,
    "userName" : "user167",
    "password" : "666666",
    "status" : 0
  }, {
    "userId" : 19,
    "userName" : "user19",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 20,
    "userName" : "user20",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 22,
    "userName" : "guoyan",
    "password" : "123456",
    "status" : 1
  }, {
    "userId" : 23,
    "userName" : "liuxinle",
    "password" : "111111",
    "status" : 1
  }, {
    "userId" : 24,
    "userName" : "maqiuyue",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 29,
    "userName" : "admin",
    "password" : "123456",
    "status" : 1
  }, {
    "userId" : 37,
    "userName" : "张三",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 41,
    "userName" : "王五愣2",
    "password" : "123456",
    "status" : 0
  } ]
}
2019-07-24 10:19:37,441 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 10:19:37,443 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String)
2019-07-24 10:19:37,445 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 10:19:37,452 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users 
2019-07-24 10:19:37,455 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 10:19:37,458 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 14
2019-07-24 10:19:37,459 DEBUG (UserController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 2,
    "userName" : "user2",
    "password" : "222222",
    "status" : 1
  }, {
    "userId" : 9,
    "userName" : "user9",
    "password" : "999999",
    "status" : 1
  }, {
    "userId" : 10,
    "userName" : "user1010",
    "password" : "111111",
    "status" : 1
  }, {
    "userId" : 12,
    "userName" : "user11",
    "password" : "111111",
    "status" : 0
  }, {
    "userId" : 13,
    "userName" : "user123",
    "password" : "222222",
    "status" : 0
  }, {
    "userId" : 18,
    "userName" : "user167",
    "password" : "666666",
    "status" : 0
  }, {
    "userId" : 19,
    "userName" : "user19",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 20,
    "userName" : "user20",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 22,
    "userName" : "guoyan",
    "password" : "123456",
    "status" : 1
  }, {
    "userId" : 23,
    "userName" : "liuxinle",
    "password" : "111111",
    "status" : 1
  }, {
    "userId" : 24,
    "userName" : "maqiuyue",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 29,
    "userName" : "admin",
    "password" : "123456",
    "status" : 1
  }, {
    "userId" : 37,
    "userName" : "张三",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 41,
    "userName" : "王五愣2",
    "password" : "123456",
    "status" : 0
  } ]
}
2019-07-24 10:19:38,214 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 10:19:38,215 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String)
2019-07-24 10:19:38,217 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 10:19:38,225 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users 
2019-07-24 10:19:38,226 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 10:19:38,228 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 14
2019-07-24 10:19:38,230 DEBUG (UserController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 2,
    "userName" : "user2",
    "password" : "222222",
    "status" : 1
  }, {
    "userId" : 9,
    "userName" : "user9",
    "password" : "999999",
    "status" : 1
  }, {
    "userId" : 10,
    "userName" : "user1010",
    "password" : "111111",
    "status" : 1
  }, {
    "userId" : 12,
    "userName" : "user11",
    "password" : "111111",
    "status" : 0
  }, {
    "userId" : 13,
    "userName" : "user123",
    "password" : "222222",
    "status" : 0
  }, {
    "userId" : 18,
    "userName" : "user167",
    "password" : "666666",
    "status" : 0
  }, {
    "userId" : 19,
    "userName" : "user19",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 20,
    "userName" : "user20",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 22,
    "userName" : "guoyan",
    "password" : "123456",
    "status" : 1
  }, {
    "userId" : 23,
    "userName" : "liuxinle",
    "password" : "111111",
    "status" : 1
  }, {
    "userId" : 24,
    "userName" : "maqiuyue",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 29,
    "userName" : "admin",
    "password" : "123456",
    "status" : 1
  }, {
    "userId" : 37,
    "userName" : "张三",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 41,
    "userName" : "王五愣2",
    "password" : "123456",
    "status" : 0
  } ]
}
2019-07-24 10:19:38,388 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 10:19:38,389 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String)
2019-07-24 10:19:38,391 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 10:19:38,404 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users 
2019-07-24 10:19:38,406 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 10:19:38,409 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 14
2019-07-24 10:19:38,410 DEBUG (UserController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 2,
    "userName" : "user2",
    "password" : "222222",
    "status" : 1
  }, {
    "userId" : 9,
    "userName" : "user9",
    "password" : "999999",
    "status" : 1
  }, {
    "userId" : 10,
    "userName" : "user1010",
    "password" : "111111",
    "status" : 1
  }, {
    "userId" : 12,
    "userName" : "user11",
    "password" : "111111",
    "status" : 0
  }, {
    "userId" : 13,
    "userName" : "user123",
    "password" : "222222",
    "status" : 0
  }, {
    "userId" : 18,
    "userName" : "user167",
    "password" : "666666",
    "status" : 0
  }, {
    "userId" : 19,
    "userName" : "user19",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 20,
    "userName" : "user20",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 22,
    "userName" : "guoyan",
    "password" : "123456",
    "status" : 1
  }, {
    "userId" : 23,
    "userName" : "liuxinle",
    "password" : "111111",
    "status" : 1
  }, {
    "userId" : 24,
    "userName" : "maqiuyue",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 29,
    "userName" : "admin",
    "password" : "123456",
    "status" : 1
  }, {
    "userId" : 37,
    "userName" : "张三",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 41,
    "userName" : "王五愣2",
    "password" : "123456",
    "status" : 0
  } ]
}
2019-07-24 10:19:38,559 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 10:19:38,560 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String)
2019-07-24 10:19:38,562 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 10:19:38,569 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users 
2019-07-24 10:19:38,570 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 10:19:38,573 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 14
2019-07-24 10:19:38,574 DEBUG (UserController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 2,
    "userName" : "user2",
    "password" : "222222",
    "status" : 1
  }, {
    "userId" : 9,
    "userName" : "user9",
    "password" : "999999",
    "status" : 1
  }, {
    "userId" : 10,
    "userName" : "user1010",
    "password" : "111111",
    "status" : 1
  }, {
    "userId" : 12,
    "userName" : "user11",
    "password" : "111111",
    "status" : 0
  }, {
    "userId" : 13,
    "userName" : "user123",
    "password" : "222222",
    "status" : 0
  }, {
    "userId" : 18,
    "userName" : "user167",
    "password" : "666666",
    "status" : 0
  }, {
    "userId" : 19,
    "userName" : "user19",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 20,
    "userName" : "user20",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 22,
    "userName" : "guoyan",
    "password" : "123456",
    "status" : 1
  }, {
    "userId" : 23,
    "userName" : "liuxinle",
    "password" : "111111",
    "status" : 1
  }, {
    "userId" : 24,
    "userName" : "maqiuyue",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 29,
    "userName" : "admin",
    "password" : "123456",
    "status" : 1
  }, {
    "userId" : 37,
    "userName" : "张三",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 41,
    "userName" : "王五愣2",
    "password" : "123456",
    "status" : 0
  } ]
}
2019-07-24 10:19:38,733 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 10:19:38,734 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String)
2019-07-24 10:19:38,736 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 10:19:38,744 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users 
2019-07-24 10:19:38,745 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 10:19:38,747 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 14
2019-07-24 10:19:38,749 DEBUG (UserController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 2,
    "userName" : "user2",
    "password" : "222222",
    "status" : 1
  }, {
    "userId" : 9,
    "userName" : "user9",
    "password" : "999999",
    "status" : 1
  }, {
    "userId" : 10,
    "userName" : "user1010",
    "password" : "111111",
    "status" : 1
  }, {
    "userId" : 12,
    "userName" : "user11",
    "password" : "111111",
    "status" : 0
  }, {
    "userId" : 13,
    "userName" : "user123",
    "password" : "222222",
    "status" : 0
  }, {
    "userId" : 18,
    "userName" : "user167",
    "password" : "666666",
    "status" : 0
  }, {
    "userId" : 19,
    "userName" : "user19",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 20,
    "userName" : "user20",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 22,
    "userName" : "guoyan",
    "password" : "123456",
    "status" : 1
  }, {
    "userId" : 23,
    "userName" : "liuxinle",
    "password" : "111111",
    "status" : 1
  }, {
    "userId" : 24,
    "userName" : "maqiuyue",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 29,
    "userName" : "admin",
    "password" : "123456",
    "status" : 1
  }, {
    "userId" : 37,
    "userName" : "张三",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 41,
    "userName" : "王五愣2",
    "password" : "123456",
    "status" : 0
  } ]
}
2019-07-24 10:19:39,001 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 10:19:39,002 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String)
2019-07-24 10:19:39,005 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 10:19:39,011 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users 
2019-07-24 10:19:39,012 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 10:19:39,015 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 14
2019-07-24 10:19:39,016 DEBUG (UserController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 2,
    "userName" : "user2",
    "password" : "222222",
    "status" : 1
  }, {
    "userId" : 9,
    "userName" : "user9",
    "password" : "999999",
    "status" : 1
  }, {
    "userId" : 10,
    "userName" : "user1010",
    "password" : "111111",
    "status" : 1
  }, {
    "userId" : 12,
    "userName" : "user11",
    "password" : "111111",
    "status" : 0
  }, {
    "userId" : 13,
    "userName" : "user123",
    "password" : "222222",
    "status" : 0
  }, {
    "userId" : 18,
    "userName" : "user167",
    "password" : "666666",
    "status" : 0
  }, {
    "userId" : 19,
    "userName" : "user19",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 20,
    "userName" : "user20",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 22,
    "userName" : "guoyan",
    "password" : "123456",
    "status" : 1
  }, {
    "userId" : 23,
    "userName" : "liuxinle",
    "password" : "111111",
    "status" : 1
  }, {
    "userId" : 24,
    "userName" : "maqiuyue",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 29,
    "userName" : "admin",
    "password" : "123456",
    "status" : 1
  }, {
    "userId" : 37,
    "userName" : "张三",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 41,
    "userName" : "王五愣2",
    "password" : "123456",
    "status" : 0
  } ]
}
2019-07-24 10:19:39,346 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 10:19:39,347 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String)
2019-07-24 10:19:39,349 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 10:19:39,361 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users 
2019-07-24 10:19:39,362 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 10:19:39,364 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 14
2019-07-24 10:19:39,365 DEBUG (UserController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 2,
    "userName" : "user2",
    "password" : "222222",
    "status" : 1
  }, {
    "userId" : 9,
    "userName" : "user9",
    "password" : "999999",
    "status" : 1
  }, {
    "userId" : 10,
    "userName" : "user1010",
    "password" : "111111",
    "status" : 1
  }, {
    "userId" : 12,
    "userName" : "user11",
    "password" : "111111",
    "status" : 0
  }, {
    "userId" : 13,
    "userName" : "user123",
    "password" : "222222",
    "status" : 0
  }, {
    "userId" : 18,
    "userName" : "user167",
    "password" : "666666",
    "status" : 0
  }, {
    "userId" : 19,
    "userName" : "user19",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 20,
    "userName" : "user20",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 22,
    "userName" : "guoyan",
    "password" : "123456",
    "status" : 1
  }, {
    "userId" : 23,
    "userName" : "liuxinle",
    "password" : "111111",
    "status" : 1
  }, {
    "userId" : 24,
    "userName" : "maqiuyue",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 29,
    "userName" : "admin",
    "password" : "123456",
    "status" : 1
  }, {
    "userId" : 37,
    "userName" : "张三",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 41,
    "userName" : "王五愣2",
    "password" : "123456",
    "status" : 0
  } ]
}
2019-07-24 10:19:39,522 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 10:19:39,523 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String)
2019-07-24 10:19:39,525 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 10:19:39,533 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users 
2019-07-24 10:19:39,534 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 10:19:39,536 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 14
2019-07-24 10:19:39,538 DEBUG (UserController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 2,
    "userName" : "user2",
    "password" : "222222",
    "status" : 1
  }, {
    "userId" : 9,
    "userName" : "user9",
    "password" : "999999",
    "status" : 1
  }, {
    "userId" : 10,
    "userName" : "user1010",
    "password" : "111111",
    "status" : 1
  }, {
    "userId" : 12,
    "userName" : "user11",
    "password" : "111111",
    "status" : 0
  }, {
    "userId" : 13,
    "userName" : "user123",
    "password" : "222222",
    "status" : 0
  }, {
    "userId" : 18,
    "userName" : "user167",
    "password" : "666666",
    "status" : 0
  }, {
    "userId" : 19,
    "userName" : "user19",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 20,
    "userName" : "user20",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 22,
    "userName" : "guoyan",
    "password" : "123456",
    "status" : 1
  }, {
    "userId" : 23,
    "userName" : "liuxinle",
    "password" : "111111",
    "status" : 1
  }, {
    "userId" : 24,
    "userName" : "maqiuyue",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 29,
    "userName" : "admin",
    "password" : "123456",
    "status" : 1
  }, {
    "userId" : 37,
    "userName" : "张三",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 41,
    "userName" : "王五愣2",
    "password" : "123456",
    "status" : 0
  } ]
}
2019-07-24 10:20:55,341 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 10:20:55,343 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String)
2019-07-24 10:20:55,345 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 10:20:55,355 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users 
2019-07-24 10:20:55,356 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 10:20:55,359 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 14
2019-07-24 10:20:55,360 DEBUG (UserController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 2,
    "userName" : "user2",
    "password" : "222222",
    "status" : 1
  }, {
    "userId" : 9,
    "userName" : "user9",
    "password" : "999999",
    "status" : 1
  }, {
    "userId" : 10,
    "userName" : "user1010",
    "password" : "111111",
    "status" : 1
  }, {
    "userId" : 12,
    "userName" : "user11",
    "password" : "111111",
    "status" : 0
  }, {
    "userId" : 13,
    "userName" : "user123",
    "password" : "222222",
    "status" : 0
  }, {
    "userId" : 18,
    "userName" : "user167",
    "password" : "666666",
    "status" : 0
  }, {
    "userId" : 19,
    "userName" : "user19",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 20,
    "userName" : "user20",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 22,
    "userName" : "guoyan",
    "password" : "123456",
    "status" : 1
  }, {
    "userId" : 23,
    "userName" : "liuxinle",
    "password" : "111111",
    "status" : 1
  }, {
    "userId" : 24,
    "userName" : "maqiuyue",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 29,
    "userName" : "admin",
    "password" : "123456",
    "status" : 1
  }, {
    "userId" : 37,
    "userName" : "张三",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 41,
    "userName" : "王五愣2",
    "password" : "123456",
    "status" : 0
  } ]
}
2019-07-24 10:20:56,810 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 10:20:56,811 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String)
2019-07-24 10:20:56,813 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 10:20:56,822 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users 
2019-07-24 10:20:56,823 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 10:20:56,825 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 14
2019-07-24 10:20:56,826 DEBUG (UserController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 2,
    "userName" : "user2",
    "password" : "222222",
    "status" : 1
  }, {
    "userId" : 9,
    "userName" : "user9",
    "password" : "999999",
    "status" : 1
  }, {
    "userId" : 10,
    "userName" : "user1010",
    "password" : "111111",
    "status" : 1
  }, {
    "userId" : 12,
    "userName" : "user11",
    "password" : "111111",
    "status" : 0
  }, {
    "userId" : 13,
    "userName" : "user123",
    "password" : "222222",
    "status" : 0
  }, {
    "userId" : 18,
    "userName" : "user167",
    "password" : "666666",
    "status" : 0
  }, {
    "userId" : 19,
    "userName" : "user19",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 20,
    "userName" : "user20",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 22,
    "userName" : "guoyan",
    "password" : "123456",
    "status" : 1
  }, {
    "userId" : 23,
    "userName" : "liuxinle",
    "password" : "111111",
    "status" : 1
  }, {
    "userId" : 24,
    "userName" : "maqiuyue",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 29,
    "userName" : "admin",
    "password" : "123456",
    "status" : 1
  }, {
    "userId" : 37,
    "userName" : "张三",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 41,
    "userName" : "王五愣2",
    "password" : "123456",
    "status" : 0
  } ]
}
2019-07-24 10:20:57,478 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 10:20:57,479 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String)
2019-07-24 10:20:57,481 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 10:20:57,488 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users 
2019-07-24 10:20:57,489 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 10:20:57,491 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 14
2019-07-24 10:20:57,492 DEBUG (UserController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 2,
    "userName" : "user2",
    "password" : "222222",
    "status" : 1
  }, {
    "userId" : 9,
    "userName" : "user9",
    "password" : "999999",
    "status" : 1
  }, {
    "userId" : 10,
    "userName" : "user1010",
    "password" : "111111",
    "status" : 1
  }, {
    "userId" : 12,
    "userName" : "user11",
    "password" : "111111",
    "status" : 0
  }, {
    "userId" : 13,
    "userName" : "user123",
    "password" : "222222",
    "status" : 0
  }, {
    "userId" : 18,
    "userName" : "user167",
    "password" : "666666",
    "status" : 0
  }, {
    "userId" : 19,
    "userName" : "user19",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 20,
    "userName" : "user20",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 22,
    "userName" : "guoyan",
    "password" : "123456",
    "status" : 1
  }, {
    "userId" : 23,
    "userName" : "liuxinle",
    "password" : "111111",
    "status" : 1
  }, {
    "userId" : 24,
    "userName" : "maqiuyue",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 29,
    "userName" : "admin",
    "password" : "123456",
    "status" : 1
  }, {
    "userId" : 37,
    "userName" : "张三",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 41,
    "userName" : "王五愣2",
    "password" : "123456",
    "status" : 0
  } ]
}
2019-07-24 10:21:42,425 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 10:21:42,427 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String)
2019-07-24 10:21:42,430 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 10:21:42,437 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users 
2019-07-24 10:21:42,438 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 10:21:42,438 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 14
2019-07-24 10:21:42,438 DEBUG (UserController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 2,
    "userName" : "user2",
    "password" : "222222",
    "status" : 1
  }, {
    "userId" : 9,
    "userName" : "user9",
    "password" : "999999",
    "status" : 1
  }, {
    "userId" : 10,
    "userName" : "user1010",
    "password" : "111111",
    "status" : 1
  }, {
    "userId" : 12,
    "userName" : "user11",
    "password" : "111111",
    "status" : 0
  }, {
    "userId" : 13,
    "userName" : "user123",
    "password" : "222222",
    "status" : 0
  }, {
    "userId" : 18,
    "userName" : "user167",
    "password" : "666666",
    "status" : 0
  }, {
    "userId" : 19,
    "userName" : "user19",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 20,
    "userName" : "user20",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 22,
    "userName" : "guoyan",
    "password" : "123456",
    "status" : 1
  }, {
    "userId" : 23,
    "userName" : "liuxinle",
    "password" : "111111",
    "status" : 1
  }, {
    "userId" : 24,
    "userName" : "maqiuyue",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 29,
    "userName" : "admin",
    "password" : "123456",
    "status" : 1
  }, {
    "userId" : 37,
    "userName" : "张三",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 41,
    "userName" : "王五愣2",
    "password" : "123456",
    "status" : 0
  } ]
}
2019-07-24 10:21:43,230 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 10:21:43,231 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String)
2019-07-24 10:21:43,232 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 10:21:43,240 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users 
2019-07-24 10:21:43,242 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 10:21:43,244 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 14
2019-07-24 10:21:43,245 DEBUG (UserController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 2,
    "userName" : "user2",
    "password" : "222222",
    "status" : 1
  }, {
    "userId" : 9,
    "userName" : "user9",
    "password" : "999999",
    "status" : 1
  }, {
    "userId" : 10,
    "userName" : "user1010",
    "password" : "111111",
    "status" : 1
  }, {
    "userId" : 12,
    "userName" : "user11",
    "password" : "111111",
    "status" : 0
  }, {
    "userId" : 13,
    "userName" : "user123",
    "password" : "222222",
    "status" : 0
  }, {
    "userId" : 18,
    "userName" : "user167",
    "password" : "666666",
    "status" : 0
  }, {
    "userId" : 19,
    "userName" : "user19",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 20,
    "userName" : "user20",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 22,
    "userName" : "guoyan",
    "password" : "123456",
    "status" : 1
  }, {
    "userId" : 23,
    "userName" : "liuxinle",
    "password" : "111111",
    "status" : 1
  }, {
    "userId" : 24,
    "userName" : "maqiuyue",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 29,
    "userName" : "admin",
    "password" : "123456",
    "status" : 1
  }, {
    "userId" : 37,
    "userName" : "张三",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 41,
    "userName" : "王五愣2",
    "password" : "123456",
    "status" : 0
  } ]
}
2019-07-24 10:21:43,471 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 10:21:43,472 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String)
2019-07-24 10:21:43,477 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 10:21:43,484 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users 
2019-07-24 10:21:43,485 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 10:21:43,488 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 14
2019-07-24 10:21:43,489 DEBUG (UserController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 2,
    "userName" : "user2",
    "password" : "222222",
    "status" : 1
  }, {
    "userId" : 9,
    "userName" : "user9",
    "password" : "999999",
    "status" : 1
  }, {
    "userId" : 10,
    "userName" : "user1010",
    "password" : "111111",
    "status" : 1
  }, {
    "userId" : 12,
    "userName" : "user11",
    "password" : "111111",
    "status" : 0
  }, {
    "userId" : 13,
    "userName" : "user123",
    "password" : "222222",
    "status" : 0
  }, {
    "userId" : 18,
    "userName" : "user167",
    "password" : "666666",
    "status" : 0
  }, {
    "userId" : 19,
    "userName" : "user19",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 20,
    "userName" : "user20",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 22,
    "userName" : "guoyan",
    "password" : "123456",
    "status" : 1
  }, {
    "userId" : 23,
    "userName" : "liuxinle",
    "password" : "111111",
    "status" : 1
  }, {
    "userId" : 24,
    "userName" : "maqiuyue",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 29,
    "userName" : "admin",
    "password" : "123456",
    "status" : 1
  }, {
    "userId" : 37,
    "userName" : "张三",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 41,
    "userName" : "王五愣2",
    "password" : "123456",
    "status" : 0
  } ]
}
2019-07-24 10:21:43,659 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 10:21:43,660 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String)
2019-07-24 10:21:43,662 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 10:21:43,669 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users 
2019-07-24 10:21:43,671 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 10:21:43,673 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 14
2019-07-24 10:21:43,674 DEBUG (UserController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 2,
    "userName" : "user2",
    "password" : "222222",
    "status" : 1
  }, {
    "userId" : 9,
    "userName" : "user9",
    "password" : "999999",
    "status" : 1
  }, {
    "userId" : 10,
    "userName" : "user1010",
    "password" : "111111",
    "status" : 1
  }, {
    "userId" : 12,
    "userName" : "user11",
    "password" : "111111",
    "status" : 0
  }, {
    "userId" : 13,
    "userName" : "user123",
    "password" : "222222",
    "status" : 0
  }, {
    "userId" : 18,
    "userName" : "user167",
    "password" : "666666",
    "status" : 0
  }, {
    "userId" : 19,
    "userName" : "user19",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 20,
    "userName" : "user20",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 22,
    "userName" : "guoyan",
    "password" : "123456",
    "status" : 1
  }, {
    "userId" : 23,
    "userName" : "liuxinle",
    "password" : "111111",
    "status" : 1
  }, {
    "userId" : 24,
    "userName" : "maqiuyue",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 29,
    "userName" : "admin",
    "password" : "123456",
    "status" : 1
  }, {
    "userId" : 37,
    "userName" : "张三",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 41,
    "userName" : "王五愣2",
    "password" : "123456",
    "status" : 0
  } ]
}
2019-07-24 10:22:22,942 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 10:22:22,944 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String)
2019-07-24 10:22:22,946 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 10:22:22,956 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users 
2019-07-24 10:22:22,957 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 10:22:22,959 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 14
2019-07-24 10:22:22,960 DEBUG (UserController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 2,
    "userName" : "user2",
    "password" : "222222",
    "status" : 1
  }, {
    "userId" : 9,
    "userName" : "user9",
    "password" : "999999",
    "status" : 1
  }, {
    "userId" : 10,
    "userName" : "user1010",
    "password" : "111111",
    "status" : 1
  }, {
    "userId" : 12,
    "userName" : "user11",
    "password" : "111111",
    "status" : 0
  }, {
    "userId" : 13,
    "userName" : "user123",
    "password" : "222222",
    "status" : 0
  }, {
    "userId" : 18,
    "userName" : "user167",
    "password" : "666666",
    "status" : 0
  }, {
    "userId" : 19,
    "userName" : "user19",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 20,
    "userName" : "user20",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 22,
    "userName" : "guoyan",
    "password" : "123456",
    "status" : 1
  }, {
    "userId" : 23,
    "userName" : "liuxinle",
    "password" : "111111",
    "status" : 1
  }, {
    "userId" : 24,
    "userName" : "maqiuyue",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 29,
    "userName" : "admin",
    "password" : "123456",
    "status" : 1
  }, {
    "userId" : 37,
    "userName" : "张三",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 41,
    "userName" : "王五愣2",
    "password" : "123456",
    "status" : 0
  } ]
}
2019-07-24 10:22:54,128 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news 
2019-07-24 10:22:54,130 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 10:22:54,138 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 17
2019-07-24 10:22:54,140 DEBUG (NewsController.java:33)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 1,
    "title" : "创建新项目",
    "content" : "新闻内容",
    "writeDate" : 1466812800000
  }, {
    "newsId" : 2,
    "title" : "索尼位55降价送卡",
    "content" : "新闻内容3",
    "writeDate" : -30364761600000
  }, {
    "newsId" : 3,
    "title" : "理光b5不到二千",
    "content" : null,
    "writeDate" : 1191542400000
  }, {
    "newsId" : 5,
    "title" : "单反与镜头组合",
    "content" : null,
    "writeDate" : 1191369600000
  }, {
    "newsId" : 15,
    "title" : "百度将开拓美国和欧盟市场",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 16,
    "title" : "Uber CEO和马云交好",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 22,
    "title" : "今日早报",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 23,
    "title" : "高考查分被马云占了先机",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 24,
    "title" : "看完这个，你还想做微商吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 25,
    "title" : "农村电商只能成为空谈?",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 26,
    "title" : "上半年这些行业大爆炸",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 27,
    "title" : "阿里巴巴最为窘迫的四件事",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 28,
    "title" : "高管却离开了",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 30,
    "title" : "支付宝余额使用将受限",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 31,
    "title" : "国内垂直B2B电商平台TOP30",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 33,
    "title" : "谷歌要重新进入中国市场了吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 34,
    "title" : "今天",
    "content" : null,
    "writeDate" : 1467417600000
  } ]
}
2019-07-24 10:22:56,993 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news WHERE newsId = ? 
2019-07-24 10:22:56,997 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 10:22:56,999 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 10:23:48,964 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news 
2019-07-24 10:23:48,966 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 10:23:48,969 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 17
2019-07-24 10:23:48,972 DEBUG (NewsController.java:33)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 1,
    "title" : "创建新项目",
    "content" : "新闻内容",
    "writeDate" : 1466812800000
  }, {
    "newsId" : 2,
    "title" : "索尼位55降价送卡",
    "content" : "新闻内容3",
    "writeDate" : -30364761600000
  }, {
    "newsId" : 3,
    "title" : "理光b5不到二千",
    "content" : null,
    "writeDate" : 1191542400000
  }, {
    "newsId" : 5,
    "title" : "单反与镜头组合",
    "content" : null,
    "writeDate" : 1191369600000
  }, {
    "newsId" : 15,
    "title" : "百度将开拓美国和欧盟市场",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 16,
    "title" : "Uber CEO和马云交好",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 22,
    "title" : "今日早报",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 23,
    "title" : "高考查分被马云占了先机",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 24,
    "title" : "看完这个，你还想做微商吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 25,
    "title" : "农村电商只能成为空谈?",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 26,
    "title" : "上半年这些行业大爆炸",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 27,
    "title" : "阿里巴巴最为窘迫的四件事",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 28,
    "title" : "高管却离开了",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 30,
    "title" : "支付宝余额使用将受限",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 31,
    "title" : "国内垂直B2B电商平台TOP30",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 33,
    "title" : "谷歌要重新进入中国市场了吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 34,
    "title" : "今天",
    "content" : null,
    "writeDate" : 1467417600000
  } ]
}
2019-07-24 10:23:51,095 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news WHERE newsId = ? 
2019-07-24 10:23:51,096 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 10:23:51,100 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 10:23:54,502 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news 
2019-07-24 10:23:54,532 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 10:23:54,543 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 17
2019-07-24 10:23:54,545 DEBUG (NewsController.java:33)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 1,
    "title" : "创建新项目",
    "content" : "新闻内容",
    "writeDate" : 1466812800000
  }, {
    "newsId" : 2,
    "title" : "索尼位55降价送卡",
    "content" : "新闻内容3",
    "writeDate" : -30364761600000
  }, {
    "newsId" : 3,
    "title" : "理光b5不到二千",
    "content" : null,
    "writeDate" : 1191542400000
  }, {
    "newsId" : 5,
    "title" : "单反与镜头组合",
    "content" : null,
    "writeDate" : 1191369600000
  }, {
    "newsId" : 15,
    "title" : "百度将开拓美国和欧盟市场",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 16,
    "title" : "Uber CEO和马云交好",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 22,
    "title" : "今日早报",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 23,
    "title" : "高考查分被马云占了先机",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 24,
    "title" : "看完这个，你还想做微商吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 25,
    "title" : "农村电商只能成为空谈?",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 26,
    "title" : "上半年这些行业大爆炸",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 27,
    "title" : "阿里巴巴最为窘迫的四件事",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 28,
    "title" : "高管却离开了",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 30,
    "title" : "支付宝余额使用将受限",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 31,
    "title" : "国内垂直B2B电商平台TOP30",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 33,
    "title" : "谷歌要重新进入中国市场了吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 34,
    "title" : "今天",
    "content" : null,
    "writeDate" : 1467417600000
  } ]
}
2019-07-24 10:24:08,213 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news WHERE newsId = ? 
2019-07-24 10:24:08,214 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 10:24:08,216 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 10:24:09,803 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: UPDATE news SET title=? ,content=? ,writeDate=? WHERE newsId = ? 
2019-07-24 10:24:09,819 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 创建新项目(String), 新闻内容(String), 2016-06-25 00:00:00.0(Timestamp), 1(Long)
2019-07-24 10:24:09,835 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-24 10:24:13,114 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news 
2019-07-24 10:24:13,116 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 10:24:13,122 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 17
2019-07-24 10:24:13,123 DEBUG (NewsController.java:33)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 1,
    "title" : "创建新项目",
    "content" : "新闻内容",
    "writeDate" : 1466784000000
  }, {
    "newsId" : 2,
    "title" : "索尼位55降价送卡",
    "content" : "新闻内容3",
    "writeDate" : -30364761600000
  }, {
    "newsId" : 3,
    "title" : "理光b5不到二千",
    "content" : null,
    "writeDate" : 1191542400000
  }, {
    "newsId" : 5,
    "title" : "单反与镜头组合",
    "content" : null,
    "writeDate" : 1191369600000
  }, {
    "newsId" : 15,
    "title" : "百度将开拓美国和欧盟市场",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 16,
    "title" : "Uber CEO和马云交好",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 22,
    "title" : "今日早报",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 23,
    "title" : "高考查分被马云占了先机",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 24,
    "title" : "看完这个，你还想做微商吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 25,
    "title" : "农村电商只能成为空谈?",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 26,
    "title" : "上半年这些行业大爆炸",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 27,
    "title" : "阿里巴巴最为窘迫的四件事",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 28,
    "title" : "高管却离开了",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 30,
    "title" : "支付宝余额使用将受限",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 31,
    "title" : "国内垂直B2B电商平台TOP30",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 33,
    "title" : "谷歌要重新进入中国市场了吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 34,
    "title" : "今天",
    "content" : null,
    "writeDate" : 1467417600000
  } ]
}
2019-07-24 10:24:17,367 ERROR (BaseController.java:258)- 参数类型错误
org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'int'; nested exception is java.lang.NumberFormatException: For input string: ""
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:132)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:126)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NumberFormatException: For input string: ""
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Integer.parseInt(Integer.java:592)
	at java.lang.Integer.valueOf(Integer.java:766)
	at org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:211)
	at org.springframework.beans.propertyeditors.CustomNumberEditor.setAsText(CustomNumberEditor.java:115)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:429)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:402)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:155)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:73)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53)
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:693)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:124)
	... 51 common frames omitted
2019-07-24 10:24:19,267 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news 
2019-07-24 10:24:19,269 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 10:24:19,273 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 17
2019-07-24 10:24:19,275 DEBUG (NewsController.java:33)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 1,
    "title" : "创建新项目",
    "content" : "新闻内容",
    "writeDate" : 1466784000000
  }, {
    "newsId" : 2,
    "title" : "索尼位55降价送卡",
    "content" : "新闻内容3",
    "writeDate" : -30364761600000
  }, {
    "newsId" : 3,
    "title" : "理光b5不到二千",
    "content" : null,
    "writeDate" : 1191542400000
  }, {
    "newsId" : 5,
    "title" : "单反与镜头组合",
    "content" : null,
    "writeDate" : 1191369600000
  }, {
    "newsId" : 15,
    "title" : "百度将开拓美国和欧盟市场",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 16,
    "title" : "Uber CEO和马云交好",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 22,
    "title" : "今日早报",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 23,
    "title" : "高考查分被马云占了先机",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 24,
    "title" : "看完这个，你还想做微商吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 25,
    "title" : "农村电商只能成为空谈?",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 26,
    "title" : "上半年这些行业大爆炸",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 27,
    "title" : "阿里巴巴最为窘迫的四件事",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 28,
    "title" : "高管却离开了",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 30,
    "title" : "支付宝余额使用将受限",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 31,
    "title" : "国内垂直B2B电商平台TOP30",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 33,
    "title" : "谷歌要重新进入中国市场了吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 34,
    "title" : "今天",
    "content" : null,
    "writeDate" : 1467417600000
  } ]
}
2019-07-24 10:26:04,423 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news 
2019-07-24 10:26:04,424 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 10:26:04,428 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 17
2019-07-24 10:26:04,429 DEBUG (NewsController.java:33)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 1,
    "title" : "创建新项目",
    "content" : "新闻内容",
    "writeDate" : 1466784000000
  }, {
    "newsId" : 2,
    "title" : "索尼位55降价送卡",
    "content" : "新闻内容3",
    "writeDate" : -30364761600000
  }, {
    "newsId" : 3,
    "title" : "理光b5不到二千",
    "content" : null,
    "writeDate" : 1191542400000
  }, {
    "newsId" : 5,
    "title" : "单反与镜头组合",
    "content" : null,
    "writeDate" : 1191369600000
  }, {
    "newsId" : 15,
    "title" : "百度将开拓美国和欧盟市场",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 16,
    "title" : "Uber CEO和马云交好",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 22,
    "title" : "今日早报",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 23,
    "title" : "高考查分被马云占了先机",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 24,
    "title" : "看完这个，你还想做微商吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 25,
    "title" : "农村电商只能成为空谈?",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 26,
    "title" : "上半年这些行业大爆炸",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 27,
    "title" : "阿里巴巴最为窘迫的四件事",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 28,
    "title" : "高管却离开了",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 30,
    "title" : "支付宝余额使用将受限",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 31,
    "title" : "国内垂直B2B电商平台TOP30",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 33,
    "title" : "谷歌要重新进入中国市场了吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 34,
    "title" : "今天",
    "content" : null,
    "writeDate" : 1467417600000
  } ]
}
2019-07-24 10:26:06,764 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news WHERE newsId = ? 
2019-07-24 10:26:06,766 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 10:26:06,768 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 10:26:18,812 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news 
2019-07-24 10:26:18,813 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 10:26:18,817 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 17
2019-07-24 10:26:18,818 DEBUG (NewsController.java:33)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 1,
    "title" : "创建新项目",
    "content" : "新闻内容",
    "writeDate" : 1466784000000
  }, {
    "newsId" : 2,
    "title" : "索尼位55降价送卡",
    "content" : "新闻内容3",
    "writeDate" : -30364761600000
  }, {
    "newsId" : 3,
    "title" : "理光b5不到二千",
    "content" : null,
    "writeDate" : 1191542400000
  }, {
    "newsId" : 5,
    "title" : "单反与镜头组合",
    "content" : null,
    "writeDate" : 1191369600000
  }, {
    "newsId" : 15,
    "title" : "百度将开拓美国和欧盟市场",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 16,
    "title" : "Uber CEO和马云交好",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 22,
    "title" : "今日早报",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 23,
    "title" : "高考查分被马云占了先机",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 24,
    "title" : "看完这个，你还想做微商吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 25,
    "title" : "农村电商只能成为空谈?",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 26,
    "title" : "上半年这些行业大爆炸",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 27,
    "title" : "阿里巴巴最为窘迫的四件事",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 28,
    "title" : "高管却离开了",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 30,
    "title" : "支付宝余额使用将受限",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 31,
    "title" : "国内垂直B2B电商平台TOP30",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 33,
    "title" : "谷歌要重新进入中国市场了吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 34,
    "title" : "今天",
    "content" : null,
    "writeDate" : 1467417600000
  } ]
}
2019-07-24 10:26:20,934 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news WHERE newsId = ? 
2019-07-24 10:26:20,935 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 10:26:20,938 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 10:26:36,007 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news 
2019-07-24 10:26:36,009 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 10:26:36,012 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 17
2019-07-24 10:26:36,014 DEBUG (NewsController.java:33)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 1,
    "title" : "创建新项目",
    "content" : "新闻内容",
    "writeDate" : 1466784000000
  }, {
    "newsId" : 2,
    "title" : "索尼位55降价送卡",
    "content" : "新闻内容3",
    "writeDate" : -30364761600000
  }, {
    "newsId" : 3,
    "title" : "理光b5不到二千",
    "content" : null,
    "writeDate" : 1191542400000
  }, {
    "newsId" : 5,
    "title" : "单反与镜头组合",
    "content" : null,
    "writeDate" : 1191369600000
  }, {
    "newsId" : 15,
    "title" : "百度将开拓美国和欧盟市场",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 16,
    "title" : "Uber CEO和马云交好",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 22,
    "title" : "今日早报",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 23,
    "title" : "高考查分被马云占了先机",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 24,
    "title" : "看完这个，你还想做微商吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 25,
    "title" : "农村电商只能成为空谈?",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 26,
    "title" : "上半年这些行业大爆炸",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 27,
    "title" : "阿里巴巴最为窘迫的四件事",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 28,
    "title" : "高管却离开了",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 30,
    "title" : "支付宝余额使用将受限",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 31,
    "title" : "国内垂直B2B电商平台TOP30",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 33,
    "title" : "谷歌要重新进入中国市场了吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 34,
    "title" : "今天",
    "content" : null,
    "writeDate" : 1467417600000
  } ]
}
2019-07-24 10:26:44,783 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news 
2019-07-24 10:26:44,784 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 10:26:44,787 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 17
2019-07-24 10:26:44,789 DEBUG (NewsController.java:33)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 1,
    "title" : "创建新项目",
    "content" : "新闻内容",
    "writeDate" : 1466784000000
  }, {
    "newsId" : 2,
    "title" : "索尼位55降价送卡",
    "content" : "新闻内容3",
    "writeDate" : -30364761600000
  }, {
    "newsId" : 3,
    "title" : "理光b5不到二千",
    "content" : null,
    "writeDate" : 1191542400000
  }, {
    "newsId" : 5,
    "title" : "单反与镜头组合",
    "content" : null,
    "writeDate" : 1191369600000
  }, {
    "newsId" : 15,
    "title" : "百度将开拓美国和欧盟市场",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 16,
    "title" : "Uber CEO和马云交好",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 22,
    "title" : "今日早报",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 23,
    "title" : "高考查分被马云占了先机",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 24,
    "title" : "看完这个，你还想做微商吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 25,
    "title" : "农村电商只能成为空谈?",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 26,
    "title" : "上半年这些行业大爆炸",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 27,
    "title" : "阿里巴巴最为窘迫的四件事",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 28,
    "title" : "高管却离开了",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 30,
    "title" : "支付宝余额使用将受限",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 31,
    "title" : "国内垂直B2B电商平台TOP30",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 33,
    "title" : "谷歌要重新进入中国市场了吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 34,
    "title" : "今天",
    "content" : null,
    "writeDate" : 1467417600000
  } ]
}
2019-07-24 10:26:46,757 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news WHERE newsId = ? 
2019-07-24 10:26:46,760 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 10:26:46,764 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 10:26:50,699 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news 
2019-07-24 10:26:50,700 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 10:26:50,703 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 17
2019-07-24 10:26:50,704 DEBUG (NewsController.java:33)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 1,
    "title" : "创建新项目",
    "content" : "新闻内容",
    "writeDate" : 1466784000000
  }, {
    "newsId" : 2,
    "title" : "索尼位55降价送卡",
    "content" : "新闻内容3",
    "writeDate" : -30364761600000
  }, {
    "newsId" : 3,
    "title" : "理光b5不到二千",
    "content" : null,
    "writeDate" : 1191542400000
  }, {
    "newsId" : 5,
    "title" : "单反与镜头组合",
    "content" : null,
    "writeDate" : 1191369600000
  }, {
    "newsId" : 15,
    "title" : "百度将开拓美国和欧盟市场",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 16,
    "title" : "Uber CEO和马云交好",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 22,
    "title" : "今日早报",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 23,
    "title" : "高考查分被马云占了先机",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 24,
    "title" : "看完这个，你还想做微商吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 25,
    "title" : "农村电商只能成为空谈?",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 26,
    "title" : "上半年这些行业大爆炸",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 27,
    "title" : "阿里巴巴最为窘迫的四件事",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 28,
    "title" : "高管却离开了",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 30,
    "title" : "支付宝余额使用将受限",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 31,
    "title" : "国内垂直B2B电商平台TOP30",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 33,
    "title" : "谷歌要重新进入中国市场了吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 34,
    "title" : "今天",
    "content" : null,
    "writeDate" : 1467417600000
  } ]
}
2019-07-24 10:26:52,748 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news WHERE newsId = ? 
2019-07-24 10:26:52,750 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 5(Integer)
2019-07-24 10:26:52,752 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 10:37:10,698 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-VFTL6TA with PID 1824 (C:\123\company\target\classes started by 高羽翯 in C:\123\company)
2019-07-24 10:37:10,698 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-24 10:37:10,698 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-24 10:37:19,218 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 9.958 seconds (JVM running for 12.764)
2019-07-24 10:37:50,364 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news 
2019-07-24 10:37:50,434 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product 
2019-07-24 10:37:50,495 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 10:37:50,496 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 10:37:50,620 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 10:37:50,693 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 17
2019-07-24 10:37:50,709 DEBUG (NewsController.java:33)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 1,
    "title" : "创建新项目",
    "content" : "新闻内容",
    "writeDate" : 1466784000000
  }, {
    "newsId" : 2,
    "title" : "索尼位55降价送卡",
    "content" : "新闻内容3",
    "writeDate" : -30364761600000
  }, {
    "newsId" : 3,
    "title" : "理光b5不到二千",
    "content" : null,
    "writeDate" : 1191542400000
  }, {
    "newsId" : 5,
    "title" : "单反与镜头组合",
    "content" : null,
    "writeDate" : 1191369600000
  }, {
    "newsId" : 15,
    "title" : "百度将开拓美国和欧盟市场",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 16,
    "title" : "Uber CEO和马云交好",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 22,
    "title" : "今日早报",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 23,
    "title" : "高考查分被马云占了先机",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 24,
    "title" : "看完这个，你还想做微商吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 25,
    "title" : "农村电商只能成为空谈?",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 26,
    "title" : "上半年这些行业大爆炸",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 27,
    "title" : "阿里巴巴最为窘迫的四件事",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 28,
    "title" : "高管却离开了",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 30,
    "title" : "支付宝余额使用将受限",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 31,
    "title" : "国内垂直B2B电商平台TOP30",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 33,
    "title" : "谷歌要重新进入中国市场了吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 34,
    "title" : "今天",
    "content" : null,
    "writeDate" : 1467417600000
  } ]
}
2019-07-24 10:37:53,972 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news 
2019-07-24 10:37:53,969 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product 
2019-07-24 10:37:53,975 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 10:37:53,977 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 10:37:53,984 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 17
2019-07-24 10:37:53,987 DEBUG (NewsController.java:33)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 1,
    "title" : "创建新项目",
    "content" : "新闻内容",
    "writeDate" : 1466784000000
  }, {
    "newsId" : 2,
    "title" : "索尼位55降价送卡",
    "content" : "新闻内容3",
    "writeDate" : -30364761600000
  }, {
    "newsId" : 3,
    "title" : "理光b5不到二千",
    "content" : null,
    "writeDate" : 1191542400000
  }, {
    "newsId" : 5,
    "title" : "单反与镜头组合",
    "content" : null,
    "writeDate" : 1191369600000
  }, {
    "newsId" : 15,
    "title" : "百度将开拓美国和欧盟市场",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 16,
    "title" : "Uber CEO和马云交好",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 22,
    "title" : "今日早报",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 23,
    "title" : "高考查分被马云占了先机",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 24,
    "title" : "看完这个，你还想做微商吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 25,
    "title" : "农村电商只能成为空谈?",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 26,
    "title" : "上半年这些行业大爆炸",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 27,
    "title" : "阿里巴巴最为窘迫的四件事",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 28,
    "title" : "高管却离开了",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 30,
    "title" : "支付宝余额使用将受限",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 31,
    "title" : "国内垂直B2B电商平台TOP30",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 33,
    "title" : "谷歌要重新进入中国市场了吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 34,
    "title" : "今天",
    "content" : null,
    "writeDate" : 1467417600000
  } ]
}
2019-07-24 10:37:54,000 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 10:40:13,442 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 10:40:13,442 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String)
2019-07-24 10:40:13,442 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 10:40:13,458 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users 
2019-07-24 10:40:13,458 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 10:40:13,458 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 14
2019-07-24 10:40:13,458 DEBUG (UserController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 2,
    "userName" : "user2",
    "password" : "222222",
    "status" : 1
  }, {
    "userId" : 9,
    "userName" : "user9",
    "password" : "999999",
    "status" : 1
  }, {
    "userId" : 10,
    "userName" : "user1010",
    "password" : "111111",
    "status" : 1
  }, {
    "userId" : 12,
    "userName" : "user11",
    "password" : "111111",
    "status" : 0
  }, {
    "userId" : 13,
    "userName" : "user123",
    "password" : "222222",
    "status" : 0
  }, {
    "userId" : 18,
    "userName" : "user167",
    "password" : "666666",
    "status" : 0
  }, {
    "userId" : 19,
    "userName" : "user19",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 20,
    "userName" : "user20",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 22,
    "userName" : "guoyan",
    "password" : "123456",
    "status" : 1
  }, {
    "userId" : 23,
    "userName" : "liuxinle",
    "password" : "111111",
    "status" : 1
  }, {
    "userId" : 24,
    "userName" : "maqiuyue",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 29,
    "userName" : "admin",
    "password" : "123456",
    "status" : 1
  }, {
    "userId" : 37,
    "userName" : "张三",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 41,
    "userName" : "王五愣2",
    "password" : "123456",
    "status" : 0
  } ]
}
2019-07-24 10:40:46,069 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product LIMIT ?,? 
2019-07-24 10:40:46,072 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-24 10:40:46,079 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 10:40:46,081 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM product 
2019-07-24 10:40:46,082 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 10:40:46,091 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 10:40:46,100 DEBUG (ProductController.java:32)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "reasonable" : true,
    "toCamelVunderline" : false,
    "pageData" : [ {
      "productId" : 14,
      "serialNumber" : null,
      "name" : "笔记本",
      "brand" : "IBM",
      "model" : "g123",
      "price" : 4600.0,
      "picture" : "d_r11_10_r1_c1.jpg",
      "description" : "IBM5x系列IBM5x系列"
    }, {
      "productId" : 15,
      "serialNumber" : null,
      "name" : "摄像机",
      "brand" : "三星",
      "model" : "05",
      "price" : 8000.0,
      "picture" : "d_r11_10_r1_c8.jpg",
      "description" : "像素超清"
    }, {
      "productId" : 16,
      "serialNumber" : null,
      "name" : "数码相机",
      "brand" : "爱国者",
      "model" : "08",
      "price" : 9000.0,
      "picture" : "d_r11_10_r1_c81.jpg",
      "description" : "爱国者08"
    }, {
      "productId" : 17,
      "serialNumber" : null,
      "name" : "手机",
      "brand" : "摩托罗拉",
      "model" : "60",
      "price" : 2800.0,
      "picture" : "d_r11_10_r1_c221.jpg",
      "description" : "摩托罗拉经典款"
    } ],
    "pageCount" : 3,
    "dataCount" : 12
  }
}
2019-07-24 10:40:49,583 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product WHERE productId = ? 
2019-07-24 10:40:49,585 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 14(Integer)
2019-07-24 10:40:49,589 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 10:42:18,514 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product 
2019-07-24 10:42:18,515 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 10:42:18,521 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 10:42:18,522 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news 
2019-07-24 10:42:18,524 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 10:42:18,533 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 17
2019-07-24 10:42:18,535 DEBUG (NewsController.java:33)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 1,
    "title" : "创建新项目",
    "content" : "新闻内容",
    "writeDate" : 1466784000000
  }, {
    "newsId" : 2,
    "title" : "索尼位55降价送卡",
    "content" : "新闻内容3",
    "writeDate" : -30364761600000
  }, {
    "newsId" : 3,
    "title" : "理光b5不到二千",
    "content" : null,
    "writeDate" : 1191542400000
  }, {
    "newsId" : 5,
    "title" : "单反与镜头组合",
    "content" : null,
    "writeDate" : 1191369600000
  }, {
    "newsId" : 15,
    "title" : "百度将开拓美国和欧盟市场",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 16,
    "title" : "Uber CEO和马云交好",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 22,
    "title" : "今日早报",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 23,
    "title" : "高考查分被马云占了先机",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 24,
    "title" : "看完这个，你还想做微商吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 25,
    "title" : "农村电商只能成为空谈?",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 26,
    "title" : "上半年这些行业大爆炸",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 27,
    "title" : "阿里巴巴最为窘迫的四件事",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 28,
    "title" : "高管却离开了",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 30,
    "title" : "支付宝余额使用将受限",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 31,
    "title" : "国内垂直B2B电商平台TOP30",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 33,
    "title" : "谷歌要重新进入中国市场了吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 34,
    "title" : "今天",
    "content" : null,
    "writeDate" : 1467417600000
  } ]
}
2019-07-24 10:42:21,938 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product 
2019-07-24 10:42:21,939 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news 
2019-07-24 10:42:21,940 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 10:42:21,940 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 10:42:21,944 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 10:42:21,945 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 17
2019-07-24 10:42:21,947 DEBUG (NewsController.java:33)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 1,
    "title" : "创建新项目",
    "content" : "新闻内容",
    "writeDate" : 1466784000000
  }, {
    "newsId" : 2,
    "title" : "索尼位55降价送卡",
    "content" : "新闻内容3",
    "writeDate" : -30364761600000
  }, {
    "newsId" : 3,
    "title" : "理光b5不到二千",
    "content" : null,
    "writeDate" : 1191542400000
  }, {
    "newsId" : 5,
    "title" : "单反与镜头组合",
    "content" : null,
    "writeDate" : 1191369600000
  }, {
    "newsId" : 15,
    "title" : "百度将开拓美国和欧盟市场",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 16,
    "title" : "Uber CEO和马云交好",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 22,
    "title" : "今日早报",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 23,
    "title" : "高考查分被马云占了先机",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 24,
    "title" : "看完这个，你还想做微商吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 25,
    "title" : "农村电商只能成为空谈?",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 26,
    "title" : "上半年这些行业大爆炸",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 27,
    "title" : "阿里巴巴最为窘迫的四件事",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 28,
    "title" : "高管却离开了",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 30,
    "title" : "支付宝余额使用将受限",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 31,
    "title" : "国内垂直B2B电商平台TOP30",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 33,
    "title" : "谷歌要重新进入中国市场了吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 34,
    "title" : "今天",
    "content" : null,
    "writeDate" : 1467417600000
  } ]
}
2019-07-24 10:42:38,147 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product 
2019-07-24 10:42:38,148 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 10:42:38,149 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news 
2019-07-24 10:42:38,151 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 10:42:38,152 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 10:42:38,157 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 17
2019-07-24 10:42:38,158 DEBUG (NewsController.java:33)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 1,
    "title" : "创建新项目",
    "content" : "新闻内容",
    "writeDate" : 1466784000000
  }, {
    "newsId" : 2,
    "title" : "索尼位55降价送卡",
    "content" : "新闻内容3",
    "writeDate" : -30364761600000
  }, {
    "newsId" : 3,
    "title" : "理光b5不到二千",
    "content" : null,
    "writeDate" : 1191542400000
  }, {
    "newsId" : 5,
    "title" : "单反与镜头组合",
    "content" : null,
    "writeDate" : 1191369600000
  }, {
    "newsId" : 15,
    "title" : "百度将开拓美国和欧盟市场",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 16,
    "title" : "Uber CEO和马云交好",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 22,
    "title" : "今日早报",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 23,
    "title" : "高考查分被马云占了先机",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 24,
    "title" : "看完这个，你还想做微商吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 25,
    "title" : "农村电商只能成为空谈?",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 26,
    "title" : "上半年这些行业大爆炸",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 27,
    "title" : "阿里巴巴最为窘迫的四件事",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 28,
    "title" : "高管却离开了",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 30,
    "title" : "支付宝余额使用将受限",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 31,
    "title" : "国内垂直B2B电商平台TOP30",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 33,
    "title" : "谷歌要重新进入中国市场了吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 34,
    "title" : "今天",
    "content" : null,
    "writeDate" : 1467417600000
  } ]
}
2019-07-24 10:42:42,225 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product 
2019-07-24 10:42:42,227 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 10:42:42,230 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news 
2019-07-24 10:42:42,232 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 10:42:42,233 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 10:42:42,238 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 17
2019-07-24 10:42:42,240 DEBUG (NewsController.java:33)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 1,
    "title" : "创建新项目",
    "content" : "新闻内容",
    "writeDate" : 1466784000000
  }, {
    "newsId" : 2,
    "title" : "索尼位55降价送卡",
    "content" : "新闻内容3",
    "writeDate" : -30364761600000
  }, {
    "newsId" : 3,
    "title" : "理光b5不到二千",
    "content" : null,
    "writeDate" : 1191542400000
  }, {
    "newsId" : 5,
    "title" : "单反与镜头组合",
    "content" : null,
    "writeDate" : 1191369600000
  }, {
    "newsId" : 15,
    "title" : "百度将开拓美国和欧盟市场",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 16,
    "title" : "Uber CEO和马云交好",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 22,
    "title" : "今日早报",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 23,
    "title" : "高考查分被马云占了先机",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 24,
    "title" : "看完这个，你还想做微商吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 25,
    "title" : "农村电商只能成为空谈?",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 26,
    "title" : "上半年这些行业大爆炸",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 27,
    "title" : "阿里巴巴最为窘迫的四件事",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 28,
    "title" : "高管却离开了",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 30,
    "title" : "支付宝余额使用将受限",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 31,
    "title" : "国内垂直B2B电商平台TOP30",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 33,
    "title" : "谷歌要重新进入中国市场了吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 34,
    "title" : "今天",
    "content" : null,
    "writeDate" : 1467417600000
  } ]
}
2019-07-24 10:46:13,797 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product 
2019-07-24 10:46:13,799 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 10:46:13,805 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 10:46:13,811 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news 
2019-07-24 10:46:13,812 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 10:46:13,817 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 17
2019-07-24 10:46:13,818 DEBUG (NewsController.java:33)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 1,
    "title" : "创建新项目",
    "content" : "新闻内容",
    "writeDate" : 1466784000000
  }, {
    "newsId" : 2,
    "title" : "索尼位55降价送卡",
    "content" : "新闻内容3",
    "writeDate" : -30364761600000
  }, {
    "newsId" : 3,
    "title" : "理光b5不到二千",
    "content" : null,
    "writeDate" : 1191542400000
  }, {
    "newsId" : 5,
    "title" : "单反与镜头组合",
    "content" : null,
    "writeDate" : 1191369600000
  }, {
    "newsId" : 15,
    "title" : "百度将开拓美国和欧盟市场",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 16,
    "title" : "Uber CEO和马云交好",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 22,
    "title" : "今日早报",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 23,
    "title" : "高考查分被马云占了先机",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 24,
    "title" : "看完这个，你还想做微商吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 25,
    "title" : "农村电商只能成为空谈?",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 26,
    "title" : "上半年这些行业大爆炸",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 27,
    "title" : "阿里巴巴最为窘迫的四件事",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 28,
    "title" : "高管却离开了",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 30,
    "title" : "支付宝余额使用将受限",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 31,
    "title" : "国内垂直B2B电商平台TOP30",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 33,
    "title" : "谷歌要重新进入中国市场了吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 34,
    "title" : "今天",
    "content" : null,
    "writeDate" : 1467417600000
  } ]
}
2019-07-24 10:46:20,488 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product 
2019-07-24 10:46:20,488 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news 
2019-07-24 10:46:20,489 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 10:46:20,489 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 10:46:20,493 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 10:46:20,496 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 17
2019-07-24 10:46:20,498 DEBUG (NewsController.java:33)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 1,
    "title" : "创建新项目",
    "content" : "新闻内容",
    "writeDate" : 1466784000000
  }, {
    "newsId" : 2,
    "title" : "索尼位55降价送卡",
    "content" : "新闻内容3",
    "writeDate" : -30364761600000
  }, {
    "newsId" : 3,
    "title" : "理光b5不到二千",
    "content" : null,
    "writeDate" : 1191542400000
  }, {
    "newsId" : 5,
    "title" : "单反与镜头组合",
    "content" : null,
    "writeDate" : 1191369600000
  }, {
    "newsId" : 15,
    "title" : "百度将开拓美国和欧盟市场",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 16,
    "title" : "Uber CEO和马云交好",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 22,
    "title" : "今日早报",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 23,
    "title" : "高考查分被马云占了先机",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 24,
    "title" : "看完这个，你还想做微商吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 25,
    "title" : "农村电商只能成为空谈?",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 26,
    "title" : "上半年这些行业大爆炸",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 27,
    "title" : "阿里巴巴最为窘迫的四件事",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 28,
    "title" : "高管却离开了",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 30,
    "title" : "支付宝余额使用将受限",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 31,
    "title" : "国内垂直B2B电商平台TOP30",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 33,
    "title" : "谷歌要重新进入中国市场了吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 34,
    "title" : "今天",
    "content" : null,
    "writeDate" : 1467417600000
  } ]
}
2019-07-24 10:46:44,920 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product 
2019-07-24 10:46:44,922 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news 
2019-07-24 10:46:44,923 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 10:46:44,923 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 10:46:44,927 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 10:46:44,928 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 17
2019-07-24 10:46:44,931 DEBUG (NewsController.java:33)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 1,
    "title" : "创建新项目",
    "content" : "新闻内容",
    "writeDate" : 1466784000000
  }, {
    "newsId" : 2,
    "title" : "索尼位55降价送卡",
    "content" : "新闻内容3",
    "writeDate" : -30364761600000
  }, {
    "newsId" : 3,
    "title" : "理光b5不到二千",
    "content" : null,
    "writeDate" : 1191542400000
  }, {
    "newsId" : 5,
    "title" : "单反与镜头组合",
    "content" : null,
    "writeDate" : 1191369600000
  }, {
    "newsId" : 15,
    "title" : "百度将开拓美国和欧盟市场",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 16,
    "title" : "Uber CEO和马云交好",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 22,
    "title" : "今日早报",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 23,
    "title" : "高考查分被马云占了先机",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 24,
    "title" : "看完这个，你还想做微商吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 25,
    "title" : "农村电商只能成为空谈?",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 26,
    "title" : "上半年这些行业大爆炸",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 27,
    "title" : "阿里巴巴最为窘迫的四件事",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 28,
    "title" : "高管却离开了",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 30,
    "title" : "支付宝余额使用将受限",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 31,
    "title" : "国内垂直B2B电商平台TOP30",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 33,
    "title" : "谷歌要重新进入中国市场了吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 34,
    "title" : "今天",
    "content" : null,
    "writeDate" : 1467417600000
  } ]
}
2019-07-24 10:46:54,285 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product 
2019-07-24 10:46:54,286 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 10:46:54,289 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news 
2019-07-24 10:46:54,291 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 10:46:54,291 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 10:46:54,296 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 17
2019-07-24 10:46:54,298 DEBUG (NewsController.java:33)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 1,
    "title" : "创建新项目",
    "content" : "新闻内容",
    "writeDate" : 1466784000000
  }, {
    "newsId" : 2,
    "title" : "索尼位55降价送卡",
    "content" : "新闻内容3",
    "writeDate" : -30364761600000
  }, {
    "newsId" : 3,
    "title" : "理光b5不到二千",
    "content" : null,
    "writeDate" : 1191542400000
  }, {
    "newsId" : 5,
    "title" : "单反与镜头组合",
    "content" : null,
    "writeDate" : 1191369600000
  }, {
    "newsId" : 15,
    "title" : "百度将开拓美国和欧盟市场",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 16,
    "title" : "Uber CEO和马云交好",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 22,
    "title" : "今日早报",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 23,
    "title" : "高考查分被马云占了先机",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 24,
    "title" : "看完这个，你还想做微商吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 25,
    "title" : "农村电商只能成为空谈?",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 26,
    "title" : "上半年这些行业大爆炸",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 27,
    "title" : "阿里巴巴最为窘迫的四件事",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 28,
    "title" : "高管却离开了",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 30,
    "title" : "支付宝余额使用将受限",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 31,
    "title" : "国内垂直B2B电商平台TOP30",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 33,
    "title" : "谷歌要重新进入中国市场了吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 34,
    "title" : "今天",
    "content" : null,
    "writeDate" : 1467417600000
  } ]
}
2019-07-24 10:47:03,616 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product 
2019-07-24 10:47:03,616 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news 
2019-07-24 10:47:03,617 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 10:47:03,617 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 10:47:03,622 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 17
2019-07-24 10:47:03,624 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 10:47:03,624 DEBUG (NewsController.java:33)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 1,
    "title" : "创建新项目",
    "content" : "新闻内容",
    "writeDate" : 1466784000000
  }, {
    "newsId" : 2,
    "title" : "索尼位55降价送卡",
    "content" : "新闻内容3",
    "writeDate" : -30364761600000
  }, {
    "newsId" : 3,
    "title" : "理光b5不到二千",
    "content" : null,
    "writeDate" : 1191542400000
  }, {
    "newsId" : 5,
    "title" : "单反与镜头组合",
    "content" : null,
    "writeDate" : 1191369600000
  }, {
    "newsId" : 15,
    "title" : "百度将开拓美国和欧盟市场",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 16,
    "title" : "Uber CEO和马云交好",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 22,
    "title" : "今日早报",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 23,
    "title" : "高考查分被马云占了先机",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 24,
    "title" : "看完这个，你还想做微商吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 25,
    "title" : "农村电商只能成为空谈?",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 26,
    "title" : "上半年这些行业大爆炸",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 27,
    "title" : "阿里巴巴最为窘迫的四件事",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 28,
    "title" : "高管却离开了",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 30,
    "title" : "支付宝余额使用将受限",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 31,
    "title" : "国内垂直B2B电商平台TOP30",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 33,
    "title" : "谷歌要重新进入中国市场了吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 34,
    "title" : "今天",
    "content" : null,
    "writeDate" : 1467417600000
  } ]
}
2019-07-24 11:05:08,344 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-VFTL6TA with PID 1824 (C:\123\company\target\classes started by 高羽翯 in C:\123\company)
2019-07-24 11:05:08,344 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-24 11:05:08,344 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-24 11:05:13,084 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 4.912 seconds (JVM running for 1686.624)
2019-07-24 12:01:23,283 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message 
2019-07-24 12:01:23,314 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 12:01:23,392 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 12:01:23,580 ERROR (JsonUtil.java:129)- [FAILED toString()] 对象转Json串失败，失败原因：(was java.lang.NullPointerException) (through reference chain: java.util.HashMap["data"]->java.util.ArrayList[0]->com.zryx.company.model.Message["writeDate"])
2019-07-24 12:01:23,627 DEBUG (MessageController.java:41)- json===>null
2019-07-24 13:56:50,170 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-VFTL6TA with PID 14032 (C:\123\company\target\classes started by 高羽翯 in C:\123\company)
2019-07-24 13:56:50,170 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-24 13:56:50,170 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-24 13:56:56,728 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 7.905 seconds (JVM running for 10.574)
2019-07-24 14:00:06,723 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message 
2019-07-24 14:00:06,788 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 14:00:06,884 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 14:00:06,958 ERROR (JsonUtil.java:129)- [FAILED toString()] 对象转Json串失败，失败原因：(was java.lang.NullPointerException) (through reference chain: java.util.HashMap["data"]->java.util.ArrayList[0]->com.zryx.company.model.Message["writeDate"])
2019-07-24 14:00:06,967 DEBUG (MessageController.java:41)- json===>null
2019-07-24 14:02:01,502 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news 
2019-07-24 14:02:01,505 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 14:02:01,542 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 17
2019-07-24 14:02:01,552 DEBUG (NewsController.java:33)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 1,
    "title" : "创建新项目",
    "content" : "新闻内容",
    "writeDate" : 1466784000000
  }, {
    "newsId" : 2,
    "title" : "索尼位55降价送卡",
    "content" : "新闻内容3",
    "writeDate" : -30364761600000
  }, {
    "newsId" : 3,
    "title" : "理光b5不到二千",
    "content" : null,
    "writeDate" : 1191542400000
  }, {
    "newsId" : 5,
    "title" : "单反与镜头组合",
    "content" : null,
    "writeDate" : 1191369600000
  }, {
    "newsId" : 15,
    "title" : "百度将开拓美国和欧盟市场",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 16,
    "title" : "Uber CEO和马云交好",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 22,
    "title" : "今日早报",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 23,
    "title" : "高考查分被马云占了先机",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 24,
    "title" : "看完这个，你还想做微商吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 25,
    "title" : "农村电商只能成为空谈?",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 26,
    "title" : "上半年这些行业大爆炸",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 27,
    "title" : "阿里巴巴最为窘迫的四件事",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 28,
    "title" : "高管却离开了",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 30,
    "title" : "支付宝余额使用将受限",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 31,
    "title" : "国内垂直B2B电商平台TOP30",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 33,
    "title" : "谷歌要重新进入中国市场了吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 34,
    "title" : "今天",
    "content" : null,
    "writeDate" : 1467417600000
  } ]
}
2019-07-24 14:02:04,831 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news WHERE newsId = ? 
2019-07-24 14:02:04,834 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 14:02:04,843 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 14:02:06,703 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news 
2019-07-24 14:02:06,705 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 14:02:06,712 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 17
2019-07-24 14:02:06,715 DEBUG (NewsController.java:33)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 1,
    "title" : "创建新项目",
    "content" : "新闻内容",
    "writeDate" : 1466784000000
  }, {
    "newsId" : 2,
    "title" : "索尼位55降价送卡",
    "content" : "新闻内容3",
    "writeDate" : -30364761600000
  }, {
    "newsId" : 3,
    "title" : "理光b5不到二千",
    "content" : null,
    "writeDate" : 1191542400000
  }, {
    "newsId" : 5,
    "title" : "单反与镜头组合",
    "content" : null,
    "writeDate" : 1191369600000
  }, {
    "newsId" : 15,
    "title" : "百度将开拓美国和欧盟市场",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 16,
    "title" : "Uber CEO和马云交好",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 22,
    "title" : "今日早报",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 23,
    "title" : "高考查分被马云占了先机",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 24,
    "title" : "看完这个，你还想做微商吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 25,
    "title" : "农村电商只能成为空谈?",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 26,
    "title" : "上半年这些行业大爆炸",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 27,
    "title" : "阿里巴巴最为窘迫的四件事",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 28,
    "title" : "高管却离开了",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 30,
    "title" : "支付宝余额使用将受限",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 31,
    "title" : "国内垂直B2B电商平台TOP30",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 33,
    "title" : "谷歌要重新进入中国市场了吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 34,
    "title" : "今天",
    "content" : null,
    "writeDate" : 1467417600000
  } ]
}
2019-07-24 14:03:34,300 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news 
2019-07-24 14:03:34,300 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 14:03:34,308 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 17
2019-07-24 14:03:34,308 DEBUG (NewsController.java:33)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 1,
    "title" : "创建新项目",
    "content" : "新闻内容",
    "writeDate" : 1466784000000
  }, {
    "newsId" : 2,
    "title" : "索尼位55降价送卡",
    "content" : "新闻内容3",
    "writeDate" : -30364761600000
  }, {
    "newsId" : 3,
    "title" : "理光b5不到二千",
    "content" : null,
    "writeDate" : 1191542400000
  }, {
    "newsId" : 5,
    "title" : "单反与镜头组合",
    "content" : null,
    "writeDate" : 1191369600000
  }, {
    "newsId" : 15,
    "title" : "百度将开拓美国和欧盟市场",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 16,
    "title" : "Uber CEO和马云交好",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 22,
    "title" : "今日早报",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 23,
    "title" : "高考查分被马云占了先机",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 24,
    "title" : "看完这个，你还想做微商吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 25,
    "title" : "农村电商只能成为空谈?",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 26,
    "title" : "上半年这些行业大爆炸",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 27,
    "title" : "阿里巴巴最为窘迫的四件事",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 28,
    "title" : "高管却离开了",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 30,
    "title" : "支付宝余额使用将受限",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 31,
    "title" : "国内垂直B2B电商平台TOP30",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 33,
    "title" : "谷歌要重新进入中国市场了吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 34,
    "title" : "今天",
    "content" : null,
    "writeDate" : 1467417600000
  } ]
}
2019-07-24 14:31:27,553 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product 
2019-07-24 14:31:27,577 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 14:31:27,551 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news 
2019-07-24 14:31:27,589 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 14:31:27,607 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 17
2019-07-24 14:31:27,613 DEBUG (NewsController.java:33)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 1,
    "title" : "创建新项目",
    "content" : "新闻内容",
    "writeDate" : 1466784000000
  }, {
    "newsId" : 2,
    "title" : "索尼位55降价送卡",
    "content" : "新闻内容3",
    "writeDate" : -30364761600000
  }, {
    "newsId" : 3,
    "title" : "理光b5不到二千",
    "content" : null,
    "writeDate" : 1191542400000
  }, {
    "newsId" : 5,
    "title" : "单反与镜头组合",
    "content" : null,
    "writeDate" : 1191369600000
  }, {
    "newsId" : 15,
    "title" : "百度将开拓美国和欧盟市场",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 16,
    "title" : "Uber CEO和马云交好",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 22,
    "title" : "今日早报",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 23,
    "title" : "高考查分被马云占了先机",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 24,
    "title" : "看完这个，你还想做微商吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 25,
    "title" : "农村电商只能成为空谈?",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 26,
    "title" : "上半年这些行业大爆炸",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 27,
    "title" : "阿里巴巴最为窘迫的四件事",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 28,
    "title" : "高管却离开了",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 30,
    "title" : "支付宝余额使用将受限",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 31,
    "title" : "国内垂直B2B电商平台TOP30",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 33,
    "title" : "谷歌要重新进入中国市场了吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 34,
    "title" : "今天",
    "content" : null,
    "writeDate" : 1467417600000
  } ]
}
2019-07-24 14:31:27,713 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 14:31:38,355 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news 
2019-07-24 14:31:38,354 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product 
2019-07-24 14:31:38,364 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 14:31:38,371 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 17
2019-07-24 14:31:38,373 DEBUG (NewsController.java:33)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 1,
    "title" : "创建新项目",
    "content" : "新闻内容",
    "writeDate" : 1466784000000
  }, {
    "newsId" : 2,
    "title" : "索尼位55降价送卡",
    "content" : "新闻内容3",
    "writeDate" : -30364761600000
  }, {
    "newsId" : 3,
    "title" : "理光b5不到二千",
    "content" : null,
    "writeDate" : 1191542400000
  }, {
    "newsId" : 5,
    "title" : "单反与镜头组合",
    "content" : null,
    "writeDate" : 1191369600000
  }, {
    "newsId" : 15,
    "title" : "百度将开拓美国和欧盟市场",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 16,
    "title" : "Uber CEO和马云交好",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 22,
    "title" : "今日早报",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 23,
    "title" : "高考查分被马云占了先机",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 24,
    "title" : "看完这个，你还想做微商吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 25,
    "title" : "农村电商只能成为空谈?",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 26,
    "title" : "上半年这些行业大爆炸",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 27,
    "title" : "阿里巴巴最为窘迫的四件事",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 28,
    "title" : "高管却离开了",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 30,
    "title" : "支付宝余额使用将受限",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 31,
    "title" : "国内垂直B2B电商平台TOP30",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 33,
    "title" : "谷歌要重新进入中国市场了吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 34,
    "title" : "今天",
    "content" : null,
    "writeDate" : 1467417600000
  } ]
}
2019-07-24 14:31:38,374 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 14:31:38,390 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 14:48:23,984 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news 
2019-07-24 14:48:24,001 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product 
2019-07-24 14:48:24,005 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 14:48:24,012 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 14:48:24,032 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 14:48:24,044 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 17
2019-07-24 14:48:24,069 DEBUG (NewsController.java:33)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 1,
    "title" : "创建新项目",
    "content" : "新闻内容",
    "writeDate" : 1466784000000
  }, {
    "newsId" : 2,
    "title" : "索尼位55降价送卡",
    "content" : "新闻内容3",
    "writeDate" : -30364761600000
  }, {
    "newsId" : 3,
    "title" : "理光b5不到二千",
    "content" : null,
    "writeDate" : 1191542400000
  }, {
    "newsId" : 5,
    "title" : "单反与镜头组合",
    "content" : null,
    "writeDate" : 1191369600000
  }, {
    "newsId" : 15,
    "title" : "百度将开拓美国和欧盟市场",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 16,
    "title" : "Uber CEO和马云交好",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 22,
    "title" : "今日早报",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 23,
    "title" : "高考查分被马云占了先机",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 24,
    "title" : "看完这个，你还想做微商吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 25,
    "title" : "农村电商只能成为空谈?",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 26,
    "title" : "上半年这些行业大爆炸",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 27,
    "title" : "阿里巴巴最为窘迫的四件事",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 28,
    "title" : "高管却离开了",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 30,
    "title" : "支付宝余额使用将受限",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 31,
    "title" : "国内垂直B2B电商平台TOP30",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 33,
    "title" : "谷歌要重新进入中国市场了吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 34,
    "title" : "今天",
    "content" : null,
    "writeDate" : 1467417600000
  } ]
}
2019-07-24 14:48:37,989 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product 
2019-07-24 14:48:37,991 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 14:48:37,993 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news 
2019-07-24 14:48:37,995 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 14:48:37,995 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 14:48:37,998 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 17
2019-07-24 14:48:38,000 DEBUG (NewsController.java:33)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 1,
    "title" : "创建新项目",
    "content" : "新闻内容",
    "writeDate" : 1466784000000
  }, {
    "newsId" : 2,
    "title" : "索尼位55降价送卡",
    "content" : "新闻内容3",
    "writeDate" : -30364761600000
  }, {
    "newsId" : 3,
    "title" : "理光b5不到二千",
    "content" : null,
    "writeDate" : 1191542400000
  }, {
    "newsId" : 5,
    "title" : "单反与镜头组合",
    "content" : null,
    "writeDate" : 1191369600000
  }, {
    "newsId" : 15,
    "title" : "百度将开拓美国和欧盟市场",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 16,
    "title" : "Uber CEO和马云交好",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 22,
    "title" : "今日早报",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 23,
    "title" : "高考查分被马云占了先机",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 24,
    "title" : "看完这个，你还想做微商吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 25,
    "title" : "农村电商只能成为空谈?",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 26,
    "title" : "上半年这些行业大爆炸",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 27,
    "title" : "阿里巴巴最为窘迫的四件事",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 28,
    "title" : "高管却离开了",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 30,
    "title" : "支付宝余额使用将受限",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 31,
    "title" : "国内垂直B2B电商平台TOP30",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 33,
    "title" : "谷歌要重新进入中国市场了吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 34,
    "title" : "今天",
    "content" : null,
    "writeDate" : 1467417600000
  } ]
}
2019-07-24 14:53:32,975 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news 
2019-07-24 14:53:32,977 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product 
2019-07-24 14:53:32,979 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 14:53:32,988 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 14:53:32,979 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 14:53:33,007 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 17
2019-07-24 14:53:33,009 DEBUG (NewsController.java:33)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 1,
    "title" : "创建新项目",
    "content" : "新闻内容",
    "writeDate" : 1466784000000
  }, {
    "newsId" : 2,
    "title" : "索尼位55降价送卡",
    "content" : "新闻内容3",
    "writeDate" : -30364761600000
  }, {
    "newsId" : 3,
    "title" : "理光b5不到二千",
    "content" : null,
    "writeDate" : 1191542400000
  }, {
    "newsId" : 5,
    "title" : "单反与镜头组合",
    "content" : null,
    "writeDate" : 1191369600000
  }, {
    "newsId" : 15,
    "title" : "百度将开拓美国和欧盟市场",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 16,
    "title" : "Uber CEO和马云交好",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 22,
    "title" : "今日早报",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 23,
    "title" : "高考查分被马云占了先机",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 24,
    "title" : "看完这个，你还想做微商吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 25,
    "title" : "农村电商只能成为空谈?",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 26,
    "title" : "上半年这些行业大爆炸",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 27,
    "title" : "阿里巴巴最为窘迫的四件事",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 28,
    "title" : "高管却离开了",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 30,
    "title" : "支付宝余额使用将受限",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 31,
    "title" : "国内垂直B2B电商平台TOP30",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 33,
    "title" : "谷歌要重新进入中国市场了吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 34,
    "title" : "今天",
    "content" : null,
    "writeDate" : 1467417600000
  } ]
}
2019-07-24 14:53:40,039 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product 
2019-07-24 14:53:40,046 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 14:53:40,054 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 14:53:40,052 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news 
2019-07-24 14:53:40,085 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 14:53:40,095 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 17
2019-07-24 14:53:40,096 DEBUG (NewsController.java:33)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 1,
    "title" : "创建新项目",
    "content" : "新闻内容",
    "writeDate" : 1466784000000
  }, {
    "newsId" : 2,
    "title" : "索尼位55降价送卡",
    "content" : "新闻内容3",
    "writeDate" : -30364761600000
  }, {
    "newsId" : 3,
    "title" : "理光b5不到二千",
    "content" : null,
    "writeDate" : 1191542400000
  }, {
    "newsId" : 5,
    "title" : "单反与镜头组合",
    "content" : null,
    "writeDate" : 1191369600000
  }, {
    "newsId" : 15,
    "title" : "百度将开拓美国和欧盟市场",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 16,
    "title" : "Uber CEO和马云交好",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 22,
    "title" : "今日早报",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 23,
    "title" : "高考查分被马云占了先机",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 24,
    "title" : "看完这个，你还想做微商吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 25,
    "title" : "农村电商只能成为空谈?",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 26,
    "title" : "上半年这些行业大爆炸",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 27,
    "title" : "阿里巴巴最为窘迫的四件事",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 28,
    "title" : "高管却离开了",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 30,
    "title" : "支付宝余额使用将受限",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 31,
    "title" : "国内垂直B2B电商平台TOP30",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 33,
    "title" : "谷歌要重新进入中国市场了吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 34,
    "title" : "今天",
    "content" : null,
    "writeDate" : 1467417600000
  } ]
}
2019-07-24 14:54:50,082 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product 
2019-07-24 14:54:50,084 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 14:54:50,083 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news 
2019-07-24 14:54:50,088 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 14:54:50,091 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 14:54:50,103 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 17
2019-07-24 14:54:50,119 DEBUG (NewsController.java:33)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 1,
    "title" : "创建新项目",
    "content" : "新闻内容",
    "writeDate" : 1466784000000
  }, {
    "newsId" : 2,
    "title" : "索尼位55降价送卡",
    "content" : "新闻内容3",
    "writeDate" : -30364761600000
  }, {
    "newsId" : 3,
    "title" : "理光b5不到二千",
    "content" : null,
    "writeDate" : 1191542400000
  }, {
    "newsId" : 5,
    "title" : "单反与镜头组合",
    "content" : null,
    "writeDate" : 1191369600000
  }, {
    "newsId" : 15,
    "title" : "百度将开拓美国和欧盟市场",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 16,
    "title" : "Uber CEO和马云交好",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 22,
    "title" : "今日早报",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 23,
    "title" : "高考查分被马云占了先机",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 24,
    "title" : "看完这个，你还想做微商吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 25,
    "title" : "农村电商只能成为空谈?",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 26,
    "title" : "上半年这些行业大爆炸",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 27,
    "title" : "阿里巴巴最为窘迫的四件事",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 28,
    "title" : "高管却离开了",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 30,
    "title" : "支付宝余额使用将受限",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 31,
    "title" : "国内垂直B2B电商平台TOP30",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 33,
    "title" : "谷歌要重新进入中国市场了吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 34,
    "title" : "今天",
    "content" : null,
    "writeDate" : 1467417600000
  } ]
}
2019-07-24 14:55:04,495 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product 
2019-07-24 14:55:04,495 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 14:55:04,550 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news 
2019-07-24 14:55:04,551 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 14:55:04,553 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 14:55:04,558 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 17
2019-07-24 14:55:04,560 DEBUG (NewsController.java:33)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 1,
    "title" : "创建新项目",
    "content" : "新闻内容",
    "writeDate" : 1466784000000
  }, {
    "newsId" : 2,
    "title" : "索尼位55降价送卡",
    "content" : "新闻内容3",
    "writeDate" : -30364761600000
  }, {
    "newsId" : 3,
    "title" : "理光b5不到二千",
    "content" : null,
    "writeDate" : 1191542400000
  }, {
    "newsId" : 5,
    "title" : "单反与镜头组合",
    "content" : null,
    "writeDate" : 1191369600000
  }, {
    "newsId" : 15,
    "title" : "百度将开拓美国和欧盟市场",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 16,
    "title" : "Uber CEO和马云交好",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 22,
    "title" : "今日早报",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 23,
    "title" : "高考查分被马云占了先机",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 24,
    "title" : "看完这个，你还想做微商吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 25,
    "title" : "农村电商只能成为空谈?",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 26,
    "title" : "上半年这些行业大爆炸",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 27,
    "title" : "阿里巴巴最为窘迫的四件事",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 28,
    "title" : "高管却离开了",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 30,
    "title" : "支付宝余额使用将受限",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 31,
    "title" : "国内垂直B2B电商平台TOP30",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 33,
    "title" : "谷歌要重新进入中国市场了吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 34,
    "title" : "今天",
    "content" : null,
    "writeDate" : 1467417600000
  } ]
}
2019-07-24 14:55:44,945 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 14:55:44,948 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String)
2019-07-24 14:55:44,957 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 14:55:44,971 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users 
2019-07-24 14:55:44,973 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 14:55:44,976 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 14
2019-07-24 14:55:44,981 DEBUG (UserController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 2,
    "userName" : "user2",
    "password" : "222222",
    "status" : 1
  }, {
    "userId" : 9,
    "userName" : "user9",
    "password" : "999999",
    "status" : 1
  }, {
    "userId" : 10,
    "userName" : "user1010",
    "password" : "111111",
    "status" : 1
  }, {
    "userId" : 12,
    "userName" : "user11",
    "password" : "111111",
    "status" : 0
  }, {
    "userId" : 13,
    "userName" : "user123",
    "password" : "222222",
    "status" : 0
  }, {
    "userId" : 18,
    "userName" : "user167",
    "password" : "666666",
    "status" : 0
  }, {
    "userId" : 19,
    "userName" : "user19",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 20,
    "userName" : "user20",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 22,
    "userName" : "guoyan",
    "password" : "123456",
    "status" : 1
  }, {
    "userId" : 23,
    "userName" : "liuxinle",
    "password" : "111111",
    "status" : 1
  }, {
    "userId" : 24,
    "userName" : "maqiuyue",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 29,
    "userName" : "admin",
    "password" : "123456",
    "status" : 1
  }, {
    "userId" : 37,
    "userName" : "张三",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 41,
    "userName" : "王五愣2",
    "password" : "123456",
    "status" : 0
  } ]
}
2019-07-24 14:55:50,345 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product LIMIT ?,? 
2019-07-24 14:55:50,346 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-24 14:55:50,350 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 14:55:50,351 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM product 
2019-07-24 14:55:50,353 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 14:55:50,364 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 14:55:50,381 DEBUG (ProductController.java:32)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "reasonable" : true,
    "toCamelVunderline" : false,
    "pageData" : [ {
      "productId" : 14,
      "serialNumber" : null,
      "name" : "笔记本",
      "brand" : "IBM",
      "model" : "g123",
      "price" : 4600.0,
      "picture" : "d_r11_10_r1_c1.jpg",
      "description" : "IBM5x系列IBM5x系列"
    }, {
      "productId" : 15,
      "serialNumber" : null,
      "name" : "摄像机",
      "brand" : "三星",
      "model" : "05",
      "price" : 8000.0,
      "picture" : "d_r11_10_r1_c8.jpg",
      "description" : "像素超清"
    }, {
      "productId" : 16,
      "serialNumber" : null,
      "name" : "数码相机",
      "brand" : "爱国者",
      "model" : "08",
      "price" : 9000.0,
      "picture" : "d_r11_10_r1_c81.jpg",
      "description" : "爱国者08"
    }, {
      "productId" : 17,
      "serialNumber" : null,
      "name" : "手机",
      "brand" : "摩托罗拉",
      "model" : "60",
      "price" : 2800.0,
      "picture" : "d_r11_10_r1_c221.jpg",
      "description" : "摩托罗拉经典款"
    } ],
    "pageCount" : 3,
    "dataCount" : 12
  }
}
2019-07-24 14:55:59,321 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product LIMIT ?,? 
2019-07-24 14:55:59,324 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-24 14:55:59,327 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 14:55:59,330 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM product 
2019-07-24 14:55:59,330 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 14:55:59,332 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 14:55:59,333 DEBUG (ProductController.java:32)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "reasonable" : true,
    "toCamelVunderline" : false,
    "pageData" : [ {
      "productId" : 14,
      "serialNumber" : null,
      "name" : "笔记本",
      "brand" : "IBM",
      "model" : "g123",
      "price" : 4600.0,
      "picture" : "d_r11_10_r1_c1.jpg",
      "description" : "IBM5x系列IBM5x系列"
    }, {
      "productId" : 15,
      "serialNumber" : null,
      "name" : "摄像机",
      "brand" : "三星",
      "model" : "05",
      "price" : 8000.0,
      "picture" : "d_r11_10_r1_c8.jpg",
      "description" : "像素超清"
    }, {
      "productId" : 16,
      "serialNumber" : null,
      "name" : "数码相机",
      "brand" : "爱国者",
      "model" : "08",
      "price" : 9000.0,
      "picture" : "d_r11_10_r1_c81.jpg",
      "description" : "爱国者08"
    }, {
      "productId" : 17,
      "serialNumber" : null,
      "name" : "手机",
      "brand" : "摩托罗拉",
      "model" : "60",
      "price" : 2800.0,
      "picture" : "d_r11_10_r1_c221.jpg",
      "description" : "摩托罗拉经典款"
    } ],
    "pageCount" : 3,
    "dataCount" : 12
  }
}
2019-07-24 14:56:20,707 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 14:56:20,709 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String)
2019-07-24 14:56:20,712 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 14:56:20,728 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users 
2019-07-24 14:56:20,729 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 14:56:20,736 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 14
2019-07-24 14:56:20,739 DEBUG (UserController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 2,
    "userName" : "user2",
    "password" : "222222",
    "status" : 1
  }, {
    "userId" : 9,
    "userName" : "user9",
    "password" : "999999",
    "status" : 1
  }, {
    "userId" : 10,
    "userName" : "user1010",
    "password" : "111111",
    "status" : 1
  }, {
    "userId" : 12,
    "userName" : "user11",
    "password" : "111111",
    "status" : 0
  }, {
    "userId" : 13,
    "userName" : "user123",
    "password" : "222222",
    "status" : 0
  }, {
    "userId" : 18,
    "userName" : "user167",
    "password" : "666666",
    "status" : 0
  }, {
    "userId" : 19,
    "userName" : "user19",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 20,
    "userName" : "user20",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 22,
    "userName" : "guoyan",
    "password" : "123456",
    "status" : 1
  }, {
    "userId" : 23,
    "userName" : "liuxinle",
    "password" : "111111",
    "status" : 1
  }, {
    "userId" : 24,
    "userName" : "maqiuyue",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 29,
    "userName" : "admin",
    "password" : "123456",
    "status" : 1
  }, {
    "userId" : 37,
    "userName" : "张三",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 41,
    "userName" : "王五愣2",
    "password" : "123456",
    "status" : 0
  } ]
}
2019-07-24 14:56:23,096 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news 
2019-07-24 14:56:23,098 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 14:56:23,103 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 17
2019-07-24 14:56:23,105 DEBUG (NewsController.java:33)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 1,
    "title" : "创建新项目",
    "content" : "新闻内容",
    "writeDate" : 1466784000000
  }, {
    "newsId" : 2,
    "title" : "索尼位55降价送卡",
    "content" : "新闻内容3",
    "writeDate" : -30364761600000
  }, {
    "newsId" : 3,
    "title" : "理光b5不到二千",
    "content" : null,
    "writeDate" : 1191542400000
  }, {
    "newsId" : 5,
    "title" : "单反与镜头组合",
    "content" : null,
    "writeDate" : 1191369600000
  }, {
    "newsId" : 15,
    "title" : "百度将开拓美国和欧盟市场",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 16,
    "title" : "Uber CEO和马云交好",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 22,
    "title" : "今日早报",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 23,
    "title" : "高考查分被马云占了先机",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 24,
    "title" : "看完这个，你还想做微商吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 25,
    "title" : "农村电商只能成为空谈?",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 26,
    "title" : "上半年这些行业大爆炸",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 27,
    "title" : "阿里巴巴最为窘迫的四件事",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 28,
    "title" : "高管却离开了",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 30,
    "title" : "支付宝余额使用将受限",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 31,
    "title" : "国内垂直B2B电商平台TOP30",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 33,
    "title" : "谷歌要重新进入中国市场了吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 34,
    "title" : "今天",
    "content" : null,
    "writeDate" : 1467417600000
  } ]
}
2019-07-24 14:56:57,414 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product 
2019-07-24 14:56:57,420 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news 
2019-07-24 14:56:57,469 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 14:56:57,479 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 17
2019-07-24 14:56:57,483 DEBUG (NewsController.java:33)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 1,
    "title" : "创建新项目",
    "content" : "新闻内容",
    "writeDate" : 1466784000000
  }, {
    "newsId" : 2,
    "title" : "索尼位55降价送卡",
    "content" : "新闻内容3",
    "writeDate" : -30364761600000
  }, {
    "newsId" : 3,
    "title" : "理光b5不到二千",
    "content" : null,
    "writeDate" : 1191542400000
  }, {
    "newsId" : 5,
    "title" : "单反与镜头组合",
    "content" : null,
    "writeDate" : 1191369600000
  }, {
    "newsId" : 15,
    "title" : "百度将开拓美国和欧盟市场",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 16,
    "title" : "Uber CEO和马云交好",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 22,
    "title" : "今日早报",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 23,
    "title" : "高考查分被马云占了先机",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 24,
    "title" : "看完这个，你还想做微商吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 25,
    "title" : "农村电商只能成为空谈?",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 26,
    "title" : "上半年这些行业大爆炸",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 27,
    "title" : "阿里巴巴最为窘迫的四件事",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 28,
    "title" : "高管却离开了",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 30,
    "title" : "支付宝余额使用将受限",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 31,
    "title" : "国内垂直B2B电商平台TOP30",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 33,
    "title" : "谷歌要重新进入中国市场了吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 34,
    "title" : "今天",
    "content" : null,
    "writeDate" : 1467417600000
  } ]
}
2019-07-24 14:56:57,418 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 14:56:57,491 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 14:57:13,205 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 14:57:13,209 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String)
2019-07-24 14:57:13,211 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 14:57:13,222 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users 
2019-07-24 14:57:13,224 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 14:57:13,227 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 14
2019-07-24 14:57:13,228 DEBUG (UserController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 2,
    "userName" : "user2",
    "password" : "222222",
    "status" : 1
  }, {
    "userId" : 9,
    "userName" : "user9",
    "password" : "999999",
    "status" : 1
  }, {
    "userId" : 10,
    "userName" : "user1010",
    "password" : "111111",
    "status" : 1
  }, {
    "userId" : 12,
    "userName" : "user11",
    "password" : "111111",
    "status" : 0
  }, {
    "userId" : 13,
    "userName" : "user123",
    "password" : "222222",
    "status" : 0
  }, {
    "userId" : 18,
    "userName" : "user167",
    "password" : "666666",
    "status" : 0
  }, {
    "userId" : 19,
    "userName" : "user19",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 20,
    "userName" : "user20",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 22,
    "userName" : "guoyan",
    "password" : "123456",
    "status" : 1
  }, {
    "userId" : 23,
    "userName" : "liuxinle",
    "password" : "111111",
    "status" : 1
  }, {
    "userId" : 24,
    "userName" : "maqiuyue",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 29,
    "userName" : "admin",
    "password" : "123456",
    "status" : 1
  }, {
    "userId" : 37,
    "userName" : "张三",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 41,
    "userName" : "王五愣2",
    "password" : "123456",
    "status" : 0
  } ]
}
2019-07-24 14:57:40,612 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 14:57:40,614 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: ueser11(String)
2019-07-24 14:57:40,616 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 0
2019-07-24 14:57:52,723 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 14:57:52,725 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: user11(String)
2019-07-24 14:57:52,730 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 14:57:52,740 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users 
2019-07-24 14:57:52,742 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 14:57:52,744 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 14
2019-07-24 14:57:52,746 DEBUG (UserController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 2,
    "userName" : "user2",
    "password" : "222222",
    "status" : 1
  }, {
    "userId" : 9,
    "userName" : "user9",
    "password" : "999999",
    "status" : 1
  }, {
    "userId" : 10,
    "userName" : "user1010",
    "password" : "111111",
    "status" : 1
  }, {
    "userId" : 12,
    "userName" : "user11",
    "password" : "111111",
    "status" : 0
  }, {
    "userId" : 13,
    "userName" : "user123",
    "password" : "222222",
    "status" : 0
  }, {
    "userId" : 18,
    "userName" : "user167",
    "password" : "666666",
    "status" : 0
  }, {
    "userId" : 19,
    "userName" : "user19",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 20,
    "userName" : "user20",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 22,
    "userName" : "guoyan",
    "password" : "123456",
    "status" : 1
  }, {
    "userId" : 23,
    "userName" : "liuxinle",
    "password" : "111111",
    "status" : 1
  }, {
    "userId" : 24,
    "userName" : "maqiuyue",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 29,
    "userName" : "admin",
    "password" : "123456",
    "status" : 1
  }, {
    "userId" : 37,
    "userName" : "张三",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 41,
    "userName" : "王五愣2",
    "password" : "123456",
    "status" : 0
  } ]
}
2019-07-24 14:59:02,618 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 14:59:02,620 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String)
2019-07-24 14:59:02,622 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 14:59:02,640 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users 
2019-07-24 14:59:02,642 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 14:59:02,647 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 14
2019-07-24 14:59:02,648 DEBUG (UserController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 2,
    "userName" : "user2",
    "password" : "222222",
    "status" : 1
  }, {
    "userId" : 9,
    "userName" : "user9",
    "password" : "999999",
    "status" : 1
  }, {
    "userId" : 10,
    "userName" : "user1010",
    "password" : "111111",
    "status" : 1
  }, {
    "userId" : 12,
    "userName" : "user11",
    "password" : "111111",
    "status" : 0
  }, {
    "userId" : 13,
    "userName" : "user123",
    "password" : "222222",
    "status" : 0
  }, {
    "userId" : 18,
    "userName" : "user167",
    "password" : "666666",
    "status" : 0
  }, {
    "userId" : 19,
    "userName" : "user19",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 20,
    "userName" : "user20",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 22,
    "userName" : "guoyan",
    "password" : "123456",
    "status" : 1
  }, {
    "userId" : 23,
    "userName" : "liuxinle",
    "password" : "111111",
    "status" : 1
  }, {
    "userId" : 24,
    "userName" : "maqiuyue",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 29,
    "userName" : "admin",
    "password" : "123456",
    "status" : 1
  }, {
    "userId" : 37,
    "userName" : "张三",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 41,
    "userName" : "王五愣2",
    "password" : "123456",
    "status" : 0
  } ]
}
2019-07-24 14:59:08,589 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users 
2019-07-24 14:59:08,591 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 14:59:08,593 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 14
2019-07-24 14:59:08,595 DEBUG (UserController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 2,
    "userName" : "user2",
    "password" : "222222",
    "status" : 1
  }, {
    "userId" : 9,
    "userName" : "user9",
    "password" : "999999",
    "status" : 1
  }, {
    "userId" : 10,
    "userName" : "user1010",
    "password" : "111111",
    "status" : 1
  }, {
    "userId" : 12,
    "userName" : "user11",
    "password" : "111111",
    "status" : 0
  }, {
    "userId" : 13,
    "userName" : "user123",
    "password" : "222222",
    "status" : 0
  }, {
    "userId" : 18,
    "userName" : "user167",
    "password" : "666666",
    "status" : 0
  }, {
    "userId" : 19,
    "userName" : "user19",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 20,
    "userName" : "user20",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 22,
    "userName" : "guoyan",
    "password" : "123456",
    "status" : 1
  }, {
    "userId" : 23,
    "userName" : "liuxinle",
    "password" : "111111",
    "status" : 1
  }, {
    "userId" : 24,
    "userName" : "maqiuyue",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 29,
    "userName" : "admin",
    "password" : "123456",
    "status" : 1
  }, {
    "userId" : 37,
    "userName" : "张三",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 41,
    "userName" : "王五愣2",
    "password" : "123456",
    "status" : 0
  } ]
}
2019-07-24 14:59:47,114 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product WHERE productId = ? 
2019-07-24 14:59:47,116 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 14(Integer)
2019-07-24 14:59:47,119 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:00:23,732 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product LIMIT ?,? 
2019-07-24 15:00:23,732 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-24 15:00:23,740 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 15:00:23,741 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM product 
2019-07-24 15:00:23,742 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:00:23,745 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:00:23,747 DEBUG (ProductController.java:32)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "reasonable" : true,
    "toCamelVunderline" : false,
    "pageData" : [ {
      "productId" : 14,
      "serialNumber" : null,
      "name" : "笔记本",
      "brand" : "IBM",
      "model" : "g123",
      "price" : 4600.0,
      "picture" : "d_r11_10_r1_c1.jpg",
      "description" : "IBM5x系列IBM5x系列"
    }, {
      "productId" : 15,
      "serialNumber" : null,
      "name" : "摄像机",
      "brand" : "三星",
      "model" : "05",
      "price" : 8000.0,
      "picture" : "d_r11_10_r1_c8.jpg",
      "description" : "像素超清"
    }, {
      "productId" : 16,
      "serialNumber" : null,
      "name" : "数码相机",
      "brand" : "爱国者",
      "model" : "08",
      "price" : 9000.0,
      "picture" : "d_r11_10_r1_c81.jpg",
      "description" : "爱国者08"
    }, {
      "productId" : 17,
      "serialNumber" : null,
      "name" : "手机",
      "brand" : "摩托罗拉",
      "model" : "60",
      "price" : 2800.0,
      "picture" : "d_r11_10_r1_c221.jpg",
      "description" : "摩托罗拉经典款"
    } ],
    "pageCount" : 3,
    "dataCount" : 12
  }
}
2019-07-24 15:00:25,234 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product LIMIT ?,? 
2019-07-24 15:00:25,236 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer), 4(Integer)
2019-07-24 15:00:25,246 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 15:00:25,248 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM product 
2019-07-24 15:00:25,249 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:00:25,251 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:00:25,251 DEBUG (ProductController.java:32)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 2,
    "reasonable" : true,
    "toCamelVunderline" : false,
    "pageData" : [ {
      "productId" : 18,
      "serialNumber" : null,
      "name" : "笔记本",
      "brand" : "IBM",
      "model" : "80",
      "price" : 8000.0,
      "picture" : "d_r11_10_r1_c2.jpg",
      "description" : "IBM5x系列"
    }, {
      "productId" : 19,
      "serialNumber" : null,
      "name" : "智能手机",
      "brand" : "oppo",
      "model" : "r7",
      "price" : 2999.0,
      "picture" : "d_r11_10_r1_c22.jpg",
      "description" : "充电5分钟，通话两小时"
    }, {
      "productId" : 20,
      "serialNumber" : null,
      "name" : "数码相机",
      "brand" : "佳能",
      "model" : "5800",
      "price" : 14000.0,
      "picture" : "d_r11_10_r1_c116.jpg",
      "description" : "高清摄像头"
    }, {
      "productId" : 21,
      "serialNumber" : null,
      "name" : "美颜相机",
      "brand" : "卡西欧",
      "model" : "5800",
      "price" : 4000.0,
      "picture" : "d_r11_10_r1_c16.jpg",
      "description" : "堪称化妆术第一"
    } ],
    "pageCount" : 3,
    "dataCount" : 12
  }
}
2019-07-24 15:00:26,775 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product LIMIT ?,? 
2019-07-24 15:00:26,777 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-24 15:00:26,779 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 15:00:26,780 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM product 
2019-07-24 15:00:26,781 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:00:26,784 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:00:26,785 DEBUG (ProductController.java:32)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "reasonable" : true,
    "toCamelVunderline" : false,
    "pageData" : [ {
      "productId" : 14,
      "serialNumber" : null,
      "name" : "笔记本",
      "brand" : "IBM",
      "model" : "g123",
      "price" : 4600.0,
      "picture" : "d_r11_10_r1_c1.jpg",
      "description" : "IBM5x系列IBM5x系列"
    }, {
      "productId" : 15,
      "serialNumber" : null,
      "name" : "摄像机",
      "brand" : "三星",
      "model" : "05",
      "price" : 8000.0,
      "picture" : "d_r11_10_r1_c8.jpg",
      "description" : "像素超清"
    }, {
      "productId" : 16,
      "serialNumber" : null,
      "name" : "数码相机",
      "brand" : "爱国者",
      "model" : "08",
      "price" : 9000.0,
      "picture" : "d_r11_10_r1_c81.jpg",
      "description" : "爱国者08"
    }, {
      "productId" : 17,
      "serialNumber" : null,
      "name" : "手机",
      "brand" : "摩托罗拉",
      "model" : "60",
      "price" : 2800.0,
      "picture" : "d_r11_10_r1_c221.jpg",
      "description" : "摩托罗拉经典款"
    } ],
    "pageCount" : 3,
    "dataCount" : 12
  }
}
2019-07-24 15:00:27,848 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product LIMIT ?,? 
2019-07-24 15:00:27,855 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer), 4(Integer)
2019-07-24 15:00:27,890 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 15:00:27,902 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM product 
2019-07-24 15:00:27,903 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:00:27,905 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:00:27,910 DEBUG (ProductController.java:32)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 2,
    "reasonable" : true,
    "toCamelVunderline" : false,
    "pageData" : [ {
      "productId" : 18,
      "serialNumber" : null,
      "name" : "笔记本",
      "brand" : "IBM",
      "model" : "80",
      "price" : 8000.0,
      "picture" : "d_r11_10_r1_c2.jpg",
      "description" : "IBM5x系列"
    }, {
      "productId" : 19,
      "serialNumber" : null,
      "name" : "智能手机",
      "brand" : "oppo",
      "model" : "r7",
      "price" : 2999.0,
      "picture" : "d_r11_10_r1_c22.jpg",
      "description" : "充电5分钟，通话两小时"
    }, {
      "productId" : 20,
      "serialNumber" : null,
      "name" : "数码相机",
      "brand" : "佳能",
      "model" : "5800",
      "price" : 14000.0,
      "picture" : "d_r11_10_r1_c116.jpg",
      "description" : "高清摄像头"
    }, {
      "productId" : 21,
      "serialNumber" : null,
      "name" : "美颜相机",
      "brand" : "卡西欧",
      "model" : "5800",
      "price" : 4000.0,
      "picture" : "d_r11_10_r1_c16.jpg",
      "description" : "堪称化妆术第一"
    } ],
    "pageCount" : 3,
    "dataCount" : 12
  }
}
2019-07-24 15:00:29,382 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product LIMIT ?,? 
2019-07-24 15:00:29,385 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-24 15:00:29,388 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 15:00:29,389 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM product 
2019-07-24 15:00:29,389 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:00:29,392 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:00:29,394 DEBUG (ProductController.java:32)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "reasonable" : true,
    "toCamelVunderline" : false,
    "pageData" : [ {
      "productId" : 14,
      "serialNumber" : null,
      "name" : "笔记本",
      "brand" : "IBM",
      "model" : "g123",
      "price" : 4600.0,
      "picture" : "d_r11_10_r1_c1.jpg",
      "description" : "IBM5x系列IBM5x系列"
    }, {
      "productId" : 15,
      "serialNumber" : null,
      "name" : "摄像机",
      "brand" : "三星",
      "model" : "05",
      "price" : 8000.0,
      "picture" : "d_r11_10_r1_c8.jpg",
      "description" : "像素超清"
    }, {
      "productId" : 16,
      "serialNumber" : null,
      "name" : "数码相机",
      "brand" : "爱国者",
      "model" : "08",
      "price" : 9000.0,
      "picture" : "d_r11_10_r1_c81.jpg",
      "description" : "爱国者08"
    }, {
      "productId" : 17,
      "serialNumber" : null,
      "name" : "手机",
      "brand" : "摩托罗拉",
      "model" : "60",
      "price" : 2800.0,
      "picture" : "d_r11_10_r1_c221.jpg",
      "description" : "摩托罗拉经典款"
    } ],
    "pageCount" : 3,
    "dataCount" : 12
  }
}
2019-07-24 15:00:30,612 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product LIMIT ?,? 
2019-07-24 15:00:30,616 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 4(Integer), 4(Integer)
2019-07-24 15:00:30,619 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 15:00:30,619 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM product 
2019-07-24 15:00:30,619 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:00:30,623 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:00:30,623 DEBUG (ProductController.java:32)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 2,
    "reasonable" : true,
    "toCamelVunderline" : false,
    "pageData" : [ {
      "productId" : 18,
      "serialNumber" : null,
      "name" : "笔记本",
      "brand" : "IBM",
      "model" : "80",
      "price" : 8000.0,
      "picture" : "d_r11_10_r1_c2.jpg",
      "description" : "IBM5x系列"
    }, {
      "productId" : 19,
      "serialNumber" : null,
      "name" : "智能手机",
      "brand" : "oppo",
      "model" : "r7",
      "price" : 2999.0,
      "picture" : "d_r11_10_r1_c22.jpg",
      "description" : "充电5分钟，通话两小时"
    }, {
      "productId" : 20,
      "serialNumber" : null,
      "name" : "数码相机",
      "brand" : "佳能",
      "model" : "5800",
      "price" : 14000.0,
      "picture" : "d_r11_10_r1_c116.jpg",
      "description" : "高清摄像头"
    }, {
      "productId" : 21,
      "serialNumber" : null,
      "name" : "美颜相机",
      "brand" : "卡西欧",
      "model" : "5800",
      "price" : 4000.0,
      "picture" : "d_r11_10_r1_c16.jpg",
      "description" : "堪称化妆术第一"
    } ],
    "pageCount" : 3,
    "dataCount" : 12
  }
}
2019-07-24 15:00:32,662 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product LIMIT ?,? 
2019-07-24 15:00:32,663 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-24 15:00:32,665 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 15:00:32,665 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM product 
2019-07-24 15:00:32,669 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:00:32,670 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:00:32,674 DEBUG (ProductController.java:32)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "reasonable" : true,
    "toCamelVunderline" : false,
    "pageData" : [ {
      "productId" : 14,
      "serialNumber" : null,
      "name" : "笔记本",
      "brand" : "IBM",
      "model" : "g123",
      "price" : 4600.0,
      "picture" : "d_r11_10_r1_c1.jpg",
      "description" : "IBM5x系列IBM5x系列"
    }, {
      "productId" : 15,
      "serialNumber" : null,
      "name" : "摄像机",
      "brand" : "三星",
      "model" : "05",
      "price" : 8000.0,
      "picture" : "d_r11_10_r1_c8.jpg",
      "description" : "像素超清"
    }, {
      "productId" : 16,
      "serialNumber" : null,
      "name" : "数码相机",
      "brand" : "爱国者",
      "model" : "08",
      "price" : 9000.0,
      "picture" : "d_r11_10_r1_c81.jpg",
      "description" : "爱国者08"
    }, {
      "productId" : 17,
      "serialNumber" : null,
      "name" : "手机",
      "brand" : "摩托罗拉",
      "model" : "60",
      "price" : 2800.0,
      "picture" : "d_r11_10_r1_c221.jpg",
      "description" : "摩托罗拉经典款"
    } ],
    "pageCount" : 3,
    "dataCount" : 12
  }
}
2019-07-24 15:00:57,707 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: INSERT INTO news VALUES(NULL,?,? ,?) 
2019-07-24 15:00:57,717 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 庆十一商品促销11111(String), 222222(String), 2019-07-05 00:00:00.0(Timestamp)
2019-07-24 15:00:57,730 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-24 15:00:59,482 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news 
2019-07-24 15:00:59,485 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:00:59,489 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 18
2019-07-24 15:00:59,491 DEBUG (NewsController.java:33)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 1,
    "title" : "创建新项目",
    "content" : "新闻内容",
    "writeDate" : 1466784000000
  }, {
    "newsId" : 2,
    "title" : "索尼位55降价送卡",
    "content" : "新闻内容3",
    "writeDate" : -30364761600000
  }, {
    "newsId" : 3,
    "title" : "理光b5不到二千",
    "content" : null,
    "writeDate" : 1191542400000
  }, {
    "newsId" : 5,
    "title" : "单反与镜头组合",
    "content" : null,
    "writeDate" : 1191369600000
  }, {
    "newsId" : 15,
    "title" : "百度将开拓美国和欧盟市场",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 16,
    "title" : "Uber CEO和马云交好",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 22,
    "title" : "今日早报",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 23,
    "title" : "高考查分被马云占了先机",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 24,
    "title" : "看完这个，你还想做微商吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 25,
    "title" : "农村电商只能成为空谈?",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 26,
    "title" : "上半年这些行业大爆炸",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 27,
    "title" : "阿里巴巴最为窘迫的四件事",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 28,
    "title" : "高管却离开了",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 30,
    "title" : "支付宝余额使用将受限",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 31,
    "title" : "国内垂直B2B电商平台TOP30",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 33,
    "title" : "谷歌要重新进入中国市场了吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 34,
    "title" : "今天",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 35,
    "title" : "庆十一商品促销11111",
    "content" : "222222",
    "writeDate" : 1562256000000
  } ]
}
2019-07-24 15:01:03,262 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news WHERE newsId = ? 
2019-07-24 15:01:03,263 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 15:01:03,263 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:01:05,986 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news 
2019-07-24 15:01:05,988 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:01:05,994 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 18
2019-07-24 15:01:05,996 DEBUG (NewsController.java:33)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 1,
    "title" : "创建新项目",
    "content" : "新闻内容",
    "writeDate" : 1466784000000
  }, {
    "newsId" : 2,
    "title" : "索尼位55降价送卡",
    "content" : "新闻内容3",
    "writeDate" : -30364761600000
  }, {
    "newsId" : 3,
    "title" : "理光b5不到二千",
    "content" : null,
    "writeDate" : 1191542400000
  }, {
    "newsId" : 5,
    "title" : "单反与镜头组合",
    "content" : null,
    "writeDate" : 1191369600000
  }, {
    "newsId" : 15,
    "title" : "百度将开拓美国和欧盟市场",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 16,
    "title" : "Uber CEO和马云交好",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 22,
    "title" : "今日早报",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 23,
    "title" : "高考查分被马云占了先机",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 24,
    "title" : "看完这个，你还想做微商吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 25,
    "title" : "农村电商只能成为空谈?",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 26,
    "title" : "上半年这些行业大爆炸",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 27,
    "title" : "阿里巴巴最为窘迫的四件事",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 28,
    "title" : "高管却离开了",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 30,
    "title" : "支付宝余额使用将受限",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 31,
    "title" : "国内垂直B2B电商平台TOP30",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 33,
    "title" : "谷歌要重新进入中国市场了吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 34,
    "title" : "今天",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 35,
    "title" : "庆十一商品促销11111",
    "content" : "222222",
    "writeDate" : 1562256000000
  } ]
}
2019-07-24 15:01:08,049 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news WHERE newsId = ? 
2019-07-24 15:01:08,051 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 16(Integer)
2019-07-24 15:01:08,054 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:01:11,640 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news 
2019-07-24 15:01:11,641 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:01:11,647 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 18
2019-07-24 15:01:11,649 DEBUG (NewsController.java:33)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 1,
    "title" : "创建新项目",
    "content" : "新闻内容",
    "writeDate" : 1466784000000
  }, {
    "newsId" : 2,
    "title" : "索尼位55降价送卡",
    "content" : "新闻内容3",
    "writeDate" : -30364761600000
  }, {
    "newsId" : 3,
    "title" : "理光b5不到二千",
    "content" : null,
    "writeDate" : 1191542400000
  }, {
    "newsId" : 5,
    "title" : "单反与镜头组合",
    "content" : null,
    "writeDate" : 1191369600000
  }, {
    "newsId" : 15,
    "title" : "百度将开拓美国和欧盟市场",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 16,
    "title" : "Uber CEO和马云交好",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 22,
    "title" : "今日早报",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 23,
    "title" : "高考查分被马云占了先机",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 24,
    "title" : "看完这个，你还想做微商吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 25,
    "title" : "农村电商只能成为空谈?",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 26,
    "title" : "上半年这些行业大爆炸",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 27,
    "title" : "阿里巴巴最为窘迫的四件事",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 28,
    "title" : "高管却离开了",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 30,
    "title" : "支付宝余额使用将受限",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 31,
    "title" : "国内垂直B2B电商平台TOP30",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 33,
    "title" : "谷歌要重新进入中国市场了吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 34,
    "title" : "今天",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 35,
    "title" : "庆十一商品促销11111",
    "content" : "222222",
    "writeDate" : 1562256000000
  } ]
}
2019-07-24 15:01:15,426 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news WHERE newsId = ? 
2019-07-24 15:01:15,517 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 23(Integer)
2019-07-24 15:01:15,551 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:01:17,522 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news 
2019-07-24 15:01:17,523 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:01:17,527 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 18
2019-07-24 15:01:17,529 DEBUG (NewsController.java:33)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 1,
    "title" : "创建新项目",
    "content" : "新闻内容",
    "writeDate" : 1466784000000
  }, {
    "newsId" : 2,
    "title" : "索尼位55降价送卡",
    "content" : "新闻内容3",
    "writeDate" : -30364761600000
  }, {
    "newsId" : 3,
    "title" : "理光b5不到二千",
    "content" : null,
    "writeDate" : 1191542400000
  }, {
    "newsId" : 5,
    "title" : "单反与镜头组合",
    "content" : null,
    "writeDate" : 1191369600000
  }, {
    "newsId" : 15,
    "title" : "百度将开拓美国和欧盟市场",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 16,
    "title" : "Uber CEO和马云交好",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 22,
    "title" : "今日早报",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 23,
    "title" : "高考查分被马云占了先机",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 24,
    "title" : "看完这个，你还想做微商吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 25,
    "title" : "农村电商只能成为空谈?",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 26,
    "title" : "上半年这些行业大爆炸",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 27,
    "title" : "阿里巴巴最为窘迫的四件事",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 28,
    "title" : "高管却离开了",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 30,
    "title" : "支付宝余额使用将受限",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 31,
    "title" : "国内垂直B2B电商平台TOP30",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 33,
    "title" : "谷歌要重新进入中国市场了吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 34,
    "title" : "今天",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 35,
    "title" : "庆十一商品促销11111",
    "content" : "222222",
    "writeDate" : 1562256000000
  } ]
}
2019-07-24 15:01:19,682 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news WHERE newsId = ? 
2019-07-24 15:01:19,684 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 15:01:19,686 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:01:31,417 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news 
2019-07-24 15:01:31,418 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:01:31,421 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 18
2019-07-24 15:01:31,422 DEBUG (NewsController.java:33)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 1,
    "title" : "创建新项目",
    "content" : "新闻内容",
    "writeDate" : 1466784000000
  }, {
    "newsId" : 2,
    "title" : "索尼位55降价送卡",
    "content" : "新闻内容3",
    "writeDate" : -30364761600000
  }, {
    "newsId" : 3,
    "title" : "理光b5不到二千",
    "content" : null,
    "writeDate" : 1191542400000
  }, {
    "newsId" : 5,
    "title" : "单反与镜头组合",
    "content" : null,
    "writeDate" : 1191369600000
  }, {
    "newsId" : 15,
    "title" : "百度将开拓美国和欧盟市场",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 16,
    "title" : "Uber CEO和马云交好",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 22,
    "title" : "今日早报",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 23,
    "title" : "高考查分被马云占了先机",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 24,
    "title" : "看完这个，你还想做微商吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 25,
    "title" : "农村电商只能成为空谈?",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 26,
    "title" : "上半年这些行业大爆炸",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 27,
    "title" : "阿里巴巴最为窘迫的四件事",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 28,
    "title" : "高管却离开了",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 30,
    "title" : "支付宝余额使用将受限",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 31,
    "title" : "国内垂直B2B电商平台TOP30",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 33,
    "title" : "谷歌要重新进入中国市场了吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 34,
    "title" : "今天",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 35,
    "title" : "庆十一商品促销11111",
    "content" : "222222",
    "writeDate" : 1562256000000
  } ]
}
2019-07-24 15:01:38,376 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news WHERE newsId = ? 
2019-07-24 15:01:38,379 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 3(Integer)
2019-07-24 15:01:38,381 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:01:50,073 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: UPDATE news SET title=? ,content=? ,writeDate=? WHERE newsId = ? 
2019-07-24 15:01:50,076 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 理光b5不到二千(String), 你好(String), 2007-10-05 00:00:00.0(Timestamp), 3(Long)
2019-07-24 15:01:50,083 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-24 15:01:54,235 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news 
2019-07-24 15:01:54,239 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:01:54,247 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 18
2019-07-24 15:01:54,249 DEBUG (NewsController.java:33)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 1,
    "title" : "创建新项目",
    "content" : "新闻内容",
    "writeDate" : 1466784000000
  }, {
    "newsId" : 2,
    "title" : "索尼位55降价送卡",
    "content" : "新闻内容3",
    "writeDate" : -30364761600000
  }, {
    "newsId" : 3,
    "title" : "理光b5不到二千",
    "content" : "你好",
    "writeDate" : 1191513600000
  }, {
    "newsId" : 5,
    "title" : "单反与镜头组合",
    "content" : null,
    "writeDate" : 1191369600000
  }, {
    "newsId" : 15,
    "title" : "百度将开拓美国和欧盟市场",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 16,
    "title" : "Uber CEO和马云交好",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 22,
    "title" : "今日早报",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 23,
    "title" : "高考查分被马云占了先机",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 24,
    "title" : "看完这个，你还想做微商吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 25,
    "title" : "农村电商只能成为空谈?",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 26,
    "title" : "上半年这些行业大爆炸",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 27,
    "title" : "阿里巴巴最为窘迫的四件事",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 28,
    "title" : "高管却离开了",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 30,
    "title" : "支付宝余额使用将受限",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 31,
    "title" : "国内垂直B2B电商平台TOP30",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 33,
    "title" : "谷歌要重新进入中国市场了吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 34,
    "title" : "今天",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 35,
    "title" : "庆十一商品促销11111",
    "content" : "222222",
    "writeDate" : 1562256000000
  } ]
}
2019-07-24 15:01:57,782 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news WHERE newsId = ? 
2019-07-24 15:01:57,783 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 3(Integer)
2019-07-24 15:01:57,787 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:02:00,686 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news 
2019-07-24 15:02:00,687 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:02:00,690 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 18
2019-07-24 15:02:00,692 DEBUG (NewsController.java:33)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 1,
    "title" : "创建新项目",
    "content" : "新闻内容",
    "writeDate" : 1466784000000
  }, {
    "newsId" : 2,
    "title" : "索尼位55降价送卡",
    "content" : "新闻内容3",
    "writeDate" : -30364761600000
  }, {
    "newsId" : 3,
    "title" : "理光b5不到二千",
    "content" : "你好",
    "writeDate" : 1191513600000
  }, {
    "newsId" : 5,
    "title" : "单反与镜头组合",
    "content" : null,
    "writeDate" : 1191369600000
  }, {
    "newsId" : 15,
    "title" : "百度将开拓美国和欧盟市场",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 16,
    "title" : "Uber CEO和马云交好",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 22,
    "title" : "今日早报",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 23,
    "title" : "高考查分被马云占了先机",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 24,
    "title" : "看完这个，你还想做微商吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 25,
    "title" : "农村电商只能成为空谈?",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 26,
    "title" : "上半年这些行业大爆炸",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 27,
    "title" : "阿里巴巴最为窘迫的四件事",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 28,
    "title" : "高管却离开了",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 30,
    "title" : "支付宝余额使用将受限",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 31,
    "title" : "国内垂直B2B电商平台TOP30",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 33,
    "title" : "谷歌要重新进入中国市场了吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 34,
    "title" : "今天",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 35,
    "title" : "庆十一商品促销11111",
    "content" : "222222",
    "writeDate" : 1562256000000
  } ]
}
2019-07-24 15:02:05,360 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news WHERE newsId = ? 
2019-07-24 15:02:05,398 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 15(Integer)
2019-07-24 15:02:05,401 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:02:54,069 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users 
2019-07-24 15:02:54,071 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:02:54,076 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 14
2019-07-24 15:02:54,077 DEBUG (UserController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 2,
    "userName" : "user2",
    "password" : "222222",
    "status" : 1
  }, {
    "userId" : 9,
    "userName" : "user9",
    "password" : "999999",
    "status" : 1
  }, {
    "userId" : 10,
    "userName" : "user1010",
    "password" : "111111",
    "status" : 1
  }, {
    "userId" : 12,
    "userName" : "user11",
    "password" : "111111",
    "status" : 0
  }, {
    "userId" : 13,
    "userName" : "user123",
    "password" : "222222",
    "status" : 0
  }, {
    "userId" : 18,
    "userName" : "user167",
    "password" : "666666",
    "status" : 0
  }, {
    "userId" : 19,
    "userName" : "user19",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 20,
    "userName" : "user20",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 22,
    "userName" : "guoyan",
    "password" : "123456",
    "status" : 1
  }, {
    "userId" : 23,
    "userName" : "liuxinle",
    "password" : "111111",
    "status" : 1
  }, {
    "userId" : 24,
    "userName" : "maqiuyue",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 29,
    "userName" : "admin",
    "password" : "123456",
    "status" : 1
  }, {
    "userId" : 37,
    "userName" : "张三",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 41,
    "userName" : "王五愣2",
    "password" : "123456",
    "status" : 0
  } ]
}
2019-07-24 15:05:49,083 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product LIMIT ?,? 
2019-07-24 15:05:49,085 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-24 15:05:49,088 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 15:05:49,090 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM product 
2019-07-24 15:05:49,091 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:05:49,093 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 15:05:49,096 DEBUG (ProductController.java:32)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "reasonable" : true,
    "toCamelVunderline" : false,
    "pageData" : [ {
      "productId" : 14,
      "serialNumber" : null,
      "name" : "笔记本",
      "brand" : "IBM",
      "model" : "g123",
      "price" : 4600.0,
      "picture" : "d_r11_10_r1_c1.jpg",
      "description" : "IBM5x系列IBM5x系列"
    }, {
      "productId" : 15,
      "serialNumber" : null,
      "name" : "摄像机",
      "brand" : "三星",
      "model" : "05",
      "price" : 8000.0,
      "picture" : "d_r11_10_r1_c8.jpg",
      "description" : "像素超清"
    }, {
      "productId" : 16,
      "serialNumber" : null,
      "name" : "数码相机",
      "brand" : "爱国者",
      "model" : "08",
      "price" : 9000.0,
      "picture" : "d_r11_10_r1_c81.jpg",
      "description" : "爱国者08"
    }, {
      "productId" : 17,
      "serialNumber" : null,
      "name" : "手机",
      "brand" : "摩托罗拉",
      "model" : "60",
      "price" : 2800.0,
      "picture" : "d_r11_10_r1_c221.jpg",
      "description" : "摩托罗拉经典款"
    } ],
    "pageCount" : 3,
    "dataCount" : 12
  }
}
2019-07-24 15:11:51,655 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product 
2019-07-24 15:11:51,669 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news 
2019-07-24 15:11:51,678 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:11:51,678 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:11:51,696 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 15:11:51,696 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 18
2019-07-24 15:11:51,699 DEBUG (NewsController.java:33)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 1,
    "title" : "创建新项目",
    "content" : "新闻内容",
    "writeDate" : 1466784000000
  }, {
    "newsId" : 2,
    "title" : "索尼位55降价送卡",
    "content" : "新闻内容3",
    "writeDate" : -30364761600000
  }, {
    "newsId" : 3,
    "title" : "理光b5不到二千",
    "content" : "你好",
    "writeDate" : 1191513600000
  }, {
    "newsId" : 5,
    "title" : "单反与镜头组合",
    "content" : null,
    "writeDate" : 1191369600000
  }, {
    "newsId" : 15,
    "title" : "百度将开拓美国和欧盟市场",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 16,
    "title" : "Uber CEO和马云交好",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 22,
    "title" : "今日早报",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 23,
    "title" : "高考查分被马云占了先机",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 24,
    "title" : "看完这个，你还想做微商吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 25,
    "title" : "农村电商只能成为空谈?",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 26,
    "title" : "上半年这些行业大爆炸",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 27,
    "title" : "阿里巴巴最为窘迫的四件事",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 28,
    "title" : "高管却离开了",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 30,
    "title" : "支付宝余额使用将受限",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 31,
    "title" : "国内垂直B2B电商平台TOP30",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 33,
    "title" : "谷歌要重新进入中国市场了吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 34,
    "title" : "今天",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 35,
    "title" : "庆十一商品促销11111",
    "content" : "222222",
    "writeDate" : 1562256000000
  } ]
}
2019-07-24 15:12:04,309 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product 
2019-07-24 15:12:04,311 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:12:04,316 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 15:12:04,317 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news 
2019-07-24 15:12:04,319 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:12:04,322 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 18
2019-07-24 15:12:04,323 DEBUG (NewsController.java:33)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 1,
    "title" : "创建新项目",
    "content" : "新闻内容",
    "writeDate" : 1466784000000
  }, {
    "newsId" : 2,
    "title" : "索尼位55降价送卡",
    "content" : "新闻内容3",
    "writeDate" : -30364761600000
  }, {
    "newsId" : 3,
    "title" : "理光b5不到二千",
    "content" : "你好",
    "writeDate" : 1191513600000
  }, {
    "newsId" : 5,
    "title" : "单反与镜头组合",
    "content" : null,
    "writeDate" : 1191369600000
  }, {
    "newsId" : 15,
    "title" : "百度将开拓美国和欧盟市场",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 16,
    "title" : "Uber CEO和马云交好",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 22,
    "title" : "今日早报",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 23,
    "title" : "高考查分被马云占了先机",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 24,
    "title" : "看完这个，你还想做微商吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 25,
    "title" : "农村电商只能成为空谈?",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 26,
    "title" : "上半年这些行业大爆炸",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 27,
    "title" : "阿里巴巴最为窘迫的四件事",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 28,
    "title" : "高管却离开了",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 30,
    "title" : "支付宝余额使用将受限",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 31,
    "title" : "国内垂直B2B电商平台TOP30",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 33,
    "title" : "谷歌要重新进入中国市场了吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 34,
    "title" : "今天",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 35,
    "title" : "庆十一商品促销11111",
    "content" : "222222",
    "writeDate" : 1562256000000
  } ]
}
2019-07-24 15:13:27,874 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news 
2019-07-24 15:13:27,875 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:13:27,879 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 18
2019-07-24 15:13:27,881 DEBUG (NewsController.java:33)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 1,
    "title" : "创建新项目",
    "content" : "新闻内容",
    "writeDate" : 1466784000000
  }, {
    "newsId" : 2,
    "title" : "索尼位55降价送卡",
    "content" : "新闻内容3",
    "writeDate" : -30364761600000
  }, {
    "newsId" : 3,
    "title" : "理光b5不到二千",
    "content" : "你好",
    "writeDate" : 1191513600000
  }, {
    "newsId" : 5,
    "title" : "单反与镜头组合",
    "content" : null,
    "writeDate" : 1191369600000
  }, {
    "newsId" : 15,
    "title" : "百度将开拓美国和欧盟市场",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 16,
    "title" : "Uber CEO和马云交好",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 22,
    "title" : "今日早报",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 23,
    "title" : "高考查分被马云占了先机",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 24,
    "title" : "看完这个，你还想做微商吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 25,
    "title" : "农村电商只能成为空谈?",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 26,
    "title" : "上半年这些行业大爆炸",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 27,
    "title" : "阿里巴巴最为窘迫的四件事",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 28,
    "title" : "高管却离开了",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 30,
    "title" : "支付宝余额使用将受限",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 31,
    "title" : "国内垂直B2B电商平台TOP30",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 33,
    "title" : "谷歌要重新进入中国市场了吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 34,
    "title" : "今天",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 35,
    "title" : "庆十一商品促销11111",
    "content" : "222222",
    "writeDate" : 1562256000000
  } ]
}
2019-07-24 15:13:39,255 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news 
2019-07-24 15:13:39,258 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:13:39,260 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 18
2019-07-24 15:13:39,264 DEBUG (NewsController.java:33)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 1,
    "title" : "创建新项目",
    "content" : "新闻内容",
    "writeDate" : 1466784000000
  }, {
    "newsId" : 2,
    "title" : "索尼位55降价送卡",
    "content" : "新闻内容3",
    "writeDate" : -30364761600000
  }, {
    "newsId" : 3,
    "title" : "理光b5不到二千",
    "content" : "你好",
    "writeDate" : 1191513600000
  }, {
    "newsId" : 5,
    "title" : "单反与镜头组合",
    "content" : null,
    "writeDate" : 1191369600000
  }, {
    "newsId" : 15,
    "title" : "百度将开拓美国和欧盟市场",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 16,
    "title" : "Uber CEO和马云交好",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 22,
    "title" : "今日早报",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 23,
    "title" : "高考查分被马云占了先机",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 24,
    "title" : "看完这个，你还想做微商吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 25,
    "title" : "农村电商只能成为空谈?",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 26,
    "title" : "上半年这些行业大爆炸",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 27,
    "title" : "阿里巴巴最为窘迫的四件事",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 28,
    "title" : "高管却离开了",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 30,
    "title" : "支付宝余额使用将受限",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 31,
    "title" : "国内垂直B2B电商平台TOP30",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 33,
    "title" : "谷歌要重新进入中国市场了吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 34,
    "title" : "今天",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 35,
    "title" : "庆十一商品促销11111",
    "content" : "222222",
    "writeDate" : 1562256000000
  } ]
}
2019-07-24 15:14:53,196 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news 
2019-07-24 15:14:53,196 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:14:53,200 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 18
2019-07-24 15:14:53,204 DEBUG (NewsController.java:33)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 1,
    "title" : "创建新项目",
    "content" : "新闻内容",
    "writeDate" : 1466784000000
  }, {
    "newsId" : 2,
    "title" : "索尼位55降价送卡",
    "content" : "新闻内容3",
    "writeDate" : -30364761600000
  }, {
    "newsId" : 3,
    "title" : "理光b5不到二千",
    "content" : "你好",
    "writeDate" : 1191513600000
  }, {
    "newsId" : 5,
    "title" : "单反与镜头组合",
    "content" : null,
    "writeDate" : 1191369600000
  }, {
    "newsId" : 15,
    "title" : "百度将开拓美国和欧盟市场",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 16,
    "title" : "Uber CEO和马云交好",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 22,
    "title" : "今日早报",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 23,
    "title" : "高考查分被马云占了先机",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 24,
    "title" : "看完这个，你还想做微商吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 25,
    "title" : "农村电商只能成为空谈?",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 26,
    "title" : "上半年这些行业大爆炸",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 27,
    "title" : "阿里巴巴最为窘迫的四件事",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 28,
    "title" : "高管却离开了",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 30,
    "title" : "支付宝余额使用将受限",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 31,
    "title" : "国内垂直B2B电商平台TOP30",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 33,
    "title" : "谷歌要重新进入中国市场了吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 34,
    "title" : "今天",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 35,
    "title" : "庆十一商品促销11111",
    "content" : "222222",
    "writeDate" : 1562256000000
  } ]
}
2019-07-24 15:14:55,572 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news 
2019-07-24 15:14:55,576 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:14:55,580 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 18
2019-07-24 15:14:55,580 DEBUG (NewsController.java:33)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 1,
    "title" : "创建新项目",
    "content" : "新闻内容",
    "writeDate" : 1466784000000
  }, {
    "newsId" : 2,
    "title" : "索尼位55降价送卡",
    "content" : "新闻内容3",
    "writeDate" : -30364761600000
  }, {
    "newsId" : 3,
    "title" : "理光b5不到二千",
    "content" : "你好",
    "writeDate" : 1191513600000
  }, {
    "newsId" : 5,
    "title" : "单反与镜头组合",
    "content" : null,
    "writeDate" : 1191369600000
  }, {
    "newsId" : 15,
    "title" : "百度将开拓美国和欧盟市场",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 16,
    "title" : "Uber CEO和马云交好",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 22,
    "title" : "今日早报",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 23,
    "title" : "高考查分被马云占了先机",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 24,
    "title" : "看完这个，你还想做微商吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 25,
    "title" : "农村电商只能成为空谈?",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 26,
    "title" : "上半年这些行业大爆炸",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 27,
    "title" : "阿里巴巴最为窘迫的四件事",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 28,
    "title" : "高管却离开了",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 30,
    "title" : "支付宝余额使用将受限",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 31,
    "title" : "国内垂直B2B电商平台TOP30",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 33,
    "title" : "谷歌要重新进入中国市场了吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 34,
    "title" : "今天",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 35,
    "title" : "庆十一商品促销11111",
    "content" : "222222",
    "writeDate" : 1562256000000
  } ]
}
2019-07-24 15:16:21,946 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news 
2019-07-24 15:16:21,946 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:16:21,950 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 18
2019-07-24 15:16:21,950 DEBUG (NewsController.java:33)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 1,
    "title" : "创建新项目",
    "content" : "新闻内容",
    "writeDate" : 1466784000000
  }, {
    "newsId" : 2,
    "title" : "索尼位55降价送卡",
    "content" : "新闻内容3",
    "writeDate" : -30364761600000
  }, {
    "newsId" : 3,
    "title" : "理光b5不到二千",
    "content" : "你好",
    "writeDate" : 1191513600000
  }, {
    "newsId" : 5,
    "title" : "单反与镜头组合",
    "content" : null,
    "writeDate" : 1191369600000
  }, {
    "newsId" : 15,
    "title" : "百度将开拓美国和欧盟市场",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 16,
    "title" : "Uber CEO和马云交好",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 22,
    "title" : "今日早报",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 23,
    "title" : "高考查分被马云占了先机",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 24,
    "title" : "看完这个，你还想做微商吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 25,
    "title" : "农村电商只能成为空谈?",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 26,
    "title" : "上半年这些行业大爆炸",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 27,
    "title" : "阿里巴巴最为窘迫的四件事",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 28,
    "title" : "高管却离开了",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 30,
    "title" : "支付宝余额使用将受限",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 31,
    "title" : "国内垂直B2B电商平台TOP30",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 33,
    "title" : "谷歌要重新进入中国市场了吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 34,
    "title" : "今天",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 35,
    "title" : "庆十一商品促销11111",
    "content" : "222222",
    "writeDate" : 1562256000000
  } ]
}
2019-07-24 15:16:24,081 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message 
2019-07-24 15:16:24,081 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:16:24,089 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 15:16:24,097 ERROR (JsonUtil.java:129)- [FAILED toString()] 对象转Json串失败，失败原因：(was java.lang.NullPointerException) (through reference chain: java.util.HashMap["data"]->java.util.ArrayList[0]->com.zryx.company.model.Message["writeDate"])
2019-07-24 15:16:24,517 DEBUG (MessageController.java:41)- json===>null
2019-07-24 15:16:26,488 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message 
2019-07-24 15:16:26,490 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:16:26,490 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 15:16:27,584 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message 
2019-07-24 15:16:27,586 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:16:27,590 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 15:16:28,520 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message 
2019-07-24 15:16:28,522 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:16:28,524 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 15:16:26,494 ERROR (JsonUtil.java:129)- [FAILED toString()] 对象转Json串失败，失败原因：(was java.lang.NullPointerException) (through reference chain: java.util.HashMap["data"]->java.util.ArrayList[0]->com.zryx.company.model.Message["writeDate"])
2019-07-24 15:16:28,697 DEBUG (MessageController.java:41)- json===>null
2019-07-24 15:16:28,526 ERROR (JsonUtil.java:129)- [FAILED toString()] 对象转Json串失败，失败原因：(was java.lang.NullPointerException) (through reference chain: java.util.HashMap["data"]->java.util.ArrayList[0]->com.zryx.company.model.Message["writeDate"])
2019-07-24 15:16:29,693 DEBUG (MessageController.java:41)- json===>null
2019-07-24 15:16:27,590 ERROR (JsonUtil.java:129)- [FAILED toString()] 对象转Json串失败，失败原因：(was java.lang.NullPointerException) (through reference chain: java.util.HashMap["data"]->java.util.ArrayList[0]->com.zryx.company.model.Message["writeDate"])
2019-07-24 15:16:29,697 DEBUG (MessageController.java:41)- json===>null
2019-07-24 15:16:58,148 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news 
2019-07-24 15:16:58,152 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:16:58,155 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 18
2019-07-24 15:16:58,157 DEBUG (NewsController.java:33)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 1,
    "title" : "创建新项目",
    "content" : "新闻内容",
    "writeDate" : 1466784000000
  }, {
    "newsId" : 2,
    "title" : "索尼位55降价送卡",
    "content" : "新闻内容3",
    "writeDate" : -30364761600000
  }, {
    "newsId" : 3,
    "title" : "理光b5不到二千",
    "content" : "你好",
    "writeDate" : 1191513600000
  }, {
    "newsId" : 5,
    "title" : "单反与镜头组合",
    "content" : null,
    "writeDate" : 1191369600000
  }, {
    "newsId" : 15,
    "title" : "百度将开拓美国和欧盟市场",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 16,
    "title" : "Uber CEO和马云交好",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 22,
    "title" : "今日早报",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 23,
    "title" : "高考查分被马云占了先机",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 24,
    "title" : "看完这个，你还想做微商吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 25,
    "title" : "农村电商只能成为空谈?",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 26,
    "title" : "上半年这些行业大爆炸",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 27,
    "title" : "阿里巴巴最为窘迫的四件事",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 28,
    "title" : "高管却离开了",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 30,
    "title" : "支付宝余额使用将受限",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 31,
    "title" : "国内垂直B2B电商平台TOP30",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 33,
    "title" : "谷歌要重新进入中国市场了吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 34,
    "title" : "今天",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 35,
    "title" : "庆十一商品促销11111",
    "content" : "222222",
    "writeDate" : 1562256000000
  } ]
}
2019-07-24 15:19:56,541 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-VFTL6TA with PID 14032 (C:\123\company\target\classes started by 高羽翯 in C:\123\company)
2019-07-24 15:19:56,541 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-24 15:19:56,541 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-24 15:20:00,942 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 4.654 seconds (JVM running for 4994.786)
2019-07-24 15:20:01,993 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message 
2019-07-24 15:20:02,015 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:20:02,023 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 15:20:02,087 ERROR (JsonUtil.java:129)- [FAILED toString()] 对象转Json串失败，失败原因：(was java.lang.NullPointerException) (through reference chain: java.util.HashMap["data"]->java.util.ArrayList[0]->com.zryx.company.model.Message["writeDate"])
2019-07-24 15:20:03,175 DEBUG (MessageController.java:41)- json===>null
2019-07-24 15:23:53,145 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news 
2019-07-24 15:23:53,146 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:23:53,155 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 18
2019-07-24 15:23:53,162 DEBUG (NewsController.java:33)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 1,
    "title" : "创建新项目",
    "content" : "新闻内容",
    "writeDate" : 1466784000000
  }, {
    "newsId" : 2,
    "title" : "索尼位55降价送卡",
    "content" : "新闻内容3",
    "writeDate" : -30364761600000
  }, {
    "newsId" : 3,
    "title" : "理光b5不到二千",
    "content" : "你好",
    "writeDate" : 1191513600000
  }, {
    "newsId" : 5,
    "title" : "单反与镜头组合",
    "content" : null,
    "writeDate" : 1191369600000
  }, {
    "newsId" : 15,
    "title" : "百度将开拓美国和欧盟市场",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 16,
    "title" : "Uber CEO和马云交好",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 22,
    "title" : "今日早报",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 23,
    "title" : "高考查分被马云占了先机",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 24,
    "title" : "看完这个，你还想做微商吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 25,
    "title" : "农村电商只能成为空谈?",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 26,
    "title" : "上半年这些行业大爆炸",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 27,
    "title" : "阿里巴巴最为窘迫的四件事",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 28,
    "title" : "高管却离开了",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 30,
    "title" : "支付宝余额使用将受限",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 31,
    "title" : "国内垂直B2B电商平台TOP30",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 33,
    "title" : "谷歌要重新进入中国市场了吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 34,
    "title" : "今天",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 35,
    "title" : "庆十一商品促销11111",
    "content" : "222222",
    "writeDate" : 1562256000000
  } ]
}
2019-07-24 15:31:09,939 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-VFTL6TA with PID 14032 (C:\123\company\target\classes started by 高羽翯 in C:\123\company)
2019-07-24 15:31:09,940 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-24 15:31:09,940 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-24 15:31:17,534 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 7.756 seconds (JVM running for 5671.377)
2019-07-24 15:31:20,498 ERROR (BaseController.java:285)- 系统异常:nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve com.zryx.company.mapper.MessageMapper.allMessage
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve com.zryx.company.mapper.MessageMapper.allMessage
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:77)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy97.allMessage(Unknown Source)
	at com.zryx.company.service.impl.MessageServiceImpl.allMessage(MessageServiceImpl.java:48)
	at com.zryx.company.controller.MessageController.initMessage(MessageController.java:39)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve com.zryx.company.mapper.MessageMapper.allMessage
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:149)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.GeneratedMethodAccessor103.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 62 common frames omitted
Caused by: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:81)
	at org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:82)
	at org.mybatis.spring.transaction.SpringManagedTransaction.getConnection(SpringManagedTransaction.java:68)
	at org.apache.ibatis.executor.BaseExecutor.getConnection(BaseExecutor.java:336)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:85)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	... 67 common frames omitted
Caused by: java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:835)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:455)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:240)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:199)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:157)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:78)
	... 77 common frames omitted
2019-07-24 15:31:24,152 ERROR (BaseController.java:285)- 系统异常:nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve com.zryx.company.mapper.MessageMapper.allMessage
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve com.zryx.company.mapper.MessageMapper.allMessage
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:77)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy97.allMessage(Unknown Source)
	at com.zryx.company.service.impl.MessageServiceImpl.allMessage(MessageServiceImpl.java:48)
	at com.zryx.company.controller.MessageController.initMessage(MessageController.java:39)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve com.zryx.company.mapper.MessageMapper.allMessage
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:149)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.GeneratedMethodAccessor103.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 62 common frames omitted
Caused by: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:81)
	at org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:82)
	at org.mybatis.spring.transaction.SpringManagedTransaction.getConnection(SpringManagedTransaction.java:68)
	at org.apache.ibatis.executor.BaseExecutor.getConnection(BaseExecutor.java:336)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:85)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	... 67 common frames omitted
Caused by: java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:835)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:455)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:240)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:199)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:157)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:78)
	... 77 common frames omitted
2019-07-24 15:31:27,891 ERROR (BaseController.java:285)- 系统异常:nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve com.zryx.company.mapper.MessageMapper.allMessage
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve com.zryx.company.mapper.MessageMapper.allMessage
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:77)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy97.allMessage(Unknown Source)
	at com.zryx.company.service.impl.MessageServiceImpl.allMessage(MessageServiceImpl.java:48)
	at com.zryx.company.controller.MessageController.initMessage(MessageController.java:39)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve com.zryx.company.mapper.MessageMapper.allMessage
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:149)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.GeneratedMethodAccessor103.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 62 common frames omitted
Caused by: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:81)
	at org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:82)
	at org.mybatis.spring.transaction.SpringManagedTransaction.getConnection(SpringManagedTransaction.java:68)
	at org.apache.ibatis.executor.BaseExecutor.getConnection(BaseExecutor.java:336)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:85)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	... 67 common frames omitted
Caused by: java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:835)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:455)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:240)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:199)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:157)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:78)
	... 77 common frames omitted
2019-07-24 15:32:05,311 ERROR (BaseController.java:285)- 系统异常:nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve com.zryx.company.mapper.MessageMapper.allMessage
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve com.zryx.company.mapper.MessageMapper.allMessage
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:77)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy97.allMessage(Unknown Source)
	at com.zryx.company.service.impl.MessageServiceImpl.allMessage(MessageServiceImpl.java:48)
	at com.zryx.company.controller.MessageController.initMessage(MessageController.java:39)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve com.zryx.company.mapper.MessageMapper.allMessage
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:149)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.GeneratedMethodAccessor103.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 62 common frames omitted
Caused by: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:81)
	at org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:82)
	at org.mybatis.spring.transaction.SpringManagedTransaction.getConnection(SpringManagedTransaction.java:68)
	at org.apache.ibatis.executor.BaseExecutor.getConnection(BaseExecutor.java:336)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:85)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	... 67 common frames omitted
Caused by: java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:835)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:455)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:240)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:199)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:157)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:78)
	... 77 common frames omitted
2019-07-24 15:32:12,415 ERROR (BaseController.java:285)- 系统异常:nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve com.zryx.company.mapper.MessageMapper.allMessage
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve com.zryx.company.mapper.MessageMapper.allMessage
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:77)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy97.allMessage(Unknown Source)
	at com.zryx.company.service.impl.MessageServiceImpl.allMessage(MessageServiceImpl.java:48)
	at com.zryx.company.controller.MessageController.initMessage(MessageController.java:39)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve com.zryx.company.mapper.MessageMapper.allMessage
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:149)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.GeneratedMethodAccessor103.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 62 common frames omitted
Caused by: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:81)
	at org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:82)
	at org.mybatis.spring.transaction.SpringManagedTransaction.getConnection(SpringManagedTransaction.java:68)
	at org.apache.ibatis.executor.BaseExecutor.getConnection(BaseExecutor.java:336)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:85)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	... 67 common frames omitted
Caused by: java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:835)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:455)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:240)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:199)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:157)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:78)
	... 77 common frames omitted
2019-07-24 15:32:18,473 ERROR (BaseController.java:285)- 系统异常:nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve com.zryx.company.mapper.MessageMapper.allMessage
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve com.zryx.company.mapper.MessageMapper.allMessage
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:77)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy97.allMessage(Unknown Source)
	at com.zryx.company.service.impl.MessageServiceImpl.allMessage(MessageServiceImpl.java:48)
	at com.zryx.company.controller.MessageController.initMessage(MessageController.java:39)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve com.zryx.company.mapper.MessageMapper.allMessage
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:149)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.GeneratedMethodAccessor103.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 62 common frames omitted
Caused by: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:81)
	at org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:82)
	at org.mybatis.spring.transaction.SpringManagedTransaction.getConnection(SpringManagedTransaction.java:68)
	at org.apache.ibatis.executor.BaseExecutor.getConnection(BaseExecutor.java:336)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:85)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	... 67 common frames omitted
Caused by: java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:835)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:455)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:240)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:199)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:157)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:78)
	... 77 common frames omitted
2019-07-24 15:33:31,716 ERROR (BaseController.java:285)- 系统异常:nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve com.zryx.company.mapper.MessageMapper.allMessage
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve com.zryx.company.mapper.MessageMapper.allMessage
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:77)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy97.allMessage(Unknown Source)
	at com.zryx.company.service.impl.MessageServiceImpl.allMessage(MessageServiceImpl.java:48)
	at com.zryx.company.controller.MessageController.initMessage(MessageController.java:39)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve com.zryx.company.mapper.MessageMapper.allMessage
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:149)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.GeneratedMethodAccessor103.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 62 common frames omitted
Caused by: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:81)
	at org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:82)
	at org.mybatis.spring.transaction.SpringManagedTransaction.getConnection(SpringManagedTransaction.java:68)
	at org.apache.ibatis.executor.BaseExecutor.getConnection(BaseExecutor.java:336)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:85)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	... 67 common frames omitted
Caused by: java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:835)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:455)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:240)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:199)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:157)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:78)
	... 77 common frames omitted
2019-07-24 15:36:28,574 ERROR (BaseController.java:285)- 系统异常:nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve com.zryx.company.mapper.MessageMapper.allMessage
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve com.zryx.company.mapper.MessageMapper.allMessage
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:77)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy97.allMessage(Unknown Source)
	at com.zryx.company.service.impl.MessageServiceImpl.allMessage(MessageServiceImpl.java:48)
	at com.zryx.company.controller.MessageController.initMessage(MessageController.java:39)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve com.zryx.company.mapper.MessageMapper.allMessage
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:149)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.GeneratedMethodAccessor103.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 62 common frames omitted
Caused by: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:81)
	at org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:82)
	at org.mybatis.spring.transaction.SpringManagedTransaction.getConnection(SpringManagedTransaction.java:68)
	at org.apache.ibatis.executor.BaseExecutor.getConnection(BaseExecutor.java:336)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:85)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	... 67 common frames omitted
Caused by: java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:835)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:455)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:240)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:199)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:157)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:78)
	... 77 common frames omitted
2019-07-24 15:36:35,361 ERROR (BaseController.java:285)- 系统异常:nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve com.zryx.company.mapper.MessageMapper.allMessage
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve com.zryx.company.mapper.MessageMapper.allMessage
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:77)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy97.allMessage(Unknown Source)
	at com.zryx.company.service.impl.MessageServiceImpl.allMessage(MessageServiceImpl.java:48)
	at com.zryx.company.controller.MessageController.initMessage(MessageController.java:39)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve com.zryx.company.mapper.MessageMapper.allMessage
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:149)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.GeneratedMethodAccessor103.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 62 common frames omitted
Caused by: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:81)
	at org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:82)
	at org.mybatis.spring.transaction.SpringManagedTransaction.getConnection(SpringManagedTransaction.java:68)
	at org.apache.ibatis.executor.BaseExecutor.getConnection(BaseExecutor.java:336)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:85)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	... 67 common frames omitted
Caused by: java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:835)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:455)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:240)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:199)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:157)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:78)
	... 77 common frames omitted
2019-07-24 15:37:06,363 ERROR (BaseController.java:285)- 系统异常:nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/NewsMapper.xml
### The error may involve com.zryx.company.mapper.NewsMapper.getAllNews
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/NewsMapper.xml
### The error may involve com.zryx.company.mapper.NewsMapper.getAllNews
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:77)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy94.getAllNews(Unknown Source)
	at com.zryx.company.service.impl.NewsServiceImpl.getAllNews(NewsServiceImpl.java:39)
	at com.zryx.company.controller.NewsController.initNews(NewsController.java:31)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/NewsMapper.xml
### The error may involve com.zryx.company.mapper.NewsMapper.getAllNews
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:149)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.GeneratedMethodAccessor103.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 62 common frames omitted
Caused by: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:81)
	at org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:82)
	at org.mybatis.spring.transaction.SpringManagedTransaction.getConnection(SpringManagedTransaction.java:68)
	at org.apache.ibatis.executor.BaseExecutor.getConnection(BaseExecutor.java:336)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:85)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	... 67 common frames omitted
Caused by: java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:835)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:455)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:240)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:199)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:157)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:78)
	... 77 common frames omitted
2019-07-24 15:37:10,842 ERROR (BaseController.java:285)- 系统异常:nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/NewsMapper.xml
### The error may involve com.zryx.company.mapper.NewsMapper.getAllNews
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/NewsMapper.xml
### The error may involve com.zryx.company.mapper.NewsMapper.getAllNews
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:77)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy94.getAllNews(Unknown Source)
	at com.zryx.company.service.impl.NewsServiceImpl.getAllNews(NewsServiceImpl.java:39)
	at com.zryx.company.controller.NewsController.initNews(NewsController.java:31)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/NewsMapper.xml
### The error may involve com.zryx.company.mapper.NewsMapper.getAllNews
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:149)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.GeneratedMethodAccessor103.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 62 common frames omitted
Caused by: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:81)
	at org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:82)
	at org.mybatis.spring.transaction.SpringManagedTransaction.getConnection(SpringManagedTransaction.java:68)
	at org.apache.ibatis.executor.BaseExecutor.getConnection(BaseExecutor.java:336)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:85)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	... 67 common frames omitted
Caused by: java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:835)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:455)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:240)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:199)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:157)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:78)
	... 77 common frames omitted
2019-07-24 15:37:12,478 ERROR (BaseController.java:285)- 系统异常:nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/NewsMapper.xml
### The error may involve com.zryx.company.mapper.NewsMapper.getAllNews
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/NewsMapper.xml
### The error may involve com.zryx.company.mapper.NewsMapper.getAllNews
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:77)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy94.getAllNews(Unknown Source)
	at com.zryx.company.service.impl.NewsServiceImpl.getAllNews(NewsServiceImpl.java:39)
	at com.zryx.company.controller.NewsController.initNews(NewsController.java:31)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/NewsMapper.xml
### The error may involve com.zryx.company.mapper.NewsMapper.getAllNews
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:149)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.GeneratedMethodAccessor103.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 62 common frames omitted
Caused by: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:81)
	at org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:82)
	at org.mybatis.spring.transaction.SpringManagedTransaction.getConnection(SpringManagedTransaction.java:68)
	at org.apache.ibatis.executor.BaseExecutor.getConnection(BaseExecutor.java:336)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:85)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	... 67 common frames omitted
Caused by: java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:835)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:455)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:240)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:199)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:157)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:78)
	... 77 common frames omitted
2019-07-24 15:37:13,870 ERROR (BaseController.java:285)- 系统异常:nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/NewsMapper.xml
### The error may involve com.zryx.company.mapper.NewsMapper.getAllNews
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/NewsMapper.xml
### The error may involve com.zryx.company.mapper.NewsMapper.getAllNews
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:77)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy94.getAllNews(Unknown Source)
	at com.zryx.company.service.impl.NewsServiceImpl.getAllNews(NewsServiceImpl.java:39)
	at com.zryx.company.controller.NewsController.initNews(NewsController.java:31)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/NewsMapper.xml
### The error may involve com.zryx.company.mapper.NewsMapper.getAllNews
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:149)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.GeneratedMethodAccessor103.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 62 common frames omitted
Caused by: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:81)
	at org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:82)
	at org.mybatis.spring.transaction.SpringManagedTransaction.getConnection(SpringManagedTransaction.java:68)
	at org.apache.ibatis.executor.BaseExecutor.getConnection(BaseExecutor.java:336)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:85)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	... 67 common frames omitted
Caused by: java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:835)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:455)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:240)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:199)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:157)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:78)
	... 77 common frames omitted
2019-07-24 15:37:15,413 ERROR (BaseController.java:285)- 系统异常:nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/NewsMapper.xml
### The error may involve com.zryx.company.mapper.NewsMapper.getAllNews
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/NewsMapper.xml
### The error may involve com.zryx.company.mapper.NewsMapper.getAllNews
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:77)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy94.getAllNews(Unknown Source)
	at com.zryx.company.service.impl.NewsServiceImpl.getAllNews(NewsServiceImpl.java:39)
	at com.zryx.company.controller.NewsController.initNews(NewsController.java:31)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/NewsMapper.xml
### The error may involve com.zryx.company.mapper.NewsMapper.getAllNews
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:149)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.GeneratedMethodAccessor103.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 62 common frames omitted
Caused by: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:81)
	at org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:82)
	at org.mybatis.spring.transaction.SpringManagedTransaction.getConnection(SpringManagedTransaction.java:68)
	at org.apache.ibatis.executor.BaseExecutor.getConnection(BaseExecutor.java:336)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:85)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	... 67 common frames omitted
Caused by: java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:835)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:455)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:240)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:199)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:157)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:78)
	... 77 common frames omitted
2019-07-24 15:37:16,434 ERROR (BaseController.java:285)- 系统异常:nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/NewsMapper.xml
### The error may involve com.zryx.company.mapper.NewsMapper.getAllNews
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/NewsMapper.xml
### The error may involve com.zryx.company.mapper.NewsMapper.getAllNews
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:77)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy94.getAllNews(Unknown Source)
	at com.zryx.company.service.impl.NewsServiceImpl.getAllNews(NewsServiceImpl.java:39)
	at com.zryx.company.controller.NewsController.initNews(NewsController.java:31)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/NewsMapper.xml
### The error may involve com.zryx.company.mapper.NewsMapper.getAllNews
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:149)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.GeneratedMethodAccessor103.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 62 common frames omitted
Caused by: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:81)
	at org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:82)
	at org.mybatis.spring.transaction.SpringManagedTransaction.getConnection(SpringManagedTransaction.java:68)
	at org.apache.ibatis.executor.BaseExecutor.getConnection(BaseExecutor.java:336)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:85)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	... 67 common frames omitted
Caused by: java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:835)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:455)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:240)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:199)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:157)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:78)
	... 77 common frames omitted
2019-07-24 15:37:17,447 ERROR (BaseController.java:285)- 系统异常:nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/NewsMapper.xml
### The error may involve com.zryx.company.mapper.NewsMapper.getAllNews
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/NewsMapper.xml
### The error may involve com.zryx.company.mapper.NewsMapper.getAllNews
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:77)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy94.getAllNews(Unknown Source)
	at com.zryx.company.service.impl.NewsServiceImpl.getAllNews(NewsServiceImpl.java:39)
	at com.zryx.company.controller.NewsController.initNews(NewsController.java:31)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/NewsMapper.xml
### The error may involve com.zryx.company.mapper.NewsMapper.getAllNews
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:149)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.GeneratedMethodAccessor103.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 62 common frames omitted
Caused by: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:81)
	at org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:82)
	at org.mybatis.spring.transaction.SpringManagedTransaction.getConnection(SpringManagedTransaction.java:68)
	at org.apache.ibatis.executor.BaseExecutor.getConnection(BaseExecutor.java:336)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:85)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	... 67 common frames omitted
Caused by: java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:835)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:455)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:240)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:199)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:157)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:78)
	... 77 common frames omitted
2019-07-24 15:37:18,467 ERROR (BaseController.java:285)- 系统异常:nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/NewsMapper.xml
### The error may involve com.zryx.company.mapper.NewsMapper.getAllNews
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/NewsMapper.xml
### The error may involve com.zryx.company.mapper.NewsMapper.getAllNews
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:77)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy94.getAllNews(Unknown Source)
	at com.zryx.company.service.impl.NewsServiceImpl.getAllNews(NewsServiceImpl.java:39)
	at com.zryx.company.controller.NewsController.initNews(NewsController.java:31)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/NewsMapper.xml
### The error may involve com.zryx.company.mapper.NewsMapper.getAllNews
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:149)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.GeneratedMethodAccessor103.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 62 common frames omitted
Caused by: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:81)
	at org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:82)
	at org.mybatis.spring.transaction.SpringManagedTransaction.getConnection(SpringManagedTransaction.java:68)
	at org.apache.ibatis.executor.BaseExecutor.getConnection(BaseExecutor.java:336)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:85)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	... 67 common frames omitted
Caused by: java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:835)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:455)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:240)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:199)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:157)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:78)
	... 77 common frames omitted
2019-07-24 15:37:39,944 ERROR (BaseController.java:285)- 系统异常:nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/NewsMapper.xml
### The error may involve com.zryx.company.mapper.NewsMapper.getAllNews
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/NewsMapper.xml
### The error may involve com.zryx.company.mapper.NewsMapper.getAllNews
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:77)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy94.getAllNews(Unknown Source)
	at com.zryx.company.service.impl.NewsServiceImpl.getAllNews(NewsServiceImpl.java:39)
	at com.zryx.company.controller.NewsController.initNews(NewsController.java:31)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/NewsMapper.xml
### The error may involve com.zryx.company.mapper.NewsMapper.getAllNews
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:149)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.GeneratedMethodAccessor103.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 62 common frames omitted
Caused by: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:81)
	at org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:82)
	at org.mybatis.spring.transaction.SpringManagedTransaction.getConnection(SpringManagedTransaction.java:68)
	at org.apache.ibatis.executor.BaseExecutor.getConnection(BaseExecutor.java:336)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:85)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	... 67 common frames omitted
Caused by: java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:835)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:455)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:240)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:199)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:157)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:78)
	... 77 common frames omitted
2019-07-24 15:37:40,981 ERROR (BaseController.java:285)- 系统异常:nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/NewsMapper.xml
### The error may involve com.zryx.company.mapper.NewsMapper.getAllNews
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/NewsMapper.xml
### The error may involve com.zryx.company.mapper.NewsMapper.getAllNews
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:77)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy94.getAllNews(Unknown Source)
	at com.zryx.company.service.impl.NewsServiceImpl.getAllNews(NewsServiceImpl.java:39)
	at com.zryx.company.controller.NewsController.initNews(NewsController.java:31)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/NewsMapper.xml
### The error may involve com.zryx.company.mapper.NewsMapper.getAllNews
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:149)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.GeneratedMethodAccessor103.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 62 common frames omitted
Caused by: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:81)
	at org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:82)
	at org.mybatis.spring.transaction.SpringManagedTransaction.getConnection(SpringManagedTransaction.java:68)
	at org.apache.ibatis.executor.BaseExecutor.getConnection(BaseExecutor.java:336)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:85)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	... 67 common frames omitted
Caused by: java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:835)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:455)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:240)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:199)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:157)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:78)
	... 77 common frames omitted
2019-07-24 15:37:43,190 ERROR (BaseController.java:285)- 系统异常:nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/NewsMapper.xml
### The error may involve com.zryx.company.mapper.NewsMapper.getAllNews
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/NewsMapper.xml
### The error may involve com.zryx.company.mapper.NewsMapper.getAllNews
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:77)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy94.getAllNews(Unknown Source)
	at com.zryx.company.service.impl.NewsServiceImpl.getAllNews(NewsServiceImpl.java:39)
	at com.zryx.company.controller.NewsController.initNews(NewsController.java:31)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/NewsMapper.xml
### The error may involve com.zryx.company.mapper.NewsMapper.getAllNews
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:149)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.GeneratedMethodAccessor103.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 62 common frames omitted
Caused by: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:81)
	at org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:82)
	at org.mybatis.spring.transaction.SpringManagedTransaction.getConnection(SpringManagedTransaction.java:68)
	at org.apache.ibatis.executor.BaseExecutor.getConnection(BaseExecutor.java:336)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:85)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	... 67 common frames omitted
Caused by: java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:835)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:455)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:240)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:199)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:157)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:78)
	... 77 common frames omitted
2019-07-24 15:37:44,526 ERROR (BaseController.java:285)- 系统异常:nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/NewsMapper.xml
### The error may involve com.zryx.company.mapper.NewsMapper.getAllNews
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/NewsMapper.xml
### The error may involve com.zryx.company.mapper.NewsMapper.getAllNews
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:77)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy94.getAllNews(Unknown Source)
	at com.zryx.company.service.impl.NewsServiceImpl.getAllNews(NewsServiceImpl.java:39)
	at com.zryx.company.controller.NewsController.initNews(NewsController.java:31)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/NewsMapper.xml
### The error may involve com.zryx.company.mapper.NewsMapper.getAllNews
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:149)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.GeneratedMethodAccessor103.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 62 common frames omitted
Caused by: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:81)
	at org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:82)
	at org.mybatis.spring.transaction.SpringManagedTransaction.getConnection(SpringManagedTransaction.java:68)
	at org.apache.ibatis.executor.BaseExecutor.getConnection(BaseExecutor.java:336)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:85)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	... 67 common frames omitted
Caused by: java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:835)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:455)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:240)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:199)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:157)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:78)
	... 77 common frames omitted
2019-07-24 15:37:45,545 ERROR (BaseController.java:285)- 系统异常:nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/NewsMapper.xml
### The error may involve com.zryx.company.mapper.NewsMapper.getAllNews
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/NewsMapper.xml
### The error may involve com.zryx.company.mapper.NewsMapper.getAllNews
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:77)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy94.getAllNews(Unknown Source)
	at com.zryx.company.service.impl.NewsServiceImpl.getAllNews(NewsServiceImpl.java:39)
	at com.zryx.company.controller.NewsController.initNews(NewsController.java:31)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/NewsMapper.xml
### The error may involve com.zryx.company.mapper.NewsMapper.getAllNews
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:149)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.GeneratedMethodAccessor103.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 62 common frames omitted
Caused by: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:81)
	at org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:82)
	at org.mybatis.spring.transaction.SpringManagedTransaction.getConnection(SpringManagedTransaction.java:68)
	at org.apache.ibatis.executor.BaseExecutor.getConnection(BaseExecutor.java:336)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:85)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	... 67 common frames omitted
Caused by: java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:835)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:455)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:240)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:199)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:157)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:78)
	... 77 common frames omitted
2019-07-24 15:37:46,557 ERROR (BaseController.java:285)- 系统异常:nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/NewsMapper.xml
### The error may involve com.zryx.company.mapper.NewsMapper.getAllNews
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/NewsMapper.xml
### The error may involve com.zryx.company.mapper.NewsMapper.getAllNews
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:77)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy94.getAllNews(Unknown Source)
	at com.zryx.company.service.impl.NewsServiceImpl.getAllNews(NewsServiceImpl.java:39)
	at com.zryx.company.controller.NewsController.initNews(NewsController.java:31)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/NewsMapper.xml
### The error may involve com.zryx.company.mapper.NewsMapper.getAllNews
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:149)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.GeneratedMethodAccessor103.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 62 common frames omitted
Caused by: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:81)
	at org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:82)
	at org.mybatis.spring.transaction.SpringManagedTransaction.getConnection(SpringManagedTransaction.java:68)
	at org.apache.ibatis.executor.BaseExecutor.getConnection(BaseExecutor.java:336)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:85)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	... 67 common frames omitted
Caused by: java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:835)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:455)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:240)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:199)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:157)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:78)
	... 77 common frames omitted
2019-07-24 15:37:47,569 ERROR (BaseController.java:285)- 系统异常:nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/NewsMapper.xml
### The error may involve com.zryx.company.mapper.NewsMapper.getAllNews
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/NewsMapper.xml
### The error may involve com.zryx.company.mapper.NewsMapper.getAllNews
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:77)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy94.getAllNews(Unknown Source)
	at com.zryx.company.service.impl.NewsServiceImpl.getAllNews(NewsServiceImpl.java:39)
	at com.zryx.company.controller.NewsController.initNews(NewsController.java:31)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/NewsMapper.xml
### The error may involve com.zryx.company.mapper.NewsMapper.getAllNews
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:149)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.GeneratedMethodAccessor103.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 62 common frames omitted
Caused by: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:81)
	at org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:82)
	at org.mybatis.spring.transaction.SpringManagedTransaction.getConnection(SpringManagedTransaction.java:68)
	at org.apache.ibatis.executor.BaseExecutor.getConnection(BaseExecutor.java:336)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:85)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	... 67 common frames omitted
Caused by: java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:835)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:455)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:240)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:199)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:157)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:78)
	... 77 common frames omitted
2019-07-24 15:37:48,600 ERROR (BaseController.java:285)- 系统异常:nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/NewsMapper.xml
### The error may involve com.zryx.company.mapper.NewsMapper.getAllNews
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/NewsMapper.xml
### The error may involve com.zryx.company.mapper.NewsMapper.getAllNews
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:77)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy94.getAllNews(Unknown Source)
	at com.zryx.company.service.impl.NewsServiceImpl.getAllNews(NewsServiceImpl.java:39)
	at com.zryx.company.controller.NewsController.initNews(NewsController.java:31)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/NewsMapper.xml
### The error may involve com.zryx.company.mapper.NewsMapper.getAllNews
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:149)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.GeneratedMethodAccessor103.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 62 common frames omitted
Caused by: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:81)
	at org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:82)
	at org.mybatis.spring.transaction.SpringManagedTransaction.getConnection(SpringManagedTransaction.java:68)
	at org.apache.ibatis.executor.BaseExecutor.getConnection(BaseExecutor.java:336)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:85)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	... 67 common frames omitted
Caused by: java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:835)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:455)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:240)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:199)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:157)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:78)
	... 77 common frames omitted
2019-07-24 15:38:02,753 ERROR (BaseController.java:285)- 系统异常:nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/NewsMapper.xml
### The error may involve com.zryx.company.mapper.NewsMapper.getAllNews
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/NewsMapper.xml
### The error may involve com.zryx.company.mapper.NewsMapper.getAllNews
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:77)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy94.getAllNews(Unknown Source)
	at com.zryx.company.service.impl.NewsServiceImpl.getAllNews(NewsServiceImpl.java:39)
	at com.zryx.company.controller.NewsController.initNews(NewsController.java:31)
	at sun.reflect.GeneratedMethodAccessor189.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/NewsMapper.xml
### The error may involve com.zryx.company.mapper.NewsMapper.getAllNews
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:149)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.GeneratedMethodAccessor103.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 61 common frames omitted
Caused by: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:81)
	at org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:82)
	at org.mybatis.spring.transaction.SpringManagedTransaction.getConnection(SpringManagedTransaction.java:68)
	at org.apache.ibatis.executor.BaseExecutor.getConnection(BaseExecutor.java:336)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:85)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	... 66 common frames omitted
Caused by: java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:835)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:455)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:240)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:199)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:157)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:78)
	... 76 common frames omitted
2019-07-24 15:38:03,760 ERROR (BaseController.java:285)- 系统异常:nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/NewsMapper.xml
### The error may involve com.zryx.company.mapper.NewsMapper.getAllNews
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/NewsMapper.xml
### The error may involve com.zryx.company.mapper.NewsMapper.getAllNews
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:77)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy94.getAllNews(Unknown Source)
	at com.zryx.company.service.impl.NewsServiceImpl.getAllNews(NewsServiceImpl.java:39)
	at com.zryx.company.controller.NewsController.initNews(NewsController.java:31)
	at sun.reflect.GeneratedMethodAccessor189.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/NewsMapper.xml
### The error may involve com.zryx.company.mapper.NewsMapper.getAllNews
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:149)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.GeneratedMethodAccessor103.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 61 common frames omitted
Caused by: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:81)
	at org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:82)
	at org.mybatis.spring.transaction.SpringManagedTransaction.getConnection(SpringManagedTransaction.java:68)
	at org.apache.ibatis.executor.BaseExecutor.getConnection(BaseExecutor.java:336)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:85)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	... 66 common frames omitted
Caused by: java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:835)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:455)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:240)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:199)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:157)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:78)
	... 76 common frames omitted
2019-07-24 15:38:04,795 ERROR (BaseController.java:285)- 系统异常:nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/NewsMapper.xml
### The error may involve com.zryx.company.mapper.NewsMapper.getAllNews
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/NewsMapper.xml
### The error may involve com.zryx.company.mapper.NewsMapper.getAllNews
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:77)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy94.getAllNews(Unknown Source)
	at com.zryx.company.service.impl.NewsServiceImpl.getAllNews(NewsServiceImpl.java:39)
	at com.zryx.company.controller.NewsController.initNews(NewsController.java:31)
	at sun.reflect.GeneratedMethodAccessor189.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/NewsMapper.xml
### The error may involve com.zryx.company.mapper.NewsMapper.getAllNews
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:149)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.GeneratedMethodAccessor103.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 61 common frames omitted
Caused by: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:81)
	at org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:82)
	at org.mybatis.spring.transaction.SpringManagedTransaction.getConnection(SpringManagedTransaction.java:68)
	at org.apache.ibatis.executor.BaseExecutor.getConnection(BaseExecutor.java:336)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:85)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	... 66 common frames omitted
Caused by: java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:835)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:455)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:240)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:199)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:157)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:78)
	... 76 common frames omitted
2019-07-24 15:38:05,805 ERROR (BaseController.java:285)- 系统异常:nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/NewsMapper.xml
### The error may involve com.zryx.company.mapper.NewsMapper.getAllNews
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/NewsMapper.xml
### The error may involve com.zryx.company.mapper.NewsMapper.getAllNews
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:77)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy94.getAllNews(Unknown Source)
	at com.zryx.company.service.impl.NewsServiceImpl.getAllNews(NewsServiceImpl.java:39)
	at com.zryx.company.controller.NewsController.initNews(NewsController.java:31)
	at sun.reflect.GeneratedMethodAccessor189.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/NewsMapper.xml
### The error may involve com.zryx.company.mapper.NewsMapper.getAllNews
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:149)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.GeneratedMethodAccessor103.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 61 common frames omitted
Caused by: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:81)
	at org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:82)
	at org.mybatis.spring.transaction.SpringManagedTransaction.getConnection(SpringManagedTransaction.java:68)
	at org.apache.ibatis.executor.BaseExecutor.getConnection(BaseExecutor.java:336)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:85)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	... 66 common frames omitted
Caused by: java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:835)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:455)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:240)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:199)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:157)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:78)
	... 76 common frames omitted
2019-07-24 15:38:06,820 ERROR (BaseController.java:285)- 系统异常:nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/NewsMapper.xml
### The error may involve com.zryx.company.mapper.NewsMapper.getAllNews
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/NewsMapper.xml
### The error may involve com.zryx.company.mapper.NewsMapper.getAllNews
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:77)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy94.getAllNews(Unknown Source)
	at com.zryx.company.service.impl.NewsServiceImpl.getAllNews(NewsServiceImpl.java:39)
	at com.zryx.company.controller.NewsController.initNews(NewsController.java:31)
	at sun.reflect.GeneratedMethodAccessor189.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/NewsMapper.xml
### The error may involve com.zryx.company.mapper.NewsMapper.getAllNews
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:149)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.GeneratedMethodAccessor103.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 61 common frames omitted
Caused by: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:81)
	at org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:82)
	at org.mybatis.spring.transaction.SpringManagedTransaction.getConnection(SpringManagedTransaction.java:68)
	at org.apache.ibatis.executor.BaseExecutor.getConnection(BaseExecutor.java:336)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:85)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	... 66 common frames omitted
Caused by: java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:835)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:455)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:240)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:199)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:157)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:78)
	... 76 common frames omitted
2019-07-24 15:38:07,831 ERROR (BaseController.java:285)- 系统异常:nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/NewsMapper.xml
### The error may involve com.zryx.company.mapper.NewsMapper.getAllNews
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/NewsMapper.xml
### The error may involve com.zryx.company.mapper.NewsMapper.getAllNews
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:77)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy94.getAllNews(Unknown Source)
	at com.zryx.company.service.impl.NewsServiceImpl.getAllNews(NewsServiceImpl.java:39)
	at com.zryx.company.controller.NewsController.initNews(NewsController.java:31)
	at sun.reflect.GeneratedMethodAccessor189.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
### The error may exist in com/zryx/company/mapper/NewsMapper.xml
### The error may involve com.zryx.company.mapper.NewsMapper.getAllNews
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:149)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.GeneratedMethodAccessor103.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 61 common frames omitted
Caused by: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:81)
	at org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:82)
	at org.mybatis.spring.transaction.SpringManagedTransaction.getConnection(SpringManagedTransaction.java:68)
	at org.apache.ibatis.executor.BaseExecutor.getConnection(BaseExecutor.java:336)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:85)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	... 66 common frames omitted
Caused by: java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:835)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:455)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:240)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:199)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:157)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:78)
	... 76 common frames omitted
2019-07-24 15:38:08,696 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-VFTL6TA with PID 14032 (C:\123\company\target\classes started by 高羽翯 in C:\123\company)
2019-07-24 15:38:08,697 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-24 15:38:08,697 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-24 15:38:12,531 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 4.037 seconds (JVM running for 6086.374)
2019-07-24 15:38:14,339 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news 
2019-07-24 15:38:14,350 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:38:14,359 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 18
2019-07-24 15:38:14,385 DEBUG (NewsController.java:33)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 1,
    "title" : "创建新项目",
    "content" : "新闻内容",
    "writeDate" : 1466784000000
  }, {
    "newsId" : 2,
    "title" : "索尼位55降价送卡",
    "content" : "新闻内容3",
    "writeDate" : -30364761600000
  }, {
    "newsId" : 3,
    "title" : "理光b5不到二千",
    "content" : "你好",
    "writeDate" : 1191513600000
  }, {
    "newsId" : 5,
    "title" : "单反与镜头组合",
    "content" : null,
    "writeDate" : 1191369600000
  }, {
    "newsId" : 15,
    "title" : "百度将开拓美国和欧盟市场",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 16,
    "title" : "Uber CEO和马云交好",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 22,
    "title" : "今日早报",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 23,
    "title" : "高考查分被马云占了先机",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 24,
    "title" : "看完这个，你还想做微商吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 25,
    "title" : "农村电商只能成为空谈?",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 26,
    "title" : "上半年这些行业大爆炸",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 27,
    "title" : "阿里巴巴最为窘迫的四件事",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 28,
    "title" : "高管却离开了",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 30,
    "title" : "支付宝余额使用将受限",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 31,
    "title" : "国内垂直B2B电商平台TOP30",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 33,
    "title" : "谷歌要重新进入中国市场了吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 34,
    "title" : "今天",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 35,
    "title" : "庆十一商品促销11111",
    "content" : "222222",
    "writeDate" : 1562256000000
  } ]
}
2019-07-24 15:38:26,465 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message 
2019-07-24 15:38:26,465 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:38:26,469 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 15:38:26,473 ERROR (JsonUtil.java:129)- [FAILED toString()] 对象转Json串失败，失败原因：(was java.lang.NullPointerException) (through reference chain: java.util.HashMap["data"]->java.util.ArrayList[0]->com.zryx.company.model.Message["writeDate"])
2019-07-24 15:38:26,700 DEBUG (MessageController.java:41)- json===>null
2019-07-24 15:38:31,199 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message 
2019-07-24 15:38:31,201 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:38:31,208 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 15:38:31,209 ERROR (JsonUtil.java:129)- [FAILED toString()] 对象转Json串失败，失败原因：(was java.lang.NullPointerException) (through reference chain: java.util.HashMap["data"]->java.util.ArrayList[0]->com.zryx.company.model.Message["writeDate"])
2019-07-24 15:38:31,217 DEBUG (MessageController.java:41)- json===>null
2019-07-24 15:38:39,356 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news 
2019-07-24 15:38:39,360 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:38:39,364 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 18
2019-07-24 15:38:39,368 DEBUG (NewsController.java:33)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 1,
    "title" : "创建新项目",
    "content" : "新闻内容",
    "writeDate" : 1466784000000
  }, {
    "newsId" : 2,
    "title" : "索尼位55降价送卡",
    "content" : "新闻内容3",
    "writeDate" : -30364761600000
  }, {
    "newsId" : 3,
    "title" : "理光b5不到二千",
    "content" : "你好",
    "writeDate" : 1191513600000
  }, {
    "newsId" : 5,
    "title" : "单反与镜头组合",
    "content" : null,
    "writeDate" : 1191369600000
  }, {
    "newsId" : 15,
    "title" : "百度将开拓美国和欧盟市场",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 16,
    "title" : "Uber CEO和马云交好",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 22,
    "title" : "今日早报",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 23,
    "title" : "高考查分被马云占了先机",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 24,
    "title" : "看完这个，你还想做微商吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 25,
    "title" : "农村电商只能成为空谈?",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 26,
    "title" : "上半年这些行业大爆炸",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 27,
    "title" : "阿里巴巴最为窘迫的四件事",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 28,
    "title" : "高管却离开了",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 30,
    "title" : "支付宝余额使用将受限",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 31,
    "title" : "国内垂直B2B电商平台TOP30",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 33,
    "title" : "谷歌要重新进入中国市场了吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 34,
    "title" : "今天",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 35,
    "title" : "庆十一商品促销11111",
    "content" : "222222",
    "writeDate" : 1562256000000
  } ]
}
2019-07-24 15:38:40,640 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news 
2019-07-24 15:38:40,641 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:38:40,645 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 18
2019-07-24 15:38:40,647 DEBUG (NewsController.java:33)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 1,
    "title" : "创建新项目",
    "content" : "新闻内容",
    "writeDate" : 1466784000000
  }, {
    "newsId" : 2,
    "title" : "索尼位55降价送卡",
    "content" : "新闻内容3",
    "writeDate" : -30364761600000
  }, {
    "newsId" : 3,
    "title" : "理光b5不到二千",
    "content" : "你好",
    "writeDate" : 1191513600000
  }, {
    "newsId" : 5,
    "title" : "单反与镜头组合",
    "content" : null,
    "writeDate" : 1191369600000
  }, {
    "newsId" : 15,
    "title" : "百度将开拓美国和欧盟市场",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 16,
    "title" : "Uber CEO和马云交好",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 22,
    "title" : "今日早报",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 23,
    "title" : "高考查分被马云占了先机",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 24,
    "title" : "看完这个，你还想做微商吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 25,
    "title" : "农村电商只能成为空谈?",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 26,
    "title" : "上半年这些行业大爆炸",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 27,
    "title" : "阿里巴巴最为窘迫的四件事",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 28,
    "title" : "高管却离开了",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 30,
    "title" : "支付宝余额使用将受限",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 31,
    "title" : "国内垂直B2B电商平台TOP30",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 33,
    "title" : "谷歌要重新进入中国市场了吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 34,
    "title" : "今天",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 35,
    "title" : "庆十一商品促销11111",
    "content" : "222222",
    "writeDate" : 1562256000000
  } ]
}
2019-07-24 15:38:41,924 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news 
2019-07-24 15:38:41,924 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:38:41,926 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 18
2019-07-24 15:38:41,926 DEBUG (NewsController.java:33)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 1,
    "title" : "创建新项目",
    "content" : "新闻内容",
    "writeDate" : 1466784000000
  }, {
    "newsId" : 2,
    "title" : "索尼位55降价送卡",
    "content" : "新闻内容3",
    "writeDate" : -30364761600000
  }, {
    "newsId" : 3,
    "title" : "理光b5不到二千",
    "content" : "你好",
    "writeDate" : 1191513600000
  }, {
    "newsId" : 5,
    "title" : "单反与镜头组合",
    "content" : null,
    "writeDate" : 1191369600000
  }, {
    "newsId" : 15,
    "title" : "百度将开拓美国和欧盟市场",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 16,
    "title" : "Uber CEO和马云交好",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 22,
    "title" : "今日早报",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 23,
    "title" : "高考查分被马云占了先机",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 24,
    "title" : "看完这个，你还想做微商吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 25,
    "title" : "农村电商只能成为空谈?",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 26,
    "title" : "上半年这些行业大爆炸",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 27,
    "title" : "阿里巴巴最为窘迫的四件事",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 28,
    "title" : "高管却离开了",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 30,
    "title" : "支付宝余额使用将受限",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 31,
    "title" : "国内垂直B2B电商平台TOP30",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 33,
    "title" : "谷歌要重新进入中国市场了吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 34,
    "title" : "今天",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 35,
    "title" : "庆十一商品促销11111",
    "content" : "222222",
    "writeDate" : 1562256000000
  } ]
}
2019-07-24 15:38:43,002 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news 
2019-07-24 15:38:43,002 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:38:43,007 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 18
2019-07-24 15:38:43,008 DEBUG (NewsController.java:33)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 1,
    "title" : "创建新项目",
    "content" : "新闻内容",
    "writeDate" : 1466784000000
  }, {
    "newsId" : 2,
    "title" : "索尼位55降价送卡",
    "content" : "新闻内容3",
    "writeDate" : -30364761600000
  }, {
    "newsId" : 3,
    "title" : "理光b5不到二千",
    "content" : "你好",
    "writeDate" : 1191513600000
  }, {
    "newsId" : 5,
    "title" : "单反与镜头组合",
    "content" : null,
    "writeDate" : 1191369600000
  }, {
    "newsId" : 15,
    "title" : "百度将开拓美国和欧盟市场",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 16,
    "title" : "Uber CEO和马云交好",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 22,
    "title" : "今日早报",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 23,
    "title" : "高考查分被马云占了先机",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 24,
    "title" : "看完这个，你还想做微商吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 25,
    "title" : "农村电商只能成为空谈?",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 26,
    "title" : "上半年这些行业大爆炸",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 27,
    "title" : "阿里巴巴最为窘迫的四件事",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 28,
    "title" : "高管却离开了",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 30,
    "title" : "支付宝余额使用将受限",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 31,
    "title" : "国内垂直B2B电商平台TOP30",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 33,
    "title" : "谷歌要重新进入中国市场了吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 34,
    "title" : "今天",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 35,
    "title" : "庆十一商品促销11111",
    "content" : "222222",
    "writeDate" : 1562256000000
  } ]
}
2019-07-24 15:38:44,200 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news 
2019-07-24 15:38:44,201 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:38:44,204 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 18
2019-07-24 15:38:44,205 DEBUG (NewsController.java:33)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 1,
    "title" : "创建新项目",
    "content" : "新闻内容",
    "writeDate" : 1466784000000
  }, {
    "newsId" : 2,
    "title" : "索尼位55降价送卡",
    "content" : "新闻内容3",
    "writeDate" : -30364761600000
  }, {
    "newsId" : 3,
    "title" : "理光b5不到二千",
    "content" : "你好",
    "writeDate" : 1191513600000
  }, {
    "newsId" : 5,
    "title" : "单反与镜头组合",
    "content" : null,
    "writeDate" : 1191369600000
  }, {
    "newsId" : 15,
    "title" : "百度将开拓美国和欧盟市场",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 16,
    "title" : "Uber CEO和马云交好",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 22,
    "title" : "今日早报",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 23,
    "title" : "高考查分被马云占了先机",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 24,
    "title" : "看完这个，你还想做微商吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 25,
    "title" : "农村电商只能成为空谈?",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 26,
    "title" : "上半年这些行业大爆炸",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 27,
    "title" : "阿里巴巴最为窘迫的四件事",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 28,
    "title" : "高管却离开了",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 30,
    "title" : "支付宝余额使用将受限",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 31,
    "title" : "国内垂直B2B电商平台TOP30",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 33,
    "title" : "谷歌要重新进入中国市场了吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 34,
    "title" : "今天",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 35,
    "title" : "庆十一商品促销11111",
    "content" : "222222",
    "writeDate" : 1562256000000
  } ]
}
2019-07-24 15:39:26,493 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message 
2019-07-24 15:39:26,493 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:39:26,497 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 15:39:26,501 ERROR (JsonUtil.java:129)- [FAILED toString()] 对象转Json串失败，失败原因：(was java.lang.NullPointerException) (through reference chain: java.util.HashMap["data"]->java.util.ArrayList[0]->com.zryx.company.model.Message["writeDate"])
2019-07-24 15:39:26,538 DEBUG (MessageController.java:41)- json===>null
2019-07-24 15:39:30,393 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message 
2019-07-24 15:39:30,397 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:39:30,401 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 15:39:30,401 ERROR (JsonUtil.java:129)- [FAILED toString()] 对象转Json串失败，失败原因：(was java.lang.NullPointerException) (through reference chain: java.util.HashMap["data"]->java.util.ArrayList[0]->com.zryx.company.model.Message["writeDate"])
2019-07-24 15:39:30,476 DEBUG (MessageController.java:41)- json===>null
2019-07-24 15:39:42,338 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news 
2019-07-24 15:39:42,338 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:39:42,342 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 18
2019-07-24 15:39:42,346 DEBUG (NewsController.java:33)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 1,
    "title" : "创建新项目",
    "content" : "新闻内容",
    "writeDate" : 1466784000000
  }, {
    "newsId" : 2,
    "title" : "索尼位55降价送卡",
    "content" : "新闻内容3",
    "writeDate" : -30364761600000
  }, {
    "newsId" : 3,
    "title" : "理光b5不到二千",
    "content" : "你好",
    "writeDate" : 1191513600000
  }, {
    "newsId" : 5,
    "title" : "单反与镜头组合",
    "content" : null,
    "writeDate" : 1191369600000
  }, {
    "newsId" : 15,
    "title" : "百度将开拓美国和欧盟市场",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 16,
    "title" : "Uber CEO和马云交好",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 22,
    "title" : "今日早报",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 23,
    "title" : "高考查分被马云占了先机",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 24,
    "title" : "看完这个，你还想做微商吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 25,
    "title" : "农村电商只能成为空谈?",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 26,
    "title" : "上半年这些行业大爆炸",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 27,
    "title" : "阿里巴巴最为窘迫的四件事",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 28,
    "title" : "高管却离开了",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 30,
    "title" : "支付宝余额使用将受限",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 31,
    "title" : "国内垂直B2B电商平台TOP30",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 33,
    "title" : "谷歌要重新进入中国市场了吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 34,
    "title" : "今天",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 35,
    "title" : "庆十一商品促销11111",
    "content" : "222222",
    "writeDate" : 1562256000000
  } ]
}
2019-07-24 15:39:43,893 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news 
2019-07-24 15:39:43,893 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:39:43,897 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 18
2019-07-24 15:39:43,897 DEBUG (NewsController.java:33)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 1,
    "title" : "创建新项目",
    "content" : "新闻内容",
    "writeDate" : 1466784000000
  }, {
    "newsId" : 2,
    "title" : "索尼位55降价送卡",
    "content" : "新闻内容3",
    "writeDate" : -30364761600000
  }, {
    "newsId" : 3,
    "title" : "理光b5不到二千",
    "content" : "你好",
    "writeDate" : 1191513600000
  }, {
    "newsId" : 5,
    "title" : "单反与镜头组合",
    "content" : null,
    "writeDate" : 1191369600000
  }, {
    "newsId" : 15,
    "title" : "百度将开拓美国和欧盟市场",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 16,
    "title" : "Uber CEO和马云交好",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 22,
    "title" : "今日早报",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 23,
    "title" : "高考查分被马云占了先机",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 24,
    "title" : "看完这个，你还想做微商吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 25,
    "title" : "农村电商只能成为空谈?",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 26,
    "title" : "上半年这些行业大爆炸",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 27,
    "title" : "阿里巴巴最为窘迫的四件事",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 28,
    "title" : "高管却离开了",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 30,
    "title" : "支付宝余额使用将受限",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 31,
    "title" : "国内垂直B2B电商平台TOP30",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 33,
    "title" : "谷歌要重新进入中国市场了吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 34,
    "title" : "今天",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 35,
    "title" : "庆十一商品促销11111",
    "content" : "222222",
    "writeDate" : 1562256000000
  } ]
}
2019-07-24 15:39:44,900 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news 
2019-07-24 15:39:44,904 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:39:44,906 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 18
2019-07-24 15:39:44,906 DEBUG (NewsController.java:33)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 1,
    "title" : "创建新项目",
    "content" : "新闻内容",
    "writeDate" : 1466784000000
  }, {
    "newsId" : 2,
    "title" : "索尼位55降价送卡",
    "content" : "新闻内容3",
    "writeDate" : -30364761600000
  }, {
    "newsId" : 3,
    "title" : "理光b5不到二千",
    "content" : "你好",
    "writeDate" : 1191513600000
  }, {
    "newsId" : 5,
    "title" : "单反与镜头组合",
    "content" : null,
    "writeDate" : 1191369600000
  }, {
    "newsId" : 15,
    "title" : "百度将开拓美国和欧盟市场",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 16,
    "title" : "Uber CEO和马云交好",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 22,
    "title" : "今日早报",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 23,
    "title" : "高考查分被马云占了先机",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 24,
    "title" : "看完这个，你还想做微商吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 25,
    "title" : "农村电商只能成为空谈?",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 26,
    "title" : "上半年这些行业大爆炸",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 27,
    "title" : "阿里巴巴最为窘迫的四件事",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 28,
    "title" : "高管却离开了",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 30,
    "title" : "支付宝余额使用将受限",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 31,
    "title" : "国内垂直B2B电商平台TOP30",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 33,
    "title" : "谷歌要重新进入中国市场了吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 34,
    "title" : "今天",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 35,
    "title" : "庆十一商品促销11111",
    "content" : "222222",
    "writeDate" : 1562256000000
  } ]
}
2019-07-24 15:39:45,891 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news 
2019-07-24 15:39:45,891 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:39:45,896 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 18
2019-07-24 15:39:45,896 DEBUG (NewsController.java:33)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 1,
    "title" : "创建新项目",
    "content" : "新闻内容",
    "writeDate" : 1466784000000
  }, {
    "newsId" : 2,
    "title" : "索尼位55降价送卡",
    "content" : "新闻内容3",
    "writeDate" : -30364761600000
  }, {
    "newsId" : 3,
    "title" : "理光b5不到二千",
    "content" : "你好",
    "writeDate" : 1191513600000
  }, {
    "newsId" : 5,
    "title" : "单反与镜头组合",
    "content" : null,
    "writeDate" : 1191369600000
  }, {
    "newsId" : 15,
    "title" : "百度将开拓美国和欧盟市场",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 16,
    "title" : "Uber CEO和马云交好",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 22,
    "title" : "今日早报",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 23,
    "title" : "高考查分被马云占了先机",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 24,
    "title" : "看完这个，你还想做微商吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 25,
    "title" : "农村电商只能成为空谈?",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 26,
    "title" : "上半年这些行业大爆炸",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 27,
    "title" : "阿里巴巴最为窘迫的四件事",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 28,
    "title" : "高管却离开了",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 30,
    "title" : "支付宝余额使用将受限",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 31,
    "title" : "国内垂直B2B电商平台TOP30",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 33,
    "title" : "谷歌要重新进入中国市场了吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 34,
    "title" : "今天",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 35,
    "title" : "庆十一商品促销11111",
    "content" : "222222",
    "writeDate" : 1562256000000
  } ]
}
2019-07-24 15:39:47,130 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news 
2019-07-24 15:39:47,134 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:39:47,168 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 18
2019-07-24 15:39:47,168 DEBUG (NewsController.java:33)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 1,
    "title" : "创建新项目",
    "content" : "新闻内容",
    "writeDate" : 1466784000000
  }, {
    "newsId" : 2,
    "title" : "索尼位55降价送卡",
    "content" : "新闻内容3",
    "writeDate" : -30364761600000
  }, {
    "newsId" : 3,
    "title" : "理光b5不到二千",
    "content" : "你好",
    "writeDate" : 1191513600000
  }, {
    "newsId" : 5,
    "title" : "单反与镜头组合",
    "content" : null,
    "writeDate" : 1191369600000
  }, {
    "newsId" : 15,
    "title" : "百度将开拓美国和欧盟市场",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 16,
    "title" : "Uber CEO和马云交好",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 22,
    "title" : "今日早报",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 23,
    "title" : "高考查分被马云占了先机",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 24,
    "title" : "看完这个，你还想做微商吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 25,
    "title" : "农村电商只能成为空谈?",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 26,
    "title" : "上半年这些行业大爆炸",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 27,
    "title" : "阿里巴巴最为窘迫的四件事",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 28,
    "title" : "高管却离开了",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 30,
    "title" : "支付宝余额使用将受限",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 31,
    "title" : "国内垂直B2B电商平台TOP30",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 33,
    "title" : "谷歌要重新进入中国市场了吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 34,
    "title" : "今天",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 35,
    "title" : "庆十一商品促销11111",
    "content" : "222222",
    "writeDate" : 1562256000000
  } ]
}
2019-07-24 15:40:29,095 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message 
2019-07-24 15:40:29,095 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:40:29,099 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 15:40:29,103 ERROR (JsonUtil.java:129)- [FAILED toString()] 对象转Json串失败，失败原因：(was java.lang.NullPointerException) (through reference chain: java.util.HashMap["data"]->java.util.ArrayList[0]->com.zryx.company.model.Message["writeDate"])
2019-07-24 15:40:29,103 DEBUG (MessageController.java:41)- json===>null
2019-07-24 15:58:55,062 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-VFTL6TA with PID 14032 (C:\123\company\target\classes started by 高羽翯 in C:\123\company)
2019-07-24 15:58:55,062 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-24 15:58:55,062 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-24 15:58:58,754 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 3.91 seconds (JVM running for 7332.597)
2019-07-24 15:59:00,214 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message; UPDATE message SET message.`count`=(SELECT COUNT(*) FROM revert WHERE message.`messageID`=revert.`messageID`); 
2019-07-24 15:59:00,237 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 15:59:00,246 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 15:59:00,247 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 12
2019-07-24 15:59:00,269 ERROR (JsonUtil.java:129)- [FAILED toString()] 对象转Json串失败，失败原因：(was java.lang.NullPointerException) (through reference chain: java.util.HashMap["data"]->java.util.ArrayList[0]->com.zryx.company.model.Message["writeDate"])
2019-07-24 15:59:01,118 DEBUG (MessageController.java:37)- json===>null
2019-07-24 16:00:56,347 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message; UPDATE message SET message.`count`=(SELECT COUNT(*) FROM revert WHERE message.`messageID`=revert.`messageID`); 
2019-07-24 16:00:56,348 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 16:00:56,393 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 16:00:56,393 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 12
2019-07-24 16:00:56,397 ERROR (JsonUtil.java:129)- [FAILED toString()] 对象转Json串失败，失败原因：(was java.lang.NullPointerException) (through reference chain: java.util.HashMap["data"]->java.util.ArrayList[0]->com.zryx.company.model.Message["writeDate"])
2019-07-24 16:00:56,405 DEBUG (MessageController.java:37)- json===>null
2019-07-24 16:01:00,742 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message; UPDATE message SET message.`count`=(SELECT COUNT(*) FROM revert WHERE message.`messageID`=revert.`messageID`); 
2019-07-24 16:01:00,742 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 16:01:00,750 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 16:01:00,750 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 12
2019-07-24 16:01:00,750 ERROR (JsonUtil.java:129)- [FAILED toString()] 对象转Json串失败，失败原因：(was java.lang.NullPointerException) (through reference chain: java.util.HashMap["data"]->java.util.ArrayList[0]->com.zryx.company.model.Message["writeDate"])
2019-07-24 16:01:01,332 DEBUG (MessageController.java:37)- json===>null
2019-07-24 16:02:52,730 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message; UPDATE message SET message.`count`=(SELECT COUNT(*) FROM revert WHERE message.`messageID`=revert.`messageID`); 
2019-07-24 16:02:52,734 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 16:02:52,742 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 16:02:52,743 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 12
2019-07-24 16:02:52,743 ERROR (JsonUtil.java:129)- [FAILED toString()] 对象转Json串失败，失败原因：(was java.lang.NullPointerException) (through reference chain: java.util.HashMap["data"]->java.util.ArrayList[0]->com.zryx.company.model.Message["writeDate"])
2019-07-24 16:02:52,751 DEBUG (MessageController.java:37)- json===>null
2019-07-24 16:03:33,507 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-VFTL6TA with PID 5556 (C:\123\company\target\classes started by 高羽翯 in C:\123\company)
2019-07-24 16:03:33,509 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-24 16:03:33,509 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-24 16:03:42,215 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 10.264 seconds (JVM running for 13.704)
2019-07-24 16:03:50,025 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message; UPDATE message SET message.`count`=(SELECT COUNT(*) FROM revert WHERE message.`messageID`=revert.`messageID`); 
2019-07-24 16:03:50,082 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 16:03:50,193 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 16:03:50,196 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 12
2019-07-24 16:03:50,361 ERROR (JsonUtil.java:129)- [FAILED toString()] 对象转Json串失败，失败原因：(was java.lang.NullPointerException) (through reference chain: java.util.HashMap["data"]->java.util.ArrayList[0]->com.zryx.company.model.Message["writeDate"])
2019-07-24 16:03:50,372 DEBUG (MessageController.java:37)- json===>null
2019-07-24 16:05:11,182 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-VFTL6TA with PID 4816 (C:\123\company\target\classes started by 高羽翯 in C:\123\company)
2019-07-24 16:05:11,203 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-24 16:05:11,205 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-24 16:05:21,530 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 11.582 seconds (JVM running for 14.85)
2019-07-24 16:05:26,911 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message; UPDATE message SET message.`count`=(SELECT COUNT(*) FROM revert WHERE message.`messageID`=revert.`messageID`); 
2019-07-24 16:05:26,981 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 16:05:27,047 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 16:05:27,051 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 12
2019-07-24 16:05:27,200 ERROR (JsonUtil.java:129)- [FAILED toString()] 对象转Json串失败，失败原因：(was java.lang.NullPointerException) (through reference chain: java.util.HashMap["data"]->java.util.ArrayList[0]->com.zryx.company.model.Message["writeDate"])
2019-07-24 16:05:27,219 DEBUG (MessageController.java:37)- json===>null
2019-07-24 16:10:53,983 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-VFTL6TA with PID 4816 (C:\123\company\target\classes started by 高羽翯 in C:\123\company)
2019-07-24 16:10:53,986 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-24 16:10:53,986 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-24 16:11:36,023 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-VFTL6TA with PID 4216 (C:\123\company\target\classes started by 高羽翯 in C:\123\company)
2019-07-24 16:11:36,028 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-24 16:11:36,028 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-24 16:11:44,660 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 9.772 seconds (JVM running for 13.009)
2019-07-24 16:12:43,238 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-VFTL6TA with PID 4216 (C:\123\company\target\classes started by 高羽翯 in C:\123\company)
2019-07-24 16:12:43,238 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-24 16:12:43,238 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-24 16:12:46,945 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 3.839 seconds (JVM running for 75.294)
2019-07-24 16:13:15,173 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-VFTL6TA with PID 6500 (C:\123\company\target\classes started by 高羽翯 in C:\123\company)
2019-07-24 16:13:15,175 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-24 16:13:15,175 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-24 16:13:22,401 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 8.613 seconds (JVM running for 11.3)
2019-07-24 16:13:36,851 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message; UPDATE message SET message.`count`=(SELECT COUNT(*) FROM revert WHERE message.`messageID`=revert.`messageID`); 
2019-07-24 16:13:37,020 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 16:13:37,150 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 16:13:37,152 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 12
2019-07-24 16:13:37,373 ERROR (JsonUtil.java:129)- [FAILED toString()] 对象转Json串失败，失败原因：(was java.lang.NullPointerException) (through reference chain: java.util.HashMap["data"]->java.util.ArrayList[0]->com.zryx.company.model.Message["writeDate"])
2019-07-24 16:13:37,382 DEBUG (MessageController.java:37)- json===>null
2019-07-24 16:15:13,924 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-VFTL6TA with PID 14036 (C:\123\company\target\classes started by 高羽翯 in C:\123\company)
2019-07-24 16:15:13,931 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-24 16:15:13,931 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-24 16:15:21,624 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 8.927 seconds (JVM running for 11.7)
2019-07-24 16:15:48,123 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message; UPDATE message SET message.`count`=(SELECT COUNT(*) FROM revert WHERE message.`messageID`=revert.`messageID`); 
2019-07-24 16:15:48,275 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 16:15:48,409 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 16:15:48,413 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 12
2019-07-24 16:15:48,655 ERROR (JsonUtil.java:129)- [FAILED toString()] 对象转Json串失败，失败原因：(was java.lang.NullPointerException) (through reference chain: java.util.HashMap["data"]->java.util.ArrayList[0]->com.zryx.company.model.Message["writeDate"])
2019-07-24 16:15:48,761 DEBUG (MessageController.java:37)- json===>null
2019-07-24 16:15:55,079 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message; UPDATE message SET message.`count`=(SELECT COUNT(*) FROM revert WHERE message.`messageID`=revert.`messageID`); 
2019-07-24 16:15:55,088 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 16:15:55,125 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 16:15:55,127 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 12
2019-07-24 16:15:55,128 ERROR (JsonUtil.java:129)- [FAILED toString()] 对象转Json串失败，失败原因：(was java.lang.NullPointerException) (through reference chain: java.util.HashMap["data"]->java.util.ArrayList[0]->com.zryx.company.model.Message["writeDate"])
2019-07-24 16:15:55,135 DEBUG (MessageController.java:37)- json===>null
2019-07-24 16:17:37,816 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-VFTL6TA with PID 5424 (C:\123\company\target\classes started by 高羽翯 in C:\123\company)
2019-07-24 16:17:37,826 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-24 16:17:37,826 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-24 16:17:44,389 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 7.982 seconds (JVM running for 10.575)
2019-07-24 16:18:11,928 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message; UPDATE message SET message.`count`=(SELECT COUNT(*) FROM revert WHERE message.`messageID`=revert.`messageID`); 
2019-07-24 16:18:11,991 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 16:18:12,048 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 16:18:12,052 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 12
2019-07-24 16:18:12,217 ERROR (JsonUtil.java:129)- [FAILED toString()] 对象转Json串失败，失败原因：(was java.lang.NullPointerException) (through reference chain: java.util.HashMap["data"]->java.util.ArrayList[0]->com.zryx.company.model.Message["writeDate"])
2019-07-24 16:18:12,225 DEBUG (MessageController.java:37)- json===>null
2019-07-24 16:21:46,698 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-VFTL6TA with PID 5424 (C:\123\company\target\classes started by 高羽翯 in C:\123\company)
2019-07-24 16:21:46,698 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-24 16:21:46,698 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-24 16:21:52,379 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 5.831 seconds (JVM running for 258.566)
2019-07-24 16:24:32,713 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-VFTL6TA with PID 13748 (C:\123\company\target\classes started by 高羽翯 in C:\123\company)
2019-07-24 16:24:32,720 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-24 16:24:32,723 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-24 16:24:46,015 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 14.635 seconds (JVM running for 18.442)
2019-07-24 16:25:38,394 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message; UPDATE message SET message.`count`=(SELECT COUNT(*) FROM revert WHERE message.`messageID`=revert.`messageID`); 
2019-07-24 16:25:38,460 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 16:25:38,536 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 16:25:38,538 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 12
2019-07-24 16:25:38,733 ERROR (JsonUtil.java:129)- [FAILED toString()] 对象转Json串失败，失败原因：(was java.lang.NullPointerException) (through reference chain: java.util.HashMap["data"]->java.util.ArrayList[0]->com.zryx.company.model.Message["writeDate"])
2019-07-24 16:25:38,755 DEBUG (MessageController.java:37)- json===>null
2019-07-24 16:35:46,964 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message; UPDATE message SET message.`count`=(SELECT COUNT(*) FROM revert WHERE message.`messageID`=revert.`messageID`); 
2019-07-24 16:35:46,966 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 16:35:46,987 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 16:35:46,989 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 12
2019-07-24 16:35:46,993 ERROR (JsonUtil.java:129)- [FAILED toString()] 对象转Json串失败，失败原因：(was java.lang.NullPointerException) (through reference chain: java.util.HashMap["data"]->java.util.ArrayList[0]->com.zryx.company.model.Message["writeDate"])
2019-07-24 16:35:46,999 DEBUG (MessageController.java:37)- json===>null
2019-07-24 16:37:55,824 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product 
2019-07-24 16:37:55,824 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news 
2019-07-24 16:37:55,824 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 16:37:55,824 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 16:37:55,838 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 16:37:55,851 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 18
2019-07-24 16:37:55,864 DEBUG (NewsController.java:33)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 1,
    "title" : "创建新项目",
    "content" : "新闻内容",
    "writeDate" : 1466784000000
  }, {
    "newsId" : 2,
    "title" : "索尼位55降价送卡",
    "content" : "新闻内容3",
    "writeDate" : -30364761600000
  }, {
    "newsId" : 3,
    "title" : "理光b5不到二千",
    "content" : "你好",
    "writeDate" : 1191513600000
  }, {
    "newsId" : 5,
    "title" : "单反与镜头组合",
    "content" : null,
    "writeDate" : 1191369600000
  }, {
    "newsId" : 15,
    "title" : "百度将开拓美国和欧盟市场",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 16,
    "title" : "Uber CEO和马云交好",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 22,
    "title" : "今日早报",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 23,
    "title" : "高考查分被马云占了先机",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 24,
    "title" : "看完这个，你还想做微商吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 25,
    "title" : "农村电商只能成为空谈?",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 26,
    "title" : "上半年这些行业大爆炸",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 27,
    "title" : "阿里巴巴最为窘迫的四件事",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 28,
    "title" : "高管却离开了",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 30,
    "title" : "支付宝余额使用将受限",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 31,
    "title" : "国内垂直B2B电商平台TOP30",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 33,
    "title" : "谷歌要重新进入中国市场了吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 34,
    "title" : "今天",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 35,
    "title" : "庆十一商品促销11111",
    "content" : "222222",
    "writeDate" : 1562256000000
  } ]
}
2019-07-24 16:38:07,292 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message; UPDATE message SET message.`count`=(SELECT COUNT(*) FROM revert WHERE message.`messageID`=revert.`messageID`); 
2019-07-24 16:38:07,293 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 16:38:07,303 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 16:38:07,303 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 12
2019-07-24 16:38:07,306 ERROR (JsonUtil.java:129)- [FAILED toString()] 对象转Json串失败，失败原因：(was java.lang.NullPointerException) (through reference chain: java.util.HashMap["data"]->java.util.ArrayList[0]->com.zryx.company.model.Message["writeDate"])
2019-07-24 16:38:07,314 DEBUG (MessageController.java:37)- json===>null
2019-07-24 16:38:38,001 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message; UPDATE message SET message.`count`=(SELECT COUNT(*) FROM revert WHERE message.`messageID`=revert.`messageID`); 
2019-07-24 16:38:38,005 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 16:38:38,014 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 16:38:38,014 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 12
2019-07-24 16:38:38,018 ERROR (JsonUtil.java:129)- [FAILED toString()] 对象转Json串失败，失败原因：(was java.lang.NullPointerException) (through reference chain: java.util.HashMap["data"]->java.util.ArrayList[0]->com.zryx.company.model.Message["writeDate"])
2019-07-24 16:38:38,031 DEBUG (MessageController.java:37)- json===>null
2019-07-24 16:39:51,588 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-VFTL6TA with PID 10144 (C:\123\company\target\classes started by 高羽翯 in C:\123\company)
2019-07-24 16:39:51,602 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-24 16:39:51,602 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-24 16:40:01,893 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 12.216 seconds (JVM running for 17.061)
2019-07-24 16:40:24,033 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message; UPDATE message SET message.`count`=(SELECT COUNT(*) FROM revert WHERE message.`messageID`=revert.`messageID`); 
2019-07-24 16:40:24,142 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 16:40:24,243 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 16:40:24,253 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 12
2019-07-24 16:40:24,517 ERROR (JsonUtil.java:129)- [FAILED toString()] 对象转Json串失败，失败原因：(was java.lang.NullPointerException) (through reference chain: java.util.HashMap["data"]->java.util.ArrayList[0]->com.zryx.company.model.Message["writeDate"])
2019-07-24 16:44:37,737 DEBUG (MessageController.java:37)- json===>null
2019-07-24 16:44:45,822 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-VFTL6TA with PID 5188 (C:\123\company\target\classes started by 高羽翯 in C:\123\company)
2019-07-24 16:44:45,832 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-24 16:44:45,832 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-24 16:44:56,587 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 12.455 seconds (JVM running for 16.049)
2019-07-24 16:45:01,852 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message 
2019-07-24 16:45:01,938 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 16:45:02,034 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 16:45:02,282 DEBUG (MessageController.java:37)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 16,
    "title" : "今天有雷阵雨吗？",
    "content" : "今天到底有没有雷阵雨？？？",
    "writer" : "guest",
    "writeDate" : "2016-06-30",
    "count" : 2,
    "reverts" : null
  }, {
    "messageId" : 17,
    "title" : "中午吃什么？",
    "content" : "土豆红烧肉？还是糖醋里脊？",
    "writer" : "zhangsan",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 18,
    "title" : "今天装空调了！",
    "content" : "O(∩_∩)O哈哈~",
    "writer" : "quit",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 19,
    "title" : "众创梦工厂地址？",
    "content" : "求地址？",
    "writer" : "uret",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 20,
    "title" : "清华同方显示器价格？",
    "content" : "型号为：AW1920TS",
    "writer" : "robot",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 21,
    "title" : "你的开机速度是多少？",
    "content" : "晒晒你的电脑的开机速度吧~~~",
    "writer" : "honme",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 22,
    "title" : "谷歌浏览器支持富文本，IE不支持！",
    "content" : "<p>\r\n\t<span style=\"font-size:1...",
    "writer" : "erick",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 23,
    "title" : "清华同方显示器的报价，型号AW1920TS",
    "content" : "<p>\r\n\twww.baidu.com</p>\r\n<p>\r\n...",
    "writer" : "bimy",
    "writeDate" : "2016-06-30",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 24,
    "title" : "明天有雨吗？",
    "content" : "<p>\r\n\t天气预报说有雨，你们说会下吗</p>\r\n",
    "writer" : "郭燕",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 25,
    "title" : "苹果手机壳哪有卖的？",
    "content" : "",
    "writer" : "uidn",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 26,
    "title" : "今天下雪吗？",
    "content" : "<p>\r\n\t下雪？</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-01",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 27,
    "title" : "今天谁带U盘了？",
    "content" : "<p>\r\n\t借我用一下。谢谢！</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-02",
    "count" : 1,
    "reverts" : null
  } ]
}
2019-07-24 16:48:21,269 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message 
2019-07-24 16:48:21,272 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 16:48:21,288 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 16:48:21,298 DEBUG (MessageController.java:37)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 16,
    "title" : "今天有雷阵雨吗？",
    "content" : "今天到底有没有雷阵雨？？？",
    "writer" : "guest",
    "writeDate" : "2016-06-30",
    "count" : 2,
    "reverts" : null
  }, {
    "messageId" : 17,
    "title" : "中午吃什么？",
    "content" : "土豆红烧肉？还是糖醋里脊？",
    "writer" : "zhangsan",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 18,
    "title" : "今天装空调了！",
    "content" : "O(∩_∩)O哈哈~",
    "writer" : "quit",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 19,
    "title" : "众创梦工厂地址？",
    "content" : "求地址？",
    "writer" : "uret",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 20,
    "title" : "清华同方显示器价格？",
    "content" : "型号为：AW1920TS",
    "writer" : "robot",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 21,
    "title" : "你的开机速度是多少？",
    "content" : "晒晒你的电脑的开机速度吧~~~",
    "writer" : "honme",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 22,
    "title" : "谷歌浏览器支持富文本，IE不支持！",
    "content" : "<p>\r\n\t<span style=\"font-size:1...",
    "writer" : "erick",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 23,
    "title" : "清华同方显示器的报价，型号AW1920TS",
    "content" : "<p>\r\n\twww.baidu.com</p>\r\n<p>\r\n...",
    "writer" : "bimy",
    "writeDate" : "2016-06-30",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 24,
    "title" : "明天有雨吗？",
    "content" : "<p>\r\n\t天气预报说有雨，你们说会下吗</p>\r\n",
    "writer" : "郭燕",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 25,
    "title" : "苹果手机壳哪有卖的？",
    "content" : "",
    "writer" : "uidn",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 26,
    "title" : "今天下雪吗？",
    "content" : "<p>\r\n\t下雪？</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-01",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 27,
    "title" : "今天谁带U盘了？",
    "content" : "<p>\r\n\t借我用一下。谢谢！</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-02",
    "count" : 1,
    "reverts" : null
  } ]
}
2019-07-24 16:49:21,702 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message 
2019-07-24 16:49:21,704 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 16:49:21,713 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 16:49:21,718 DEBUG (MessageController.java:37)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 16,
    "title" : "今天有雷阵雨吗？",
    "content" : "今天到底有没有雷阵雨？？？",
    "writer" : "guest",
    "writeDate" : "2016-06-30",
    "count" : 2,
    "reverts" : null
  }, {
    "messageId" : 17,
    "title" : "中午吃什么？",
    "content" : "土豆红烧肉？还是糖醋里脊？",
    "writer" : "zhangsan",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 18,
    "title" : "今天装空调了！",
    "content" : "O(∩_∩)O哈哈~",
    "writer" : "quit",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 19,
    "title" : "众创梦工厂地址？",
    "content" : "求地址？",
    "writer" : "uret",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 20,
    "title" : "清华同方显示器价格？",
    "content" : "型号为：AW1920TS",
    "writer" : "robot",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 21,
    "title" : "你的开机速度是多少？",
    "content" : "晒晒你的电脑的开机速度吧~~~",
    "writer" : "honme",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 22,
    "title" : "谷歌浏览器支持富文本，IE不支持！",
    "content" : "<p>\r\n\t<span style=\"font-size:1...",
    "writer" : "erick",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 23,
    "title" : "清华同方显示器的报价，型号AW1920TS",
    "content" : "<p>\r\n\twww.baidu.com</p>\r\n<p>\r\n...",
    "writer" : "bimy",
    "writeDate" : "2016-06-30",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 24,
    "title" : "明天有雨吗？",
    "content" : "<p>\r\n\t天气预报说有雨，你们说会下吗</p>\r\n",
    "writer" : "郭燕",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 25,
    "title" : "苹果手机壳哪有卖的？",
    "content" : "",
    "writer" : "uidn",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 26,
    "title" : "今天下雪吗？",
    "content" : "<p>\r\n\t下雪？</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-01",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 27,
    "title" : "今天谁带U盘了？",
    "content" : "<p>\r\n\t借我用一下。谢谢！</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-02",
    "count" : 1,
    "reverts" : null
  } ]
}
2019-07-24 16:49:45,448 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message 
2019-07-24 16:49:45,450 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 16:49:45,459 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 16:49:45,463 DEBUG (MessageController.java:37)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 16,
    "title" : "今天有雷阵雨吗？",
    "content" : "今天到底有没有雷阵雨？？？",
    "writer" : "guest",
    "writeDate" : "2016-06-30",
    "count" : 2,
    "reverts" : null
  }, {
    "messageId" : 17,
    "title" : "中午吃什么？",
    "content" : "土豆红烧肉？还是糖醋里脊？",
    "writer" : "zhangsan",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 18,
    "title" : "今天装空调了！",
    "content" : "O(∩_∩)O哈哈~",
    "writer" : "quit",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 19,
    "title" : "众创梦工厂地址？",
    "content" : "求地址？",
    "writer" : "uret",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 20,
    "title" : "清华同方显示器价格？",
    "content" : "型号为：AW1920TS",
    "writer" : "robot",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 21,
    "title" : "你的开机速度是多少？",
    "content" : "晒晒你的电脑的开机速度吧~~~",
    "writer" : "honme",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 22,
    "title" : "谷歌浏览器支持富文本，IE不支持！",
    "content" : "<p>\r\n\t<span style=\"font-size:1...",
    "writer" : "erick",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 23,
    "title" : "清华同方显示器的报价，型号AW1920TS",
    "content" : "<p>\r\n\twww.baidu.com</p>\r\n<p>\r\n...",
    "writer" : "bimy",
    "writeDate" : "2016-06-30",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 24,
    "title" : "明天有雨吗？",
    "content" : "<p>\r\n\t天气预报说有雨，你们说会下吗</p>\r\n",
    "writer" : "郭燕",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 25,
    "title" : "苹果手机壳哪有卖的？",
    "content" : "",
    "writer" : "uidn",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 26,
    "title" : "今天下雪吗？",
    "content" : "<p>\r\n\t下雪？</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-01",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 27,
    "title" : "今天谁带U盘了？",
    "content" : "<p>\r\n\t借我用一下。谢谢！</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-02",
    "count" : 1,
    "reverts" : null
  } ]
}
2019-07-24 16:52:14,777 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message 
2019-07-24 16:52:14,779 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 16:52:14,785 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 16:52:14,789 DEBUG (MessageController.java:37)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 16,
    "title" : "今天有雷阵雨吗？",
    "content" : "今天到底有没有雷阵雨？？？",
    "writer" : "guest",
    "writeDate" : "2016-06-30",
    "count" : 2,
    "reverts" : null
  }, {
    "messageId" : 17,
    "title" : "中午吃什么？",
    "content" : "土豆红烧肉？还是糖醋里脊？",
    "writer" : "zhangsan",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 18,
    "title" : "今天装空调了！",
    "content" : "O(∩_∩)O哈哈~",
    "writer" : "quit",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 19,
    "title" : "众创梦工厂地址？",
    "content" : "求地址？",
    "writer" : "uret",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 20,
    "title" : "清华同方显示器价格？",
    "content" : "型号为：AW1920TS",
    "writer" : "robot",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 21,
    "title" : "你的开机速度是多少？",
    "content" : "晒晒你的电脑的开机速度吧~~~",
    "writer" : "honme",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 22,
    "title" : "谷歌浏览器支持富文本，IE不支持！",
    "content" : "<p>\r\n\t<span style=\"font-size:1...",
    "writer" : "erick",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 23,
    "title" : "清华同方显示器的报价，型号AW1920TS",
    "content" : "<p>\r\n\twww.baidu.com</p>\r\n<p>\r\n...",
    "writer" : "bimy",
    "writeDate" : "2016-06-30",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 24,
    "title" : "明天有雨吗？",
    "content" : "<p>\r\n\t天气预报说有雨，你们说会下吗</p>\r\n",
    "writer" : "郭燕",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 25,
    "title" : "苹果手机壳哪有卖的？",
    "content" : "",
    "writer" : "uidn",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 26,
    "title" : "今天下雪吗？",
    "content" : "<p>\r\n\t下雪？</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-01",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 27,
    "title" : "今天谁带U盘了？",
    "content" : "<p>\r\n\t借我用一下。谢谢！</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-02",
    "count" : 1,
    "reverts" : null
  } ]
}
2019-07-24 16:52:18,010 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message 
2019-07-24 16:52:18,012 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 16:52:18,019 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 16:52:18,022 DEBUG (MessageController.java:37)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 16,
    "title" : "今天有雷阵雨吗？",
    "content" : "今天到底有没有雷阵雨？？？",
    "writer" : "guest",
    "writeDate" : "2016-06-30",
    "count" : 2,
    "reverts" : null
  }, {
    "messageId" : 17,
    "title" : "中午吃什么？",
    "content" : "土豆红烧肉？还是糖醋里脊？",
    "writer" : "zhangsan",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 18,
    "title" : "今天装空调了！",
    "content" : "O(∩_∩)O哈哈~",
    "writer" : "quit",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 19,
    "title" : "众创梦工厂地址？",
    "content" : "求地址？",
    "writer" : "uret",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 20,
    "title" : "清华同方显示器价格？",
    "content" : "型号为：AW1920TS",
    "writer" : "robot",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 21,
    "title" : "你的开机速度是多少？",
    "content" : "晒晒你的电脑的开机速度吧~~~",
    "writer" : "honme",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 22,
    "title" : "谷歌浏览器支持富文本，IE不支持！",
    "content" : "<p>\r\n\t<span style=\"font-size:1...",
    "writer" : "erick",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 23,
    "title" : "清华同方显示器的报价，型号AW1920TS",
    "content" : "<p>\r\n\twww.baidu.com</p>\r\n<p>\r\n...",
    "writer" : "bimy",
    "writeDate" : "2016-06-30",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 24,
    "title" : "明天有雨吗？",
    "content" : "<p>\r\n\t天气预报说有雨，你们说会下吗</p>\r\n",
    "writer" : "郭燕",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 25,
    "title" : "苹果手机壳哪有卖的？",
    "content" : "",
    "writer" : "uidn",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 26,
    "title" : "今天下雪吗？",
    "content" : "<p>\r\n\t下雪？</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-01",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 27,
    "title" : "今天谁带U盘了？",
    "content" : "<p>\r\n\t借我用一下。谢谢！</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-02",
    "count" : 1,
    "reverts" : null
  } ]
}
2019-07-24 16:53:05,897 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news 
2019-07-24 16:53:05,900 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 16:53:05,925 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 18
2019-07-24 16:53:05,938 DEBUG (NewsController.java:33)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 1,
    "title" : "创建新项目",
    "content" : "新闻内容",
    "writeDate" : 1466784000000
  }, {
    "newsId" : 2,
    "title" : "索尼位55降价送卡",
    "content" : "新闻内容3",
    "writeDate" : -30364761600000
  }, {
    "newsId" : 3,
    "title" : "理光b5不到二千",
    "content" : "你好",
    "writeDate" : 1191513600000
  }, {
    "newsId" : 5,
    "title" : "单反与镜头组合",
    "content" : null,
    "writeDate" : 1191369600000
  }, {
    "newsId" : 15,
    "title" : "百度将开拓美国和欧盟市场",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 16,
    "title" : "Uber CEO和马云交好",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 22,
    "title" : "今日早报",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 23,
    "title" : "高考查分被马云占了先机",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 24,
    "title" : "看完这个，你还想做微商吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 25,
    "title" : "农村电商只能成为空谈?",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 26,
    "title" : "上半年这些行业大爆炸",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 27,
    "title" : "阿里巴巴最为窘迫的四件事",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 28,
    "title" : "高管却离开了",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 30,
    "title" : "支付宝余额使用将受限",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 31,
    "title" : "国内垂直B2B电商平台TOP30",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 33,
    "title" : "谷歌要重新进入中国市场了吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 34,
    "title" : "今天",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 35,
    "title" : "庆十一商品促销11111",
    "content" : "222222",
    "writeDate" : 1562256000000
  } ]
}
2019-07-24 16:53:08,624 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news WHERE newsId = ? 
2019-07-24 16:53:08,627 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 16:53:08,631 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 16:53:11,706 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news 
2019-07-24 16:53:11,707 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 16:53:11,716 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 18
2019-07-24 16:53:11,718 DEBUG (NewsController.java:33)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 1,
    "title" : "创建新项目",
    "content" : "新闻内容",
    "writeDate" : 1466784000000
  }, {
    "newsId" : 2,
    "title" : "索尼位55降价送卡",
    "content" : "新闻内容3",
    "writeDate" : -30364761600000
  }, {
    "newsId" : 3,
    "title" : "理光b5不到二千",
    "content" : "你好",
    "writeDate" : 1191513600000
  }, {
    "newsId" : 5,
    "title" : "单反与镜头组合",
    "content" : null,
    "writeDate" : 1191369600000
  }, {
    "newsId" : 15,
    "title" : "百度将开拓美国和欧盟市场",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 16,
    "title" : "Uber CEO和马云交好",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 22,
    "title" : "今日早报",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 23,
    "title" : "高考查分被马云占了先机",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 24,
    "title" : "看完这个，你还想做微商吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 25,
    "title" : "农村电商只能成为空谈?",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 26,
    "title" : "上半年这些行业大爆炸",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 27,
    "title" : "阿里巴巴最为窘迫的四件事",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 28,
    "title" : "高管却离开了",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 30,
    "title" : "支付宝余额使用将受限",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 31,
    "title" : "国内垂直B2B电商平台TOP30",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 33,
    "title" : "谷歌要重新进入中国市场了吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 34,
    "title" : "今天",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 35,
    "title" : "庆十一商品促销11111",
    "content" : "222222",
    "writeDate" : 1562256000000
  } ]
}
2019-07-24 16:53:14,889 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news WHERE newsId = ? 
2019-07-24 16:53:14,892 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 16:53:14,896 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 16:53:18,270 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news 
2019-07-24 16:53:18,272 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 16:53:18,279 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 18
2019-07-24 16:53:18,281 DEBUG (NewsController.java:33)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 1,
    "title" : "创建新项目",
    "content" : "新闻内容",
    "writeDate" : 1466784000000
  }, {
    "newsId" : 2,
    "title" : "索尼位55降价送卡",
    "content" : "新闻内容3",
    "writeDate" : -30364761600000
  }, {
    "newsId" : 3,
    "title" : "理光b5不到二千",
    "content" : "你好",
    "writeDate" : 1191513600000
  }, {
    "newsId" : 5,
    "title" : "单反与镜头组合",
    "content" : null,
    "writeDate" : 1191369600000
  }, {
    "newsId" : 15,
    "title" : "百度将开拓美国和欧盟市场",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 16,
    "title" : "Uber CEO和马云交好",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 22,
    "title" : "今日早报",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 23,
    "title" : "高考查分被马云占了先机",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 24,
    "title" : "看完这个，你还想做微商吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 25,
    "title" : "农村电商只能成为空谈?",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 26,
    "title" : "上半年这些行业大爆炸",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 27,
    "title" : "阿里巴巴最为窘迫的四件事",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 28,
    "title" : "高管却离开了",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 30,
    "title" : "支付宝余额使用将受限",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 31,
    "title" : "国内垂直B2B电商平台TOP30",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 33,
    "title" : "谷歌要重新进入中国市场了吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 34,
    "title" : "今天",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 35,
    "title" : "庆十一商品促销11111",
    "content" : "222222",
    "writeDate" : 1562256000000
  } ]
}
2019-07-24 17:05:41,308 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-VFTL6TA with PID 5188 (C:\123\company\target\classes started by 高羽翯 in C:\123\company)
2019-07-24 17:05:41,308 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-24 17:05:41,308 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-24 17:22:21,473 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-VFTL6TA with PID 5188 (C:\123\company\target\classes started by 高羽翯 in C:\123\company)
2019-07-24 17:22:21,473 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-24 17:22:21,473 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-24 17:22:27,394 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 6.167 seconds (JVM running for 2266.856)
2019-07-24 17:23:37,081 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-VFTL6TA with PID 5188 (C:\123\company\target\classes started by 高羽翯 in C:\123\company)
2019-07-24 17:23:37,081 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-24 17:23:37,081 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-24 17:23:42,530 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 5.631 seconds (JVM running for 2341.995)
2019-07-24 17:23:54,506 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-VFTL6TA with PID 5188 (C:\123\company\target\classes started by 高羽翯 in C:\123\company)
2019-07-24 17:23:54,506 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-24 17:23:54,506 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-24 17:23:59,603 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 5.311 seconds (JVM running for 2359.08)
2019-07-24 17:25:10,845 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-VFTL6TA with PID 5188 (C:\123\company\target\classes started by 高羽翯 in C:\123\company)
2019-07-24 17:25:10,845 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-24 17:25:10,846 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-24 17:25:18,000 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 7.288 seconds (JVM running for 2437.462)
2019-07-24 17:32:02,448 ERROR (BaseController.java:258)- 参数类型错误
org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'int'; nested exception is java.lang.NumberFormatException: For input string: ""
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:132)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:126)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NumberFormatException: For input string: ""
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Integer.parseInt(Integer.java:592)
	at java.lang.Integer.valueOf(Integer.java:766)
	at org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:211)
	at org.springframework.beans.propertyeditors.CustomNumberEditor.setAsText(CustomNumberEditor.java:115)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:429)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:402)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:155)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:73)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53)
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:693)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:124)
	... 51 common frames omitted
2019-07-24 21:38:51,714 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product LIMIT ?,? 
2019-07-24 21:38:51,728 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-24 21:38:51,754 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 21:38:51,759 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM product 
2019-07-24 21:38:51,761 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 21:38:51,817 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 21:38:51,883 DEBUG (ProductController.java:32)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "reasonable" : true,
    "toCamelVunderline" : false,
    "pageData" : [ {
      "productId" : 14,
      "serialNumber" : null,
      "name" : "笔记本",
      "brand" : "IBM",
      "model" : "g123",
      "price" : 4600.0,
      "picture" : "d_r11_10_r1_c1.jpg",
      "description" : "IBM5x系列IBM5x系列"
    }, {
      "productId" : 15,
      "serialNumber" : null,
      "name" : "摄像机",
      "brand" : "三星",
      "model" : "05",
      "price" : 8000.0,
      "picture" : "d_r11_10_r1_c8.jpg",
      "description" : "像素超清"
    }, {
      "productId" : 16,
      "serialNumber" : null,
      "name" : "数码相机",
      "brand" : "爱国者",
      "model" : "08",
      "price" : 9000.0,
      "picture" : "d_r11_10_r1_c81.jpg",
      "description" : "爱国者08"
    }, {
      "productId" : 17,
      "serialNumber" : null,
      "name" : "手机",
      "brand" : "摩托罗拉",
      "model" : "60",
      "price" : 2800.0,
      "picture" : "d_r11_10_r1_c221.jpg",
      "description" : "摩托罗拉经典款"
    } ],
    "pageCount" : 3,
    "dataCount" : 12
  }
}
2019-07-24 21:39:04,454 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message 
2019-07-24 21:39:04,475 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 21:39:04,482 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 21:39:04,488 DEBUG (MessageController.java:37)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 16,
    "title" : "今天有雷阵雨吗？",
    "content" : "今天到底有没有雷阵雨？？？",
    "writer" : "guest",
    "writeDate" : "2016-06-30",
    "count" : 2,
    "reverts" : null
  }, {
    "messageId" : 17,
    "title" : "中午吃什么？",
    "content" : "土豆红烧肉？还是糖醋里脊？",
    "writer" : "zhangsan",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 18,
    "title" : "今天装空调了！",
    "content" : "O(∩_∩)O哈哈~",
    "writer" : "quit",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 19,
    "title" : "众创梦工厂地址？",
    "content" : "求地址？",
    "writer" : "uret",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 20,
    "title" : "清华同方显示器价格？",
    "content" : "型号为：AW1920TS",
    "writer" : "robot",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 21,
    "title" : "你的开机速度是多少？",
    "content" : "晒晒你的电脑的开机速度吧~~~",
    "writer" : "honme",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 22,
    "title" : "谷歌浏览器支持富文本，IE不支持！",
    "content" : "<p>\r\n\t<span style=\"font-size:1...",
    "writer" : "erick",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 23,
    "title" : "清华同方显示器的报价，型号AW1920TS",
    "content" : "<p>\r\n\twww.baidu.com</p>\r\n<p>\r\n...",
    "writer" : "bimy",
    "writeDate" : "2016-06-30",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 24,
    "title" : "明天有雨吗？",
    "content" : "<p>\r\n\t天气预报说有雨，你们说会下吗</p>\r\n",
    "writer" : "郭燕",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 25,
    "title" : "苹果手机壳哪有卖的？",
    "content" : "",
    "writer" : "uidn",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 26,
    "title" : "今天下雪吗？",
    "content" : "<p>\r\n\t下雪？</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-01",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 27,
    "title" : "今天谁带U盘了？",
    "content" : "<p>\r\n\t借我用一下。谢谢！</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-02",
    "count" : 1,
    "reverts" : null
  } ]
}
2019-07-24 21:39:43,315 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-VFTL6TA with PID 5188 (C:\123\company\target\classes started by 高羽翯 in C:\123\company)
2019-07-24 21:39:43,322 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-24 21:39:43,324 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-24 21:39:47,578 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 4.654 seconds (JVM running for 17711.619)
2019-07-24 21:40:53,060 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on DESKTOP-VFTL6TA with PID 5188 (C:\123\company\target\classes started by 高羽翯 in C:\123\company)
2019-07-24 21:40:53,060 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-24 21:40:53,060 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-24 21:40:58,023 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 5.118 seconds (JVM running for 17782.062)
2019-07-24 21:43:12,481 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product 
2019-07-24 21:43:12,500 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 21:43:12,507 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 21:43:12,514 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news 
2019-07-24 21:43:12,515 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 21:43:12,530 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 18
2019-07-24 21:43:12,540 DEBUG (NewsController.java:33)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 1,
    "title" : "创建新项目",
    "content" : "新闻内容",
    "writeDate" : 1466784000000
  }, {
    "newsId" : 2,
    "title" : "索尼位55降价送卡",
    "content" : "新闻内容3",
    "writeDate" : -30364761600000
  }, {
    "newsId" : 3,
    "title" : "理光b5不到二千",
    "content" : "你好",
    "writeDate" : 1191513600000
  }, {
    "newsId" : 5,
    "title" : "单反与镜头组合",
    "content" : null,
    "writeDate" : 1191369600000
  }, {
    "newsId" : 15,
    "title" : "百度将开拓美国和欧盟市场",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 16,
    "title" : "Uber CEO和马云交好",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 22,
    "title" : "今日早报",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 23,
    "title" : "高考查分被马云占了先机",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 24,
    "title" : "看完这个，你还想做微商吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 25,
    "title" : "农村电商只能成为空谈?",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 26,
    "title" : "上半年这些行业大爆炸",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 27,
    "title" : "阿里巴巴最为窘迫的四件事",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 28,
    "title" : "高管却离开了",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 30,
    "title" : "支付宝余额使用将受限",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 31,
    "title" : "国内垂直B2B电商平台TOP30",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 33,
    "title" : "谷歌要重新进入中国市场了吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 34,
    "title" : "今天",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 35,
    "title" : "庆十一商品促销11111",
    "content" : "222222",
    "writeDate" : 1562256000000
  } ]
}
2019-07-24 21:47:41,004 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 21:47:41,006 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String)
2019-07-24 21:47:41,014 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 21:47:41,024 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users 
2019-07-24 21:47:41,024 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 21:47:41,028 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 14
2019-07-24 21:47:41,029 DEBUG (UserController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 2,
    "userName" : "user2",
    "password" : "222222",
    "status" : 1
  }, {
    "userId" : 9,
    "userName" : "user9",
    "password" : "999999",
    "status" : 1
  }, {
    "userId" : 10,
    "userName" : "user1010",
    "password" : "111111",
    "status" : 1
  }, {
    "userId" : 12,
    "userName" : "user11",
    "password" : "111111",
    "status" : 0
  }, {
    "userId" : 13,
    "userName" : "user123",
    "password" : "222222",
    "status" : 0
  }, {
    "userId" : 18,
    "userName" : "user167",
    "password" : "666666",
    "status" : 0
  }, {
    "userId" : 19,
    "userName" : "user19",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 20,
    "userName" : "user20",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 22,
    "userName" : "guoyan",
    "password" : "123456",
    "status" : 1
  }, {
    "userId" : 23,
    "userName" : "liuxinle",
    "password" : "111111",
    "status" : 1
  }, {
    "userId" : 24,
    "userName" : "maqiuyue",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 29,
    "userName" : "admin",
    "password" : "123456",
    "status" : 1
  }, {
    "userId" : 37,
    "userName" : "张三",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 41,
    "userName" : "王五愣2",
    "password" : "123456",
    "status" : 0
  } ]
}
2019-07-24 21:49:38,388 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product LIMIT ?,? 
2019-07-24 21:49:38,390 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-24 21:49:38,396 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 21:49:38,398 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM product 
2019-07-24 21:49:38,399 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 21:49:38,401 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 21:49:38,408 DEBUG (ProductController.java:32)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "reasonable" : true,
    "toCamelVunderline" : false,
    "pageData" : [ {
      "productId" : 14,
      "serialNumber" : null,
      "name" : "笔记本",
      "brand" : "IBM",
      "model" : "g123",
      "price" : 4600.0,
      "picture" : "d_r11_10_r1_c1.jpg",
      "description" : "IBM5x系列IBM5x系列"
    }, {
      "productId" : 15,
      "serialNumber" : null,
      "name" : "摄像机",
      "brand" : "三星",
      "model" : "05",
      "price" : 8000.0,
      "picture" : "d_r11_10_r1_c8.jpg",
      "description" : "像素超清"
    }, {
      "productId" : 16,
      "serialNumber" : null,
      "name" : "数码相机",
      "brand" : "爱国者",
      "model" : "08",
      "price" : 9000.0,
      "picture" : "d_r11_10_r1_c81.jpg",
      "description" : "爱国者08"
    }, {
      "productId" : 17,
      "serialNumber" : null,
      "name" : "手机",
      "brand" : "摩托罗拉",
      "model" : "60",
      "price" : 2800.0,
      "picture" : "d_r11_10_r1_c221.jpg",
      "description" : "摩托罗拉经典款"
    } ],
    "pageCount" : 3,
    "dataCount" : 12
  }
}
2019-07-24 21:49:44,840 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product WHERE productId = ? 
2019-07-24 21:49:44,842 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 14(Integer)
2019-07-24 21:49:44,846 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 21:49:54,065 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product LIMIT ?,? 
2019-07-24 21:49:54,067 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 4(Integer)
2019-07-24 21:49:54,070 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-24 21:49:54,072 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM product 
2019-07-24 21:49:54,073 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 21:49:54,075 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 21:49:54,077 DEBUG (ProductController.java:32)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 4,
    "pageNum" : 1,
    "reasonable" : true,
    "toCamelVunderline" : false,
    "pageData" : [ {
      "productId" : 14,
      "serialNumber" : null,
      "name" : "笔记本",
      "brand" : "IBM",
      "model" : "g123",
      "price" : 4600.0,
      "picture" : "d_r11_10_r1_c1.jpg",
      "description" : "IBM5x系列IBM5x系列"
    }, {
      "productId" : 15,
      "serialNumber" : null,
      "name" : "摄像机",
      "brand" : "三星",
      "model" : "05",
      "price" : 8000.0,
      "picture" : "d_r11_10_r1_c8.jpg",
      "description" : "像素超清"
    }, {
      "productId" : 16,
      "serialNumber" : null,
      "name" : "数码相机",
      "brand" : "爱国者",
      "model" : "08",
      "price" : 9000.0,
      "picture" : "d_r11_10_r1_c81.jpg",
      "description" : "爱国者08"
    }, {
      "productId" : 17,
      "serialNumber" : null,
      "name" : "手机",
      "brand" : "摩托罗拉",
      "model" : "60",
      "price" : 2800.0,
      "picture" : "d_r11_10_r1_c221.jpg",
      "description" : "摩托罗拉经典款"
    } ],
    "pageCount" : 3,
    "dataCount" : 12
  }
}
2019-07-24 21:49:55,839 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM product WHERE productId = ? 
2019-07-24 21:49:55,841 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 15(Integer)
2019-07-24 21:49:55,844 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 21:50:48,120 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 21:50:48,122 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String)
2019-07-24 21:50:48,125 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 21:50:48,134 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users 
2019-07-24 21:50:48,137 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 21:50:48,142 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 14
2019-07-24 21:50:48,147 DEBUG (UserController.java:28)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 2,
    "userName" : "user2",
    "password" : "222222",
    "status" : 1
  }, {
    "userId" : 9,
    "userName" : "user9",
    "password" : "999999",
    "status" : 1
  }, {
    "userId" : 10,
    "userName" : "user1010",
    "password" : "111111",
    "status" : 1
  }, {
    "userId" : 12,
    "userName" : "user11",
    "password" : "111111",
    "status" : 0
  }, {
    "userId" : 13,
    "userName" : "user123",
    "password" : "222222",
    "status" : 0
  }, {
    "userId" : 18,
    "userName" : "user167",
    "password" : "666666",
    "status" : 0
  }, {
    "userId" : 19,
    "userName" : "user19",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 20,
    "userName" : "user20",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 22,
    "userName" : "guoyan",
    "password" : "123456",
    "status" : 1
  }, {
    "userId" : 23,
    "userName" : "liuxinle",
    "password" : "111111",
    "status" : 1
  }, {
    "userId" : 24,
    "userName" : "maqiuyue",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 29,
    "userName" : "admin",
    "password" : "123456",
    "status" : 1
  }, {
    "userId" : 37,
    "userName" : "张三",
    "password" : "123456",
    "status" : 0
  }, {
    "userId" : 41,
    "userName" : "王五愣2",
    "password" : "123456",
    "status" : 0
  } ]
}
2019-07-24 21:51:53,604 ERROR (BaseController.java:258)- 参数类型错误
org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'int'; nested exception is java.lang.NumberFormatException: For input string: ""
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:132)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:126)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NumberFormatException: For input string: ""
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Integer.parseInt(Integer.java:592)
	at java.lang.Integer.valueOf(Integer.java:766)
	at org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:211)
	at org.springframework.beans.propertyeditors.CustomNumberEditor.setAsText(CustomNumberEditor.java:115)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:429)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:402)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:155)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:73)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53)
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:693)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:124)
	... 51 common frames omitted
2019-07-24 21:51:54,784 ERROR (BaseController.java:258)- 参数类型错误
org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'int'; nested exception is java.lang.NumberFormatException: For input string: ""
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:132)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:126)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NumberFormatException: For input string: ""
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Integer.parseInt(Integer.java:592)
	at java.lang.Integer.valueOf(Integer.java:766)
	at org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:211)
	at org.springframework.beans.propertyeditors.CustomNumberEditor.setAsText(CustomNumberEditor.java:115)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:429)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:402)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:155)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:73)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53)
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:693)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:124)
	... 51 common frames omitted
2019-07-24 21:52:09,583 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message; UPDATE message SET message.`count`=(SELECT COUNT(*) FROM revert WHERE message.`messageID`=revert.`messageID`); 
2019-07-24 21:52:09,586 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 21:52:09,614 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 21:52:09,617 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 12
2019-07-24 21:52:09,621 DEBUG (MessageController.java:37)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 16,
    "title" : "今天有雷阵雨吗？",
    "content" : "今天到底有没有雷阵雨？？？",
    "writer" : "guest",
    "writeDate" : "2016-06-30",
    "count" : 2,
    "reverts" : null
  }, {
    "messageId" : 17,
    "title" : "中午吃什么？",
    "content" : "土豆红烧肉？还是糖醋里脊？",
    "writer" : "zhangsan",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 18,
    "title" : "今天装空调了！",
    "content" : "O(∩_∩)O哈哈~",
    "writer" : "quit",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 19,
    "title" : "众创梦工厂地址？",
    "content" : "求地址？",
    "writer" : "uret",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 20,
    "title" : "清华同方显示器价格？",
    "content" : "型号为：AW1920TS",
    "writer" : "robot",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 21,
    "title" : "你的开机速度是多少？",
    "content" : "晒晒你的电脑的开机速度吧~~~",
    "writer" : "honme",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 22,
    "title" : "谷歌浏览器支持富文本，IE不支持！",
    "content" : "<p>\r\n\t<span style=\"font-size:1...",
    "writer" : "erick",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 23,
    "title" : "清华同方显示器的报价，型号AW1920TS",
    "content" : "<p>\r\n\twww.baidu.com</p>\r\n<p>\r\n...",
    "writer" : "bimy",
    "writeDate" : "2016-06-30",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 24,
    "title" : "明天有雨吗？",
    "content" : "<p>\r\n\t天气预报说有雨，你们说会下吗</p>\r\n",
    "writer" : "郭燕",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 25,
    "title" : "苹果手机壳哪有卖的？",
    "content" : "",
    "writer" : "uidn",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 26,
    "title" : "今天下雪吗？",
    "content" : "<p>\r\n\t下雪？</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-01",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 27,
    "title" : "今天谁带U盘了？",
    "content" : "<p>\r\n\t借我用一下。谢谢！</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-02",
    "count" : 1,
    "reverts" : null
  } ]
}
2019-07-24 21:53:05,517 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product 
2019-07-24 21:53:05,519 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 21:53:05,525 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 21:53:05,530 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news 
2019-07-24 21:53:05,532 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 21:53:05,539 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 18
2019-07-24 21:53:05,540 DEBUG (NewsController.java:33)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 1,
    "title" : "创建新项目",
    "content" : "新闻内容",
    "writeDate" : 1466784000000
  }, {
    "newsId" : 2,
    "title" : "索尼位55降价送卡",
    "content" : "新闻内容3",
    "writeDate" : -30364761600000
  }, {
    "newsId" : 3,
    "title" : "理光b5不到二千",
    "content" : "你好",
    "writeDate" : 1191513600000
  }, {
    "newsId" : 5,
    "title" : "单反与镜头组合",
    "content" : null,
    "writeDate" : 1191369600000
  }, {
    "newsId" : 15,
    "title" : "百度将开拓美国和欧盟市场",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 16,
    "title" : "Uber CEO和马云交好",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 22,
    "title" : "今日早报",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 23,
    "title" : "高考查分被马云占了先机",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 24,
    "title" : "看完这个，你还想做微商吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 25,
    "title" : "农村电商只能成为空谈?",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 26,
    "title" : "上半年这些行业大爆炸",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 27,
    "title" : "阿里巴巴最为窘迫的四件事",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 28,
    "title" : "高管却离开了",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 30,
    "title" : "支付宝余额使用将受限",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 31,
    "title" : "国内垂直B2B电商平台TOP30",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 33,
    "title" : "谷歌要重新进入中国市场了吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 34,
    "title" : "今天",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 35,
    "title" : "庆十一商品促销11111",
    "content" : "222222",
    "writeDate" : 1562256000000
  } ]
}
2019-07-24 21:55:06,903 ERROR (BaseController.java:258)- 参数类型错误
org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'int'; nested exception is java.lang.NumberFormatException: For input string: ""
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:132)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:126)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NumberFormatException: For input string: ""
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Integer.parseInt(Integer.java:592)
	at java.lang.Integer.valueOf(Integer.java:766)
	at org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:211)
	at org.springframework.beans.propertyeditors.CustomNumberEditor.setAsText(CustomNumberEditor.java:115)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:429)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:402)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:155)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:73)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53)
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:693)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:124)
	... 51 common frames omitted
2019-07-24 21:56:20,419 ERROR (BaseController.java:258)- 参数类型错误
org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'int'; nested exception is java.lang.NumberFormatException: For input string: ""
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:132)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:126)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NumberFormatException: For input string: ""
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Integer.parseInt(Integer.java:592)
	at java.lang.Integer.valueOf(Integer.java:766)
	at org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:211)
	at org.springframework.beans.propertyeditors.CustomNumberEditor.setAsText(CustomNumberEditor.java:115)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:429)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:402)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:155)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:73)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53)
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:693)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:124)
	... 51 common frames omitted
2019-07-24 21:56:21,654 ERROR (BaseController.java:258)- 参数类型错误
org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'int'; nested exception is java.lang.NumberFormatException: For input string: ""
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:132)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:126)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NumberFormatException: For input string: ""
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Integer.parseInt(Integer.java:592)
	at java.lang.Integer.valueOf(Integer.java:766)
	at org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:211)
	at org.springframework.beans.propertyeditors.CustomNumberEditor.setAsText(CustomNumberEditor.java:115)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:429)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:402)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:155)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:73)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53)
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:693)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:124)
	... 51 common frames omitted
2019-07-24 21:56:22,741 ERROR (BaseController.java:258)- 参数类型错误
org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'int'; nested exception is java.lang.NumberFormatException: For input string: ""
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:132)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:126)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NumberFormatException: For input string: ""
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Integer.parseInt(Integer.java:592)
	at java.lang.Integer.valueOf(Integer.java:766)
	at org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:211)
	at org.springframework.beans.propertyeditors.CustomNumberEditor.setAsText(CustomNumberEditor.java:115)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:429)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:402)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:155)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:73)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53)
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:693)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:124)
	... 51 common frames omitted
2019-07-24 21:56:39,492 ERROR (BaseController.java:258)- 参数类型错误
org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'int'; nested exception is java.lang.NumberFormatException: For input string: ""
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:132)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:126)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NumberFormatException: For input string: ""
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Integer.parseInt(Integer.java:592)
	at java.lang.Integer.valueOf(Integer.java:766)
	at org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:211)
	at org.springframework.beans.propertyeditors.CustomNumberEditor.setAsText(CustomNumberEditor.java:115)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:429)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:402)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:155)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:73)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53)
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:693)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:124)
	... 51 common frames omitted
2019-07-24 21:57:41,458 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news 
2019-07-24 21:57:41,461 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 21:57:41,467 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 18
2019-07-24 21:57:41,469 DEBUG (NewsController.java:33)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 1,
    "title" : "创建新项目",
    "content" : "新闻内容",
    "writeDate" : 1466784000000
  }, {
    "newsId" : 2,
    "title" : "索尼位55降价送卡",
    "content" : "新闻内容3",
    "writeDate" : -30364761600000
  }, {
    "newsId" : 3,
    "title" : "理光b5不到二千",
    "content" : "你好",
    "writeDate" : 1191513600000
  }, {
    "newsId" : 5,
    "title" : "单反与镜头组合",
    "content" : null,
    "writeDate" : 1191369600000
  }, {
    "newsId" : 15,
    "title" : "百度将开拓美国和欧盟市场",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 16,
    "title" : "Uber CEO和马云交好",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 22,
    "title" : "今日早报",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 23,
    "title" : "高考查分被马云占了先机",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 24,
    "title" : "看完这个，你还想做微商吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 25,
    "title" : "农村电商只能成为空谈?",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 26,
    "title" : "上半年这些行业大爆炸",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 27,
    "title" : "阿里巴巴最为窘迫的四件事",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 28,
    "title" : "高管却离开了",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 30,
    "title" : "支付宝余额使用将受限",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 31,
    "title" : "国内垂直B2B电商平台TOP30",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 33,
    "title" : "谷歌要重新进入中国市场了吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 34,
    "title" : "今天",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 35,
    "title" : "庆十一商品促销11111",
    "content" : "222222",
    "writeDate" : 1562256000000
  } ]
}
2019-07-24 21:57:43,946 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news WHERE newsId = ? 
2019-07-24 21:57:43,947 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 21:57:43,960 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 21:57:47,337 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news 
2019-07-24 21:57:47,338 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 21:57:47,342 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 18
2019-07-24 21:57:47,344 DEBUG (NewsController.java:33)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 1,
    "title" : "创建新项目",
    "content" : "新闻内容",
    "writeDate" : 1466784000000
  }, {
    "newsId" : 2,
    "title" : "索尼位55降价送卡",
    "content" : "新闻内容3",
    "writeDate" : -30364761600000
  }, {
    "newsId" : 3,
    "title" : "理光b5不到二千",
    "content" : "你好",
    "writeDate" : 1191513600000
  }, {
    "newsId" : 5,
    "title" : "单反与镜头组合",
    "content" : null,
    "writeDate" : 1191369600000
  }, {
    "newsId" : 15,
    "title" : "百度将开拓美国和欧盟市场",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 16,
    "title" : "Uber CEO和马云交好",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 22,
    "title" : "今日早报",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 23,
    "title" : "高考查分被马云占了先机",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 24,
    "title" : "看完这个，你还想做微商吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 25,
    "title" : "农村电商只能成为空谈?",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 26,
    "title" : "上半年这些行业大爆炸",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 27,
    "title" : "阿里巴巴最为窘迫的四件事",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 28,
    "title" : "高管却离开了",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 30,
    "title" : "支付宝余额使用将受限",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 31,
    "title" : "国内垂直B2B电商平台TOP30",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 33,
    "title" : "谷歌要重新进入中国市场了吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 34,
    "title" : "今天",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 35,
    "title" : "庆十一商品促销11111",
    "content" : "222222",
    "writeDate" : 1562256000000
  } ]
}
2019-07-24 21:58:45,767 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message; UPDATE message SET message.`count`=(SELECT COUNT(*) FROM revert WHERE message.`messageID`=revert.`messageID`); 
2019-07-24 21:58:45,769 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 21:58:45,785 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 21:58:45,786 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 12
2019-07-24 21:58:45,791 DEBUG (MessageController.java:37)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 16,
    "title" : "今天有雷阵雨吗？",
    "content" : "今天到底有没有雷阵雨？？？",
    "writer" : "guest",
    "writeDate" : "2016-06-30",
    "count" : 2,
    "reverts" : null
  }, {
    "messageId" : 17,
    "title" : "中午吃什么？",
    "content" : "土豆红烧肉？还是糖醋里脊？",
    "writer" : "zhangsan",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 18,
    "title" : "今天装空调了！",
    "content" : "O(∩_∩)O哈哈~",
    "writer" : "quit",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 19,
    "title" : "众创梦工厂地址？",
    "content" : "求地址？",
    "writer" : "uret",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 20,
    "title" : "清华同方显示器价格？",
    "content" : "型号为：AW1920TS",
    "writer" : "robot",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 21,
    "title" : "你的开机速度是多少？",
    "content" : "晒晒你的电脑的开机速度吧~~~",
    "writer" : "honme",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 22,
    "title" : "谷歌浏览器支持富文本，IE不支持！",
    "content" : "<p>\r\n\t<span style=\"font-size:1...",
    "writer" : "erick",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 23,
    "title" : "清华同方显示器的报价，型号AW1920TS",
    "content" : "<p>\r\n\twww.baidu.com</p>\r\n<p>\r\n...",
    "writer" : "bimy",
    "writeDate" : "2016-06-30",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 24,
    "title" : "明天有雨吗？",
    "content" : "<p>\r\n\t天气预报说有雨，你们说会下吗</p>\r\n",
    "writer" : "郭燕",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 25,
    "title" : "苹果手机壳哪有卖的？",
    "content" : "",
    "writer" : "uidn",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 26,
    "title" : "今天下雪吗？",
    "content" : "<p>\r\n\t下雪？</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-01",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 27,
    "title" : "今天谁带U盘了？",
    "content" : "<p>\r\n\t借我用一下。谢谢！</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-02",
    "count" : 1,
    "reverts" : null
  } ]
}
2019-07-24 21:58:51,972 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message; UPDATE message SET message.`count`=(SELECT COUNT(*) FROM revert WHERE message.`messageID`=revert.`messageID`); 
2019-07-24 21:58:51,974 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 21:58:51,987 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 21:58:51,988 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 12
2019-07-24 21:58:51,989 DEBUG (MessageController.java:37)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 16,
    "title" : "今天有雷阵雨吗？",
    "content" : "今天到底有没有雷阵雨？？？",
    "writer" : "guest",
    "writeDate" : "2016-06-30",
    "count" : 2,
    "reverts" : null
  }, {
    "messageId" : 17,
    "title" : "中午吃什么？",
    "content" : "土豆红烧肉？还是糖醋里脊？",
    "writer" : "zhangsan",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 18,
    "title" : "今天装空调了！",
    "content" : "O(∩_∩)O哈哈~",
    "writer" : "quit",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 19,
    "title" : "众创梦工厂地址？",
    "content" : "求地址？",
    "writer" : "uret",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 20,
    "title" : "清华同方显示器价格？",
    "content" : "型号为：AW1920TS",
    "writer" : "robot",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 21,
    "title" : "你的开机速度是多少？",
    "content" : "晒晒你的电脑的开机速度吧~~~",
    "writer" : "honme",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 22,
    "title" : "谷歌浏览器支持富文本，IE不支持！",
    "content" : "<p>\r\n\t<span style=\"font-size:1...",
    "writer" : "erick",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 23,
    "title" : "清华同方显示器的报价，型号AW1920TS",
    "content" : "<p>\r\n\twww.baidu.com</p>\r\n<p>\r\n...",
    "writer" : "bimy",
    "writeDate" : "2016-06-30",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 24,
    "title" : "明天有雨吗？",
    "content" : "<p>\r\n\t天气预报说有雨，你们说会下吗</p>\r\n",
    "writer" : "郭燕",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 25,
    "title" : "苹果手机壳哪有卖的？",
    "content" : "",
    "writer" : "uidn",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 26,
    "title" : "今天下雪吗？",
    "content" : "<p>\r\n\t下雪？</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-01",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 27,
    "title" : "今天谁带U盘了？",
    "content" : "<p>\r\n\t借我用一下。谢谢！</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-02",
    "count" : 1,
    "reverts" : null
  } ]
}
2019-07-24 21:59:03,304 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message; UPDATE message SET message.`count`=(SELECT COUNT(*) FROM revert WHERE message.`messageID`=revert.`messageID`); 
2019-07-24 21:59:03,305 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 21:59:03,314 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 21:59:03,315 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 12
2019-07-24 21:59:03,317 DEBUG (MessageController.java:37)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 16,
    "title" : "今天有雷阵雨吗？",
    "content" : "今天到底有没有雷阵雨？？？",
    "writer" : "guest",
    "writeDate" : "2016-06-30",
    "count" : 2,
    "reverts" : null
  }, {
    "messageId" : 17,
    "title" : "中午吃什么？",
    "content" : "土豆红烧肉？还是糖醋里脊？",
    "writer" : "zhangsan",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 18,
    "title" : "今天装空调了！",
    "content" : "O(∩_∩)O哈哈~",
    "writer" : "quit",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 19,
    "title" : "众创梦工厂地址？",
    "content" : "求地址？",
    "writer" : "uret",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 20,
    "title" : "清华同方显示器价格？",
    "content" : "型号为：AW1920TS",
    "writer" : "robot",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 21,
    "title" : "你的开机速度是多少？",
    "content" : "晒晒你的电脑的开机速度吧~~~",
    "writer" : "honme",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 22,
    "title" : "谷歌浏览器支持富文本，IE不支持！",
    "content" : "<p>\r\n\t<span style=\"font-size:1...",
    "writer" : "erick",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 23,
    "title" : "清华同方显示器的报价，型号AW1920TS",
    "content" : "<p>\r\n\twww.baidu.com</p>\r\n<p>\r\n...",
    "writer" : "bimy",
    "writeDate" : "2016-06-30",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 24,
    "title" : "明天有雨吗？",
    "content" : "<p>\r\n\t天气预报说有雨，你们说会下吗</p>\r\n",
    "writer" : "郭燕",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 25,
    "title" : "苹果手机壳哪有卖的？",
    "content" : "",
    "writer" : "uidn",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 26,
    "title" : "今天下雪吗？",
    "content" : "<p>\r\n\t下雪？</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-01",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 27,
    "title" : "今天谁带U盘了？",
    "content" : "<p>\r\n\t借我用一下。谢谢！</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-02",
    "count" : 1,
    "reverts" : null
  } ]
}
2019-07-24 22:00:43,623 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news WHERE newsId = ? 
2019-07-24 22:00:43,623 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 2(Integer)
2019-07-24 22:00:43,628 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 22:00:50,741 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news 
2019-07-24 22:00:50,743 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 22:00:50,748 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 18
2019-07-24 22:00:50,751 DEBUG (NewsController.java:33)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 1,
    "title" : "创建新项目",
    "content" : "新闻内容",
    "writeDate" : 1466784000000
  }, {
    "newsId" : 2,
    "title" : "索尼位55降价送卡",
    "content" : "新闻内容3",
    "writeDate" : -30364761600000
  }, {
    "newsId" : 3,
    "title" : "理光b5不到二千",
    "content" : "你好",
    "writeDate" : 1191513600000
  }, {
    "newsId" : 5,
    "title" : "单反与镜头组合",
    "content" : null,
    "writeDate" : 1191369600000
  }, {
    "newsId" : 15,
    "title" : "百度将开拓美国和欧盟市场",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 16,
    "title" : "Uber CEO和马云交好",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 22,
    "title" : "今日早报",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 23,
    "title" : "高考查分被马云占了先机",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 24,
    "title" : "看完这个，你还想做微商吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 25,
    "title" : "农村电商只能成为空谈?",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 26,
    "title" : "上半年这些行业大爆炸",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 27,
    "title" : "阿里巴巴最为窘迫的四件事",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 28,
    "title" : "高管却离开了",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 30,
    "title" : "支付宝余额使用将受限",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 31,
    "title" : "国内垂直B2B电商平台TOP30",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 33,
    "title" : "谷歌要重新进入中国市场了吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 34,
    "title" : "今天",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 35,
    "title" : "庆十一商品促销11111",
    "content" : "222222",
    "writeDate" : 1562256000000
  } ]
}
2019-07-24 22:00:55,230 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news WHERE newsId = ? 
2019-07-24 22:00:55,231 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 23(Integer)
2019-07-24 22:00:55,233 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 22:00:57,949 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news 
2019-07-24 22:00:57,951 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 22:00:57,954 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 18
2019-07-24 22:00:57,956 DEBUG (NewsController.java:33)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 1,
    "title" : "创建新项目",
    "content" : "新闻内容",
    "writeDate" : 1466784000000
  }, {
    "newsId" : 2,
    "title" : "索尼位55降价送卡",
    "content" : "新闻内容3",
    "writeDate" : -30364761600000
  }, {
    "newsId" : 3,
    "title" : "理光b5不到二千",
    "content" : "你好",
    "writeDate" : 1191513600000
  }, {
    "newsId" : 5,
    "title" : "单反与镜头组合",
    "content" : null,
    "writeDate" : 1191369600000
  }, {
    "newsId" : 15,
    "title" : "百度将开拓美国和欧盟市场",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 16,
    "title" : "Uber CEO和马云交好",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 22,
    "title" : "今日早报",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 23,
    "title" : "高考查分被马云占了先机",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 24,
    "title" : "看完这个，你还想做微商吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 25,
    "title" : "农村电商只能成为空谈?",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 26,
    "title" : "上半年这些行业大爆炸",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 27,
    "title" : "阿里巴巴最为窘迫的四件事",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 28,
    "title" : "高管却离开了",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 30,
    "title" : "支付宝余额使用将受限",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 31,
    "title" : "国内垂直B2B电商平台TOP30",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 33,
    "title" : "谷歌要重新进入中国市场了吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 34,
    "title" : "今天",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 35,
    "title" : "庆十一商品促销11111",
    "content" : "222222",
    "writeDate" : 1562256000000
  } ]
}
2019-07-24 22:01:05,640 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message; UPDATE message SET message.`count`=(SELECT COUNT(*) FROM revert WHERE message.`messageID`=revert.`messageID`); 
2019-07-24 22:01:05,641 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 22:01:05,651 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 22:01:05,652 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 12
2019-07-24 22:01:05,653 DEBUG (MessageController.java:37)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 16,
    "title" : "今天有雷阵雨吗？",
    "content" : "今天到底有没有雷阵雨？？？",
    "writer" : "guest",
    "writeDate" : "2016-06-30",
    "count" : 2,
    "reverts" : null
  }, {
    "messageId" : 17,
    "title" : "中午吃什么？",
    "content" : "土豆红烧肉？还是糖醋里脊？",
    "writer" : "zhangsan",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 18,
    "title" : "今天装空调了！",
    "content" : "O(∩_∩)O哈哈~",
    "writer" : "quit",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 19,
    "title" : "众创梦工厂地址？",
    "content" : "求地址？",
    "writer" : "uret",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 20,
    "title" : "清华同方显示器价格？",
    "content" : "型号为：AW1920TS",
    "writer" : "robot",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 21,
    "title" : "你的开机速度是多少？",
    "content" : "晒晒你的电脑的开机速度吧~~~",
    "writer" : "honme",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 22,
    "title" : "谷歌浏览器支持富文本，IE不支持！",
    "content" : "<p>\r\n\t<span style=\"font-size:1...",
    "writer" : "erick",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 23,
    "title" : "清华同方显示器的报价，型号AW1920TS",
    "content" : "<p>\r\n\twww.baidu.com</p>\r\n<p>\r\n...",
    "writer" : "bimy",
    "writeDate" : "2016-06-30",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 24,
    "title" : "明天有雨吗？",
    "content" : "<p>\r\n\t天气预报说有雨，你们说会下吗</p>\r\n",
    "writer" : "郭燕",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 25,
    "title" : "苹果手机壳哪有卖的？",
    "content" : "",
    "writer" : "uidn",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 26,
    "title" : "今天下雪吗？",
    "content" : "<p>\r\n\t下雪？</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-01",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 27,
    "title" : "今天谁带U盘了？",
    "content" : "<p>\r\n\t借我用一下。谢谢！</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-02",
    "count" : 1,
    "reverts" : null
  } ]
}
2019-07-24 22:02:11,903 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message; UPDATE message SET message.`count`=(SELECT COUNT(*) FROM revert WHERE message.`messageID`=revert.`messageID`); 
2019-07-24 22:02:11,906 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 22:02:11,917 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 22:02:11,917 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 12
2019-07-24 22:02:11,921 DEBUG (MessageController.java:37)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 16,
    "title" : "今天有雷阵雨吗？",
    "content" : "今天到底有没有雷阵雨？？？",
    "writer" : "guest",
    "writeDate" : "2016-06-30",
    "count" : 2,
    "reverts" : null
  }, {
    "messageId" : 17,
    "title" : "中午吃什么？",
    "content" : "土豆红烧肉？还是糖醋里脊？",
    "writer" : "zhangsan",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 18,
    "title" : "今天装空调了！",
    "content" : "O(∩_∩)O哈哈~",
    "writer" : "quit",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 19,
    "title" : "众创梦工厂地址？",
    "content" : "求地址？",
    "writer" : "uret",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 20,
    "title" : "清华同方显示器价格？",
    "content" : "型号为：AW1920TS",
    "writer" : "robot",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 21,
    "title" : "你的开机速度是多少？",
    "content" : "晒晒你的电脑的开机速度吧~~~",
    "writer" : "honme",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 22,
    "title" : "谷歌浏览器支持富文本，IE不支持！",
    "content" : "<p>\r\n\t<span style=\"font-size:1...",
    "writer" : "erick",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 23,
    "title" : "清华同方显示器的报价，型号AW1920TS",
    "content" : "<p>\r\n\twww.baidu.com</p>\r\n<p>\r\n...",
    "writer" : "bimy",
    "writeDate" : "2016-06-30",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 24,
    "title" : "明天有雨吗？",
    "content" : "<p>\r\n\t天气预报说有雨，你们说会下吗</p>\r\n",
    "writer" : "郭燕",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 25,
    "title" : "苹果手机壳哪有卖的？",
    "content" : "",
    "writer" : "uidn",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 26,
    "title" : "今天下雪吗？",
    "content" : "<p>\r\n\t下雪？</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-01",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 27,
    "title" : "今天谁带U盘了？",
    "content" : "<p>\r\n\t借我用一下。谢谢！</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-02",
    "count" : 1,
    "reverts" : null
  } ]
}
2019-07-24 22:04:17,570 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message; UPDATE message SET message.`count`=(SELECT COUNT(*) FROM revert WHERE message.`messageID`=revert.`messageID`); 
2019-07-24 22:04:17,586 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 22:04:17,698 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 22:04:17,698 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 12
2019-07-24 22:04:17,703 DEBUG (MessageController.java:37)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 16,
    "title" : "今天有雷阵雨吗？",
    "content" : "今天到底有没有雷阵雨？？？",
    "writer" : "guest",
    "writeDate" : "2016-06-30",
    "count" : 2,
    "reverts" : null
  }, {
    "messageId" : 17,
    "title" : "中午吃什么？",
    "content" : "土豆红烧肉？还是糖醋里脊？",
    "writer" : "zhangsan",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 18,
    "title" : "今天装空调了！",
    "content" : "O(∩_∩)O哈哈~",
    "writer" : "quit",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 19,
    "title" : "众创梦工厂地址？",
    "content" : "求地址？",
    "writer" : "uret",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 20,
    "title" : "清华同方显示器价格？",
    "content" : "型号为：AW1920TS",
    "writer" : "robot",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 21,
    "title" : "你的开机速度是多少？",
    "content" : "晒晒你的电脑的开机速度吧~~~",
    "writer" : "honme",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 22,
    "title" : "谷歌浏览器支持富文本，IE不支持！",
    "content" : "<p>\r\n\t<span style=\"font-size:1...",
    "writer" : "erick",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 23,
    "title" : "清华同方显示器的报价，型号AW1920TS",
    "content" : "<p>\r\n\twww.baidu.com</p>\r\n<p>\r\n...",
    "writer" : "bimy",
    "writeDate" : "2016-06-30",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 24,
    "title" : "明天有雨吗？",
    "content" : "<p>\r\n\t天气预报说有雨，你们说会下吗</p>\r\n",
    "writer" : "郭燕",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 25,
    "title" : "苹果手机壳哪有卖的？",
    "content" : "",
    "writer" : "uidn",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 26,
    "title" : "今天下雪吗？",
    "content" : "<p>\r\n\t下雪？</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-01",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 27,
    "title" : "今天谁带U盘了？",
    "content" : "<p>\r\n\t借我用一下。谢谢！</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-02",
    "count" : 1,
    "reverts" : null
  } ]
}
2019-07-24 22:05:10,632 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message; UPDATE message SET message.`count`=(SELECT COUNT(*) FROM revert WHERE message.`messageID`=revert.`messageID`); 
2019-07-24 22:05:10,632 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 22:05:10,644 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 22:05:10,648 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 12
2019-07-24 22:05:10,648 DEBUG (MessageController.java:37)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 16,
    "title" : "今天有雷阵雨吗？",
    "content" : "今天到底有没有雷阵雨？？？",
    "writer" : "guest",
    "writeDate" : "2016-06-30",
    "count" : 2,
    "reverts" : null
  }, {
    "messageId" : 17,
    "title" : "中午吃什么？",
    "content" : "土豆红烧肉？还是糖醋里脊？",
    "writer" : "zhangsan",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 18,
    "title" : "今天装空调了！",
    "content" : "O(∩_∩)O哈哈~",
    "writer" : "quit",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 19,
    "title" : "众创梦工厂地址？",
    "content" : "求地址？",
    "writer" : "uret",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 20,
    "title" : "清华同方显示器价格？",
    "content" : "型号为：AW1920TS",
    "writer" : "robot",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 21,
    "title" : "你的开机速度是多少？",
    "content" : "晒晒你的电脑的开机速度吧~~~",
    "writer" : "honme",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 22,
    "title" : "谷歌浏览器支持富文本，IE不支持！",
    "content" : "<p>\r\n\t<span style=\"font-size:1...",
    "writer" : "erick",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 23,
    "title" : "清华同方显示器的报价，型号AW1920TS",
    "content" : "<p>\r\n\twww.baidu.com</p>\r\n<p>\r\n...",
    "writer" : "bimy",
    "writeDate" : "2016-06-30",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 24,
    "title" : "明天有雨吗？",
    "content" : "<p>\r\n\t天气预报说有雨，你们说会下吗</p>\r\n",
    "writer" : "郭燕",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 25,
    "title" : "苹果手机壳哪有卖的？",
    "content" : "",
    "writer" : "uidn",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 26,
    "title" : "今天下雪吗？",
    "content" : "<p>\r\n\t下雪？</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-01",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 27,
    "title" : "今天谁带U盘了？",
    "content" : "<p>\r\n\t借我用一下。谢谢！</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-02",
    "count" : 1,
    "reverts" : null
  } ]
}
2019-07-24 22:05:11,920 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message; UPDATE message SET message.`count`=(SELECT COUNT(*) FROM revert WHERE message.`messageID`=revert.`messageID`); 
2019-07-24 22:05:11,924 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 22:05:11,932 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 22:05:11,934 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 12
2019-07-24 22:05:11,934 DEBUG (MessageController.java:37)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 16,
    "title" : "今天有雷阵雨吗？",
    "content" : "今天到底有没有雷阵雨？？？",
    "writer" : "guest",
    "writeDate" : "2016-06-30",
    "count" : 2,
    "reverts" : null
  }, {
    "messageId" : 17,
    "title" : "中午吃什么？",
    "content" : "土豆红烧肉？还是糖醋里脊？",
    "writer" : "zhangsan",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 18,
    "title" : "今天装空调了！",
    "content" : "O(∩_∩)O哈哈~",
    "writer" : "quit",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 19,
    "title" : "众创梦工厂地址？",
    "content" : "求地址？",
    "writer" : "uret",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 20,
    "title" : "清华同方显示器价格？",
    "content" : "型号为：AW1920TS",
    "writer" : "robot",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 21,
    "title" : "你的开机速度是多少？",
    "content" : "晒晒你的电脑的开机速度吧~~~",
    "writer" : "honme",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 22,
    "title" : "谷歌浏览器支持富文本，IE不支持！",
    "content" : "<p>\r\n\t<span style=\"font-size:1...",
    "writer" : "erick",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 23,
    "title" : "清华同方显示器的报价，型号AW1920TS",
    "content" : "<p>\r\n\twww.baidu.com</p>\r\n<p>\r\n...",
    "writer" : "bimy",
    "writeDate" : "2016-06-30",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 24,
    "title" : "明天有雨吗？",
    "content" : "<p>\r\n\t天气预报说有雨，你们说会下吗</p>\r\n",
    "writer" : "郭燕",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 25,
    "title" : "苹果手机壳哪有卖的？",
    "content" : "",
    "writer" : "uidn",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 26,
    "title" : "今天下雪吗？",
    "content" : "<p>\r\n\t下雪？</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-01",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 27,
    "title" : "今天谁带U盘了？",
    "content" : "<p>\r\n\t借我用一下。谢谢！</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-02",
    "count" : 1,
    "reverts" : null
  } ]
}
2019-07-24 22:05:15,365 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert r INNER JOIN message m ON r.messageID = m.messageID GROUP BY m.messageID 
2019-07-24 22:05:15,386 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 22:05:15,394 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 10
2019-07-24 22:05:15,394 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 22:05:15,398 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 2(Integer)
2019-07-24 22:05:15,402 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 0
2019-07-24 22:05:15,402 ERROR (BaseController.java:285)- 系统异常:null
java.lang.NullPointerException: null
	at com.zryx.company.service.impl.MessageServiceImpl.getMessageById(MessageServiceImpl.java:32)
	at com.zryx.company.controller.MessageController.getMessageById(MessageController.java:56)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-07-24 22:05:38,484 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert r INNER JOIN message m ON r.messageID = m.messageID GROUP BY m.messageID 
2019-07-24 22:05:38,488 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 22:05:38,492 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 10
2019-07-24 22:05:38,496 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 22:05:38,496 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 2(Integer)
2019-07-24 22:05:38,500 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 0
2019-07-24 22:05:38,502 ERROR (BaseController.java:285)- 系统异常:null
java.lang.NullPointerException: null
	at com.zryx.company.service.impl.MessageServiceImpl.getMessageById(MessageServiceImpl.java:32)
	at com.zryx.company.controller.MessageController.getMessageById(MessageController.java:56)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-07-24 22:05:53,338 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert r INNER JOIN message m ON r.messageID = m.messageID GROUP BY m.messageID 
2019-07-24 22:05:53,338 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 22:05:53,342 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 10
2019-07-24 22:05:53,346 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 22:05:53,346 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 2(Integer)
2019-07-24 22:05:53,346 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 0
2019-07-24 22:05:53,350 ERROR (BaseController.java:285)- 系统异常:null
java.lang.NullPointerException: null
	at com.zryx.company.service.impl.MessageServiceImpl.getMessageById(MessageServiceImpl.java:32)
	at com.zryx.company.controller.MessageController.getMessageById(MessageController.java:56)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-07-24 22:05:55,137 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert r INNER JOIN message m ON r.messageID = m.messageID GROUP BY m.messageID 
2019-07-24 22:05:55,141 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 22:05:55,148 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 10
2019-07-24 22:05:55,152 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 22:05:55,152 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 2(Integer)
2019-07-24 22:05:55,152 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 0
2019-07-24 22:05:55,156 ERROR (BaseController.java:285)- 系统异常:null
java.lang.NullPointerException: null
	at com.zryx.company.service.impl.MessageServiceImpl.getMessageById(MessageServiceImpl.java:32)
	at com.zryx.company.controller.MessageController.getMessageById(MessageController.java:56)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-07-24 22:05:57,517 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert r INNER JOIN message m ON r.messageID = m.messageID GROUP BY m.messageID 
2019-07-24 22:05:57,517 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 22:05:57,521 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 10
2019-07-24 22:05:57,521 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 22:05:57,525 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 2(Integer)
2019-07-24 22:05:57,525 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 0
2019-07-24 22:05:57,529 ERROR (BaseController.java:285)- 系统异常:null
java.lang.NullPointerException: null
	at com.zryx.company.service.impl.MessageServiceImpl.getMessageById(MessageServiceImpl.java:32)
	at com.zryx.company.controller.MessageController.getMessageById(MessageController.java:56)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-07-24 22:05:58,656 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert r INNER JOIN message m ON r.messageID = m.messageID GROUP BY m.messageID 
2019-07-24 22:05:58,656 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 22:05:58,660 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 10
2019-07-24 22:05:58,664 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 22:05:58,664 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 2(Integer)
2019-07-24 22:05:58,668 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 0
2019-07-24 22:05:58,668 ERROR (BaseController.java:285)- 系统异常:null
java.lang.NullPointerException: null
	at com.zryx.company.service.impl.MessageServiceImpl.getMessageById(MessageServiceImpl.java:32)
	at com.zryx.company.controller.MessageController.getMessageById(MessageController.java:56)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-07-24 22:06:03,523 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert r INNER JOIN message m ON r.messageID = m.messageID GROUP BY m.messageID 
2019-07-24 22:06:03,525 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 22:06:03,532 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 10
2019-07-24 22:06:03,533 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 22:06:03,534 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 2(Integer)
2019-07-24 22:06:03,537 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 0
2019-07-24 22:06:03,538 ERROR (BaseController.java:285)- 系统异常:null
java.lang.NullPointerException: null
	at com.zryx.company.service.impl.MessageServiceImpl.getMessageById(MessageServiceImpl.java:32)
	at com.zryx.company.controller.MessageController.getMessageById(MessageController.java:56)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-07-24 22:06:12,597 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert r INNER JOIN message m ON r.messageID = m.messageID GROUP BY m.messageID 
2019-07-24 22:06:12,598 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 22:06:12,601 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 10
2019-07-24 22:06:12,602 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 22:06:12,603 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 2(Integer)
2019-07-24 22:06:12,605 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 0
2019-07-24 22:06:12,607 ERROR (BaseController.java:285)- 系统异常:null
java.lang.NullPointerException: null
	at com.zryx.company.service.impl.MessageServiceImpl.getMessageById(MessageServiceImpl.java:32)
	at com.zryx.company.controller.MessageController.getMessageById(MessageController.java:56)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-07-24 22:06:16,746 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert r INNER JOIN message m ON r.messageID = m.messageID GROUP BY m.messageID 
2019-07-24 22:06:16,750 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 22:06:16,754 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 10
2019-07-24 22:06:16,754 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 22:06:16,754 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 2(Integer)
2019-07-24 22:06:16,759 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 0
2019-07-24 22:06:16,759 ERROR (BaseController.java:285)- 系统异常:null
java.lang.NullPointerException: null
	at com.zryx.company.service.impl.MessageServiceImpl.getMessageById(MessageServiceImpl.java:32)
	at com.zryx.company.controller.MessageController.getMessageById(MessageController.java:56)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-07-24 22:06:19,921 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert r INNER JOIN message m ON r.messageID = m.messageID GROUP BY m.messageID 
2019-07-24 22:06:19,925 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 22:06:19,931 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 10
2019-07-24 22:06:19,931 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 22:06:19,931 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 2(Integer)
2019-07-24 22:06:19,935 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 0
2019-07-24 22:06:19,935 ERROR (BaseController.java:285)- 系统异常:null
java.lang.NullPointerException: null
	at com.zryx.company.service.impl.MessageServiceImpl.getMessageById(MessageServiceImpl.java:32)
	at com.zryx.company.controller.MessageController.getMessageById(MessageController.java:56)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-07-24 22:07:04,442 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert r INNER JOIN message m ON r.messageID = m.messageID GROUP BY m.messageID 
2019-07-24 22:07:04,446 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 22:07:04,450 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 10
2019-07-24 22:07:04,450 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 22:07:04,454 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 2(Integer)
2019-07-24 22:07:04,454 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 0
2019-07-24 22:07:04,458 ERROR (BaseController.java:285)- 系统异常:null
java.lang.NullPointerException: null
	at com.zryx.company.service.impl.MessageServiceImpl.getMessageById(MessageServiceImpl.java:32)
	at com.zryx.company.controller.MessageController.getMessageById(MessageController.java:56)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-07-24 22:07:05,981 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert r INNER JOIN message m ON r.messageID = m.messageID GROUP BY m.messageID 
2019-07-24 22:07:05,985 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 22:07:05,990 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 10
2019-07-24 22:07:05,991 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 22:07:05,992 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 2(Integer)
2019-07-24 22:07:05,992 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 0
2019-07-24 22:07:05,996 ERROR (BaseController.java:285)- 系统异常:null
java.lang.NullPointerException: null
	at com.zryx.company.service.impl.MessageServiceImpl.getMessageById(MessageServiceImpl.java:32)
	at com.zryx.company.controller.MessageController.getMessageById(MessageController.java:56)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-07-24 22:07:09,158 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert r INNER JOIN message m ON r.messageID = m.messageID GROUP BY m.messageID 
2019-07-24 22:07:09,163 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 22:07:09,165 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 10
2019-07-24 22:07:09,167 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 22:07:09,168 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 2(Integer)
2019-07-24 22:07:09,168 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 0
2019-07-24 22:07:09,172 ERROR (BaseController.java:285)- 系统异常:null
java.lang.NullPointerException: null
	at com.zryx.company.service.impl.MessageServiceImpl.getMessageById(MessageServiceImpl.java:32)
	at com.zryx.company.controller.MessageController.getMessageById(MessageController.java:56)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-07-24 22:07:22,733 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert r INNER JOIN message m ON r.messageID = m.messageID GROUP BY m.messageID 
2019-07-24 22:07:22,733 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 22:07:22,736 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 10
2019-07-24 22:07:22,739 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 22:07:22,739 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 2(Integer)
2019-07-24 22:07:22,739 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 0
2019-07-24 22:07:22,743 ERROR (BaseController.java:285)- 系统异常:null
java.lang.NullPointerException: null
	at com.zryx.company.service.impl.MessageServiceImpl.getMessageById(MessageServiceImpl.java:32)
	at com.zryx.company.controller.MessageController.getMessageById(MessageController.java:56)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-07-24 22:07:25,320 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert r INNER JOIN message m ON r.messageID = m.messageID GROUP BY m.messageID 
2019-07-24 22:07:25,322 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 22:07:25,324 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 10
2019-07-24 22:07:25,328 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 22:07:25,332 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 2(Integer)
2019-07-24 22:07:25,332 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 0
2019-07-24 22:07:25,336 ERROR (BaseController.java:285)- 系统异常:null
java.lang.NullPointerException: null
	at com.zryx.company.service.impl.MessageServiceImpl.getMessageById(MessageServiceImpl.java:32)
	at com.zryx.company.controller.MessageController.getMessageById(MessageController.java:56)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-07-24 22:07:27,865 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert r INNER JOIN message m ON r.messageID = m.messageID GROUP BY m.messageID 
2019-07-24 22:07:27,866 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 22:07:27,869 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 10
2019-07-24 22:07:27,870 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 22:07:27,871 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 2(Integer)
2019-07-24 22:07:27,872 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 0
2019-07-24 22:07:27,877 ERROR (BaseController.java:285)- 系统异常:null
java.lang.NullPointerException: null
	at com.zryx.company.service.impl.MessageServiceImpl.getMessageById(MessageServiceImpl.java:32)
	at com.zryx.company.controller.MessageController.getMessageById(MessageController.java:56)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-07-24 22:09:27,051 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news WHERE newsId = ? 
2019-07-24 22:09:27,056 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 22:09:27,059 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 22:09:29,995 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news 
2019-07-24 22:09:29,999 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 22:09:30,003 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 18
2019-07-24 22:09:30,003 DEBUG (NewsController.java:33)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 1,
    "title" : "创建新项目",
    "content" : "新闻内容",
    "writeDate" : 1466784000000
  }, {
    "newsId" : 2,
    "title" : "索尼位55降价送卡",
    "content" : "新闻内容3",
    "writeDate" : -30364761600000
  }, {
    "newsId" : 3,
    "title" : "理光b5不到二千",
    "content" : "你好",
    "writeDate" : 1191513600000
  }, {
    "newsId" : 5,
    "title" : "单反与镜头组合",
    "content" : null,
    "writeDate" : 1191369600000
  }, {
    "newsId" : 15,
    "title" : "百度将开拓美国和欧盟市场",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 16,
    "title" : "Uber CEO和马云交好",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 22,
    "title" : "今日早报",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 23,
    "title" : "高考查分被马云占了先机",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 24,
    "title" : "看完这个，你还想做微商吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 25,
    "title" : "农村电商只能成为空谈?",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 26,
    "title" : "上半年这些行业大爆炸",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 27,
    "title" : "阿里巴巴最为窘迫的四件事",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 28,
    "title" : "高管却离开了",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 30,
    "title" : "支付宝余额使用将受限",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 31,
    "title" : "国内垂直B2B电商平台TOP30",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 33,
    "title" : "谷歌要重新进入中国市场了吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 34,
    "title" : "今天",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 35,
    "title" : "庆十一商品促销11111",
    "content" : "222222",
    "writeDate" : 1562256000000
  } ]
}
2019-07-24 22:09:35,341 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news WHERE newsId = ? 
2019-07-24 22:09:35,342 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 22:09:35,342 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 22:09:37,651 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news 
2019-07-24 22:09:37,652 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 22:09:37,655 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 18
2019-07-24 22:09:37,657 DEBUG (NewsController.java:33)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 1,
    "title" : "创建新项目",
    "content" : "新闻内容",
    "writeDate" : 1466784000000
  }, {
    "newsId" : 2,
    "title" : "索尼位55降价送卡",
    "content" : "新闻内容3",
    "writeDate" : -30364761600000
  }, {
    "newsId" : 3,
    "title" : "理光b5不到二千",
    "content" : "你好",
    "writeDate" : 1191513600000
  }, {
    "newsId" : 5,
    "title" : "单反与镜头组合",
    "content" : null,
    "writeDate" : 1191369600000
  }, {
    "newsId" : 15,
    "title" : "百度将开拓美国和欧盟市场",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 16,
    "title" : "Uber CEO和马云交好",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 22,
    "title" : "今日早报",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 23,
    "title" : "高考查分被马云占了先机",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 24,
    "title" : "看完这个，你还想做微商吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 25,
    "title" : "农村电商只能成为空谈?",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 26,
    "title" : "上半年这些行业大爆炸",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 27,
    "title" : "阿里巴巴最为窘迫的四件事",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 28,
    "title" : "高管却离开了",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 30,
    "title" : "支付宝余额使用将受限",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 31,
    "title" : "国内垂直B2B电商平台TOP30",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 33,
    "title" : "谷歌要重新进入中国市场了吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 34,
    "title" : "今天",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 35,
    "title" : "庆十一商品促销11111",
    "content" : "222222",
    "writeDate" : 1562256000000
  } ]
}
2019-07-24 22:11:29,622 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert r INNER JOIN message m ON r.messageID = m.messageID GROUP BY m.messageID 
2019-07-24 22:11:29,622 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 22:11:29,626 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 10
2019-07-24 22:11:29,626 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 22:11:29,630 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 2(Integer)
2019-07-24 22:11:29,630 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 0
2019-07-24 22:11:29,634 ERROR (BaseController.java:285)- 系统异常:null
java.lang.NullPointerException: null
	at com.zryx.company.service.impl.MessageServiceImpl.getMessageById(MessageServiceImpl.java:32)
	at com.zryx.company.controller.MessageController.getMessageById(MessageController.java:56)
	at sun.reflect.GeneratedMethodAccessor262.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-07-24 22:11:35,901 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news WHERE newsId = ? 
2019-07-24 22:11:35,902 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 22:11:35,905 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 22:11:39,678 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message; UPDATE message SET message.`count`=(SELECT COUNT(*) FROM revert WHERE message.`messageID`=revert.`messageID`); 
2019-07-24 22:11:39,679 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 22:11:39,687 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 22:11:39,689 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 12
2019-07-24 22:11:39,689 DEBUG (MessageController.java:37)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 16,
    "title" : "今天有雷阵雨吗？",
    "content" : "今天到底有没有雷阵雨？？？",
    "writer" : "guest",
    "writeDate" : "2016-06-30",
    "count" : 2,
    "reverts" : null
  }, {
    "messageId" : 17,
    "title" : "中午吃什么？",
    "content" : "土豆红烧肉？还是糖醋里脊？",
    "writer" : "zhangsan",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 18,
    "title" : "今天装空调了！",
    "content" : "O(∩_∩)O哈哈~",
    "writer" : "quit",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 19,
    "title" : "众创梦工厂地址？",
    "content" : "求地址？",
    "writer" : "uret",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 20,
    "title" : "清华同方显示器价格？",
    "content" : "型号为：AW1920TS",
    "writer" : "robot",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 21,
    "title" : "你的开机速度是多少？",
    "content" : "晒晒你的电脑的开机速度吧~~~",
    "writer" : "honme",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 22,
    "title" : "谷歌浏览器支持富文本，IE不支持！",
    "content" : "<p>\r\n\t<span style=\"font-size:1...",
    "writer" : "erick",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 23,
    "title" : "清华同方显示器的报价，型号AW1920TS",
    "content" : "<p>\r\n\twww.baidu.com</p>\r\n<p>\r\n...",
    "writer" : "bimy",
    "writeDate" : "2016-06-30",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 24,
    "title" : "明天有雨吗？",
    "content" : "<p>\r\n\t天气预报说有雨，你们说会下吗</p>\r\n",
    "writer" : "郭燕",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 25,
    "title" : "苹果手机壳哪有卖的？",
    "content" : "",
    "writer" : "uidn",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 26,
    "title" : "今天下雪吗？",
    "content" : "<p>\r\n\t下雪？</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-01",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 27,
    "title" : "今天谁带U盘了？",
    "content" : "<p>\r\n\t借我用一下。谢谢！</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-02",
    "count" : 1,
    "reverts" : null
  } ]
}
2019-07-24 22:11:41,666 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert r INNER JOIN message m ON r.messageID = m.messageID GROUP BY m.messageID 
2019-07-24 22:11:41,669 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 22:11:41,672 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 10
2019-07-24 22:11:41,673 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from users where userName=? 
2019-07-24 22:11:41,675 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 2(Integer)
2019-07-24 22:11:41,676 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 0
2019-07-24 22:11:41,678 ERROR (BaseController.java:285)- 系统异常:null
java.lang.NullPointerException: null
	at com.zryx.company.service.impl.MessageServiceImpl.getMessageById(MessageServiceImpl.java:32)
	at com.zryx.company.controller.MessageController.getMessageById(MessageController.java:56)
	at sun.reflect.GeneratedMethodAccessor262.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-07-24 22:11:45,557 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message; UPDATE message SET message.`count`=(SELECT COUNT(*) FROM revert WHERE message.`messageID`=revert.`messageID`); 
2019-07-24 22:11:45,559 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 22:11:45,566 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 22:11:45,568 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 12
2019-07-24 22:11:45,569 DEBUG (MessageController.java:37)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 16,
    "title" : "今天有雷阵雨吗？",
    "content" : "今天到底有没有雷阵雨？？？",
    "writer" : "guest",
    "writeDate" : "2016-06-30",
    "count" : 2,
    "reverts" : null
  }, {
    "messageId" : 17,
    "title" : "中午吃什么？",
    "content" : "土豆红烧肉？还是糖醋里脊？",
    "writer" : "zhangsan",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 18,
    "title" : "今天装空调了！",
    "content" : "O(∩_∩)O哈哈~",
    "writer" : "quit",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 19,
    "title" : "众创梦工厂地址？",
    "content" : "求地址？",
    "writer" : "uret",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 20,
    "title" : "清华同方显示器价格？",
    "content" : "型号为：AW1920TS",
    "writer" : "robot",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 21,
    "title" : "你的开机速度是多少？",
    "content" : "晒晒你的电脑的开机速度吧~~~",
    "writer" : "honme",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 22,
    "title" : "谷歌浏览器支持富文本，IE不支持！",
    "content" : "<p>\r\n\t<span style=\"font-size:1...",
    "writer" : "erick",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 23,
    "title" : "清华同方显示器的报价，型号AW1920TS",
    "content" : "<p>\r\n\twww.baidu.com</p>\r\n<p>\r\n...",
    "writer" : "bimy",
    "writeDate" : "2016-06-30",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 24,
    "title" : "明天有雨吗？",
    "content" : "<p>\r\n\t天气预报说有雨，你们说会下吗</p>\r\n",
    "writer" : "郭燕",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 25,
    "title" : "苹果手机壳哪有卖的？",
    "content" : "",
    "writer" : "uidn",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 26,
    "title" : "今天下雪吗？",
    "content" : "<p>\r\n\t下雪？</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-01",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 27,
    "title" : "今天谁带U盘了？",
    "content" : "<p>\r\n\t借我用一下。谢谢！</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-02",
    "count" : 1,
    "reverts" : null
  } ]
}
2019-07-24 22:12:37,091 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message; UPDATE message SET message.`count`=(SELECT COUNT(*) FROM revert WHERE message.`messageID`=revert.`messageID`); 
2019-07-24 22:12:37,093 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 22:12:37,105 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 22:12:37,106 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 12
2019-07-24 22:12:37,107 DEBUG (MessageController.java:37)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 16,
    "title" : "今天有雷阵雨吗？",
    "content" : "今天到底有没有雷阵雨？？？",
    "writer" : "guest",
    "writeDate" : "2016-06-30",
    "count" : 2,
    "reverts" : null
  }, {
    "messageId" : 17,
    "title" : "中午吃什么？",
    "content" : "土豆红烧肉？还是糖醋里脊？",
    "writer" : "zhangsan",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 18,
    "title" : "今天装空调了！",
    "content" : "O(∩_∩)O哈哈~",
    "writer" : "quit",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 19,
    "title" : "众创梦工厂地址？",
    "content" : "求地址？",
    "writer" : "uret",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 20,
    "title" : "清华同方显示器价格？",
    "content" : "型号为：AW1920TS",
    "writer" : "robot",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 21,
    "title" : "你的开机速度是多少？",
    "content" : "晒晒你的电脑的开机速度吧~~~",
    "writer" : "honme",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 22,
    "title" : "谷歌浏览器支持富文本，IE不支持！",
    "content" : "<p>\r\n\t<span style=\"font-size:1...",
    "writer" : "erick",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 23,
    "title" : "清华同方显示器的报价，型号AW1920TS",
    "content" : "<p>\r\n\twww.baidu.com</p>\r\n<p>\r\n...",
    "writer" : "bimy",
    "writeDate" : "2016-06-30",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 24,
    "title" : "明天有雨吗？",
    "content" : "<p>\r\n\t天气预报说有雨，你们说会下吗</p>\r\n",
    "writer" : "郭燕",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 25,
    "title" : "苹果手机壳哪有卖的？",
    "content" : "",
    "writer" : "uidn",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 26,
    "title" : "今天下雪吗？",
    "content" : "<p>\r\n\t下雪？</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-01",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 27,
    "title" : "今天谁带U盘了？",
    "content" : "<p>\r\n\t借我用一下。谢谢！</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-02",
    "count" : 1,
    "reverts" : null
  } ]
}
2019-07-24 22:14:10,177 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message; UPDATE message SET message.`count`=(SELECT COUNT(*) FROM revert WHERE message.`messageID`=revert.`messageID`); 
2019-07-24 22:14:10,177 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 22:14:10,185 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 22:14:10,185 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 12
2019-07-24 22:14:10,185 DEBUG (MessageController.java:37)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 16,
    "title" : "今天有雷阵雨吗？",
    "content" : "今天到底有没有雷阵雨？？？",
    "writer" : "guest",
    "writeDate" : "2016-06-30",
    "count" : 2,
    "reverts" : null
  }, {
    "messageId" : 17,
    "title" : "中午吃什么？",
    "content" : "土豆红烧肉？还是糖醋里脊？",
    "writer" : "zhangsan",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 18,
    "title" : "今天装空调了！",
    "content" : "O(∩_∩)O哈哈~",
    "writer" : "quit",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 19,
    "title" : "众创梦工厂地址？",
    "content" : "求地址？",
    "writer" : "uret",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 20,
    "title" : "清华同方显示器价格？",
    "content" : "型号为：AW1920TS",
    "writer" : "robot",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 21,
    "title" : "你的开机速度是多少？",
    "content" : "晒晒你的电脑的开机速度吧~~~",
    "writer" : "honme",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 22,
    "title" : "谷歌浏览器支持富文本，IE不支持！",
    "content" : "<p>\r\n\t<span style=\"font-size:1...",
    "writer" : "erick",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 23,
    "title" : "清华同方显示器的报价，型号AW1920TS",
    "content" : "<p>\r\n\twww.baidu.com</p>\r\n<p>\r\n...",
    "writer" : "bimy",
    "writeDate" : "2016-06-30",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 24,
    "title" : "明天有雨吗？",
    "content" : "<p>\r\n\t天气预报说有雨，你们说会下吗</p>\r\n",
    "writer" : "郭燕",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 25,
    "title" : "苹果手机壳哪有卖的？",
    "content" : "",
    "writer" : "uidn",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 26,
    "title" : "今天下雪吗？",
    "content" : "<p>\r\n\t下雪？</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-01",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 27,
    "title" : "今天谁带U盘了？",
    "content" : "<p>\r\n\t借我用一下。谢谢！</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-02",
    "count" : 1,
    "reverts" : null
  } ]
}
2019-07-24 22:14:43,621 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message; UPDATE message SET message.`count`=(SELECT COUNT(*) FROM revert WHERE message.`messageID`=revert.`messageID`); 
2019-07-24 22:14:43,621 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 22:14:43,629 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 22:14:43,629 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 12
2019-07-24 22:14:43,633 DEBUG (MessageController.java:37)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 16,
    "title" : "今天有雷阵雨吗？",
    "content" : "今天到底有没有雷阵雨？？？",
    "writer" : "guest",
    "writeDate" : "2016-06-30",
    "count" : 2,
    "reverts" : null
  }, {
    "messageId" : 17,
    "title" : "中午吃什么？",
    "content" : "土豆红烧肉？还是糖醋里脊？",
    "writer" : "zhangsan",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 18,
    "title" : "今天装空调了！",
    "content" : "O(∩_∩)O哈哈~",
    "writer" : "quit",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 19,
    "title" : "众创梦工厂地址？",
    "content" : "求地址？",
    "writer" : "uret",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 20,
    "title" : "清华同方显示器价格？",
    "content" : "型号为：AW1920TS",
    "writer" : "robot",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 21,
    "title" : "你的开机速度是多少？",
    "content" : "晒晒你的电脑的开机速度吧~~~",
    "writer" : "honme",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 22,
    "title" : "谷歌浏览器支持富文本，IE不支持！",
    "content" : "<p>\r\n\t<span style=\"font-size:1...",
    "writer" : "erick",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 23,
    "title" : "清华同方显示器的报价，型号AW1920TS",
    "content" : "<p>\r\n\twww.baidu.com</p>\r\n<p>\r\n...",
    "writer" : "bimy",
    "writeDate" : "2016-06-30",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 24,
    "title" : "明天有雨吗？",
    "content" : "<p>\r\n\t天气预报说有雨，你们说会下吗</p>\r\n",
    "writer" : "郭燕",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 25,
    "title" : "苹果手机壳哪有卖的？",
    "content" : "",
    "writer" : "uidn",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 26,
    "title" : "今天下雪吗？",
    "content" : "<p>\r\n\t下雪？</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-01",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 27,
    "title" : "今天谁带U盘了？",
    "content" : "<p>\r\n\t借我用一下。谢谢！</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-02",
    "count" : 1,
    "reverts" : null
  } ]
}
2019-07-24 22:14:47,564 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message; UPDATE message SET message.`count`=(SELECT COUNT(*) FROM revert WHERE message.`messageID`=revert.`messageID`); 
2019-07-24 22:14:47,569 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 22:14:47,586 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 22:14:47,588 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 12
2019-07-24 22:14:47,588 DEBUG (MessageController.java:37)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 16,
    "title" : "今天有雷阵雨吗？",
    "content" : "今天到底有没有雷阵雨？？？",
    "writer" : "guest",
    "writeDate" : "2016-06-30",
    "count" : 2,
    "reverts" : null
  }, {
    "messageId" : 17,
    "title" : "中午吃什么？",
    "content" : "土豆红烧肉？还是糖醋里脊？",
    "writer" : "zhangsan",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 18,
    "title" : "今天装空调了！",
    "content" : "O(∩_∩)O哈哈~",
    "writer" : "quit",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 19,
    "title" : "众创梦工厂地址？",
    "content" : "求地址？",
    "writer" : "uret",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 20,
    "title" : "清华同方显示器价格？",
    "content" : "型号为：AW1920TS",
    "writer" : "robot",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 21,
    "title" : "你的开机速度是多少？",
    "content" : "晒晒你的电脑的开机速度吧~~~",
    "writer" : "honme",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 22,
    "title" : "谷歌浏览器支持富文本，IE不支持！",
    "content" : "<p>\r\n\t<span style=\"font-size:1...",
    "writer" : "erick",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 23,
    "title" : "清华同方显示器的报价，型号AW1920TS",
    "content" : "<p>\r\n\twww.baidu.com</p>\r\n<p>\r\n...",
    "writer" : "bimy",
    "writeDate" : "2016-06-30",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 24,
    "title" : "明天有雨吗？",
    "content" : "<p>\r\n\t天气预报说有雨，你们说会下吗</p>\r\n",
    "writer" : "郭燕",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 25,
    "title" : "苹果手机壳哪有卖的？",
    "content" : "",
    "writer" : "uidn",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 26,
    "title" : "今天下雪吗？",
    "content" : "<p>\r\n\t下雪？</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-01",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 27,
    "title" : "今天谁带U盘了？",
    "content" : "<p>\r\n\t借我用一下。谢谢！</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-02",
    "count" : 1,
    "reverts" : null
  } ]
}
2019-07-24 22:14:49,567 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message; UPDATE message SET message.`count`=(SELECT COUNT(*) FROM revert WHERE message.`messageID`=revert.`messageID`); 
2019-07-24 22:14:49,571 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 22:14:49,581 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 22:14:49,581 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 12
2019-07-24 22:14:49,581 DEBUG (MessageController.java:37)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 16,
    "title" : "今天有雷阵雨吗？",
    "content" : "今天到底有没有雷阵雨？？？",
    "writer" : "guest",
    "writeDate" : "2016-06-30",
    "count" : 2,
    "reverts" : null
  }, {
    "messageId" : 17,
    "title" : "中午吃什么？",
    "content" : "土豆红烧肉？还是糖醋里脊？",
    "writer" : "zhangsan",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 18,
    "title" : "今天装空调了！",
    "content" : "O(∩_∩)O哈哈~",
    "writer" : "quit",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 19,
    "title" : "众创梦工厂地址？",
    "content" : "求地址？",
    "writer" : "uret",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 20,
    "title" : "清华同方显示器价格？",
    "content" : "型号为：AW1920TS",
    "writer" : "robot",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 21,
    "title" : "你的开机速度是多少？",
    "content" : "晒晒你的电脑的开机速度吧~~~",
    "writer" : "honme",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 22,
    "title" : "谷歌浏览器支持富文本，IE不支持！",
    "content" : "<p>\r\n\t<span style=\"font-size:1...",
    "writer" : "erick",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 23,
    "title" : "清华同方显示器的报价，型号AW1920TS",
    "content" : "<p>\r\n\twww.baidu.com</p>\r\n<p>\r\n...",
    "writer" : "bimy",
    "writeDate" : "2016-06-30",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 24,
    "title" : "明天有雨吗？",
    "content" : "<p>\r\n\t天气预报说有雨，你们说会下吗</p>\r\n",
    "writer" : "郭燕",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 25,
    "title" : "苹果手机壳哪有卖的？",
    "content" : "",
    "writer" : "uidn",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 26,
    "title" : "今天下雪吗？",
    "content" : "<p>\r\n\t下雪？</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-01",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 27,
    "title" : "今天谁带U盘了？",
    "content" : "<p>\r\n\t借我用一下。谢谢！</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-02",
    "count" : 1,
    "reverts" : null
  } ]
}
2019-07-24 22:15:12,768 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message; UPDATE message SET message.`count`=(SELECT COUNT(*) FROM revert WHERE message.`messageID`=revert.`messageID`); 
2019-07-24 22:15:12,768 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 22:15:12,784 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 22:15:12,784 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 12
2019-07-24 22:15:12,788 DEBUG (MessageController.java:37)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 16,
    "title" : "今天有雷阵雨吗？",
    "content" : "今天到底有没有雷阵雨？？？",
    "writer" : "guest",
    "writeDate" : "2016-06-30",
    "count" : 2,
    "reverts" : null
  }, {
    "messageId" : 17,
    "title" : "中午吃什么？",
    "content" : "土豆红烧肉？还是糖醋里脊？",
    "writer" : "zhangsan",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 18,
    "title" : "今天装空调了！",
    "content" : "O(∩_∩)O哈哈~",
    "writer" : "quit",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 19,
    "title" : "众创梦工厂地址？",
    "content" : "求地址？",
    "writer" : "uret",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 20,
    "title" : "清华同方显示器价格？",
    "content" : "型号为：AW1920TS",
    "writer" : "robot",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 21,
    "title" : "你的开机速度是多少？",
    "content" : "晒晒你的电脑的开机速度吧~~~",
    "writer" : "honme",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 22,
    "title" : "谷歌浏览器支持富文本，IE不支持！",
    "content" : "<p>\r\n\t<span style=\"font-size:1...",
    "writer" : "erick",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 23,
    "title" : "清华同方显示器的报价，型号AW1920TS",
    "content" : "<p>\r\n\twww.baidu.com</p>\r\n<p>\r\n...",
    "writer" : "bimy",
    "writeDate" : "2016-06-30",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 24,
    "title" : "明天有雨吗？",
    "content" : "<p>\r\n\t天气预报说有雨，你们说会下吗</p>\r\n",
    "writer" : "郭燕",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 25,
    "title" : "苹果手机壳哪有卖的？",
    "content" : "",
    "writer" : "uidn",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 26,
    "title" : "今天下雪吗？",
    "content" : "<p>\r\n\t下雪？</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-01",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 27,
    "title" : "今天谁带U盘了？",
    "content" : "<p>\r\n\t借我用一下。谢谢！</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-02",
    "count" : 1,
    "reverts" : null
  } ]
}
2019-07-24 22:15:15,394 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message; UPDATE message SET message.`count`=(SELECT COUNT(*) FROM revert WHERE message.`messageID`=revert.`messageID`); 
2019-07-24 22:15:15,398 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 22:15:15,406 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 22:15:15,406 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 12
2019-07-24 22:15:15,406 DEBUG (MessageController.java:37)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 16,
    "title" : "今天有雷阵雨吗？",
    "content" : "今天到底有没有雷阵雨？？？",
    "writer" : "guest",
    "writeDate" : "2016-06-30",
    "count" : 2,
    "reverts" : null
  }, {
    "messageId" : 17,
    "title" : "中午吃什么？",
    "content" : "土豆红烧肉？还是糖醋里脊？",
    "writer" : "zhangsan",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 18,
    "title" : "今天装空调了！",
    "content" : "O(∩_∩)O哈哈~",
    "writer" : "quit",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 19,
    "title" : "众创梦工厂地址？",
    "content" : "求地址？",
    "writer" : "uret",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 20,
    "title" : "清华同方显示器价格？",
    "content" : "型号为：AW1920TS",
    "writer" : "robot",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 21,
    "title" : "你的开机速度是多少？",
    "content" : "晒晒你的电脑的开机速度吧~~~",
    "writer" : "honme",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 22,
    "title" : "谷歌浏览器支持富文本，IE不支持！",
    "content" : "<p>\r\n\t<span style=\"font-size:1...",
    "writer" : "erick",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 23,
    "title" : "清华同方显示器的报价，型号AW1920TS",
    "content" : "<p>\r\n\twww.baidu.com</p>\r\n<p>\r\n...",
    "writer" : "bimy",
    "writeDate" : "2016-06-30",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 24,
    "title" : "明天有雨吗？",
    "content" : "<p>\r\n\t天气预报说有雨，你们说会下吗</p>\r\n",
    "writer" : "郭燕",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 25,
    "title" : "苹果手机壳哪有卖的？",
    "content" : "",
    "writer" : "uidn",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 26,
    "title" : "今天下雪吗？",
    "content" : "<p>\r\n\t下雪？</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-01",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 27,
    "title" : "今天谁带U盘了？",
    "content" : "<p>\r\n\t借我用一下。谢谢！</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-02",
    "count" : 1,
    "reverts" : null
  } ]
}
2019-07-24 22:15:16,708 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message; UPDATE message SET message.`count`=(SELECT COUNT(*) FROM revert WHERE message.`messageID`=revert.`messageID`); 
2019-07-24 22:15:16,711 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 22:15:16,719 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 22:15:16,719 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 12
2019-07-24 22:15:16,723 DEBUG (MessageController.java:37)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 16,
    "title" : "今天有雷阵雨吗？",
    "content" : "今天到底有没有雷阵雨？？？",
    "writer" : "guest",
    "writeDate" : "2016-06-30",
    "count" : 2,
    "reverts" : null
  }, {
    "messageId" : 17,
    "title" : "中午吃什么？",
    "content" : "土豆红烧肉？还是糖醋里脊？",
    "writer" : "zhangsan",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 18,
    "title" : "今天装空调了！",
    "content" : "O(∩_∩)O哈哈~",
    "writer" : "quit",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 19,
    "title" : "众创梦工厂地址？",
    "content" : "求地址？",
    "writer" : "uret",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 20,
    "title" : "清华同方显示器价格？",
    "content" : "型号为：AW1920TS",
    "writer" : "robot",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 21,
    "title" : "你的开机速度是多少？",
    "content" : "晒晒你的电脑的开机速度吧~~~",
    "writer" : "honme",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 22,
    "title" : "谷歌浏览器支持富文本，IE不支持！",
    "content" : "<p>\r\n\t<span style=\"font-size:1...",
    "writer" : "erick",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 23,
    "title" : "清华同方显示器的报价，型号AW1920TS",
    "content" : "<p>\r\n\twww.baidu.com</p>\r\n<p>\r\n...",
    "writer" : "bimy",
    "writeDate" : "2016-06-30",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 24,
    "title" : "明天有雨吗？",
    "content" : "<p>\r\n\t天气预报说有雨，你们说会下吗</p>\r\n",
    "writer" : "郭燕",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 25,
    "title" : "苹果手机壳哪有卖的？",
    "content" : "",
    "writer" : "uidn",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 26,
    "title" : "今天下雪吗？",
    "content" : "<p>\r\n\t下雪？</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-01",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 27,
    "title" : "今天谁带U盘了？",
    "content" : "<p>\r\n\t借我用一下。谢谢！</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-02",
    "count" : 1,
    "reverts" : null
  } ]
}
2019-07-24 22:15:17,860 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message; UPDATE message SET message.`count`=(SELECT COUNT(*) FROM revert WHERE message.`messageID`=revert.`messageID`); 
2019-07-24 22:15:17,864 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 22:15:17,868 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 22:15:17,872 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 12
2019-07-24 22:15:17,872 DEBUG (MessageController.java:37)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 16,
    "title" : "今天有雷阵雨吗？",
    "content" : "今天到底有没有雷阵雨？？？",
    "writer" : "guest",
    "writeDate" : "2016-06-30",
    "count" : 2,
    "reverts" : null
  }, {
    "messageId" : 17,
    "title" : "中午吃什么？",
    "content" : "土豆红烧肉？还是糖醋里脊？",
    "writer" : "zhangsan",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 18,
    "title" : "今天装空调了！",
    "content" : "O(∩_∩)O哈哈~",
    "writer" : "quit",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 19,
    "title" : "众创梦工厂地址？",
    "content" : "求地址？",
    "writer" : "uret",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 20,
    "title" : "清华同方显示器价格？",
    "content" : "型号为：AW1920TS",
    "writer" : "robot",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 21,
    "title" : "你的开机速度是多少？",
    "content" : "晒晒你的电脑的开机速度吧~~~",
    "writer" : "honme",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 22,
    "title" : "谷歌浏览器支持富文本，IE不支持！",
    "content" : "<p>\r\n\t<span style=\"font-size:1...",
    "writer" : "erick",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 23,
    "title" : "清华同方显示器的报价，型号AW1920TS",
    "content" : "<p>\r\n\twww.baidu.com</p>\r\n<p>\r\n...",
    "writer" : "bimy",
    "writeDate" : "2016-06-30",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 24,
    "title" : "明天有雨吗？",
    "content" : "<p>\r\n\t天气预报说有雨，你们说会下吗</p>\r\n",
    "writer" : "郭燕",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 25,
    "title" : "苹果手机壳哪有卖的？",
    "content" : "",
    "writer" : "uidn",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 26,
    "title" : "今天下雪吗？",
    "content" : "<p>\r\n\t下雪？</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-01",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 27,
    "title" : "今天谁带U盘了？",
    "content" : "<p>\r\n\t借我用一下。谢谢！</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-02",
    "count" : 1,
    "reverts" : null
  } ]
}
2019-07-24 22:15:43,919 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message; UPDATE message SET message.`count`=(SELECT COUNT(*) FROM revert WHERE message.`messageID`=revert.`messageID`); 
2019-07-24 22:15:43,923 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 22:15:43,927 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 22:15:43,927 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 12
2019-07-24 22:15:43,931 DEBUG (MessageController.java:37)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 16,
    "title" : "今天有雷阵雨吗？",
    "content" : "今天到底有没有雷阵雨？？？",
    "writer" : "guest",
    "writeDate" : "2016-06-30",
    "count" : 2,
    "reverts" : null
  }, {
    "messageId" : 17,
    "title" : "中午吃什么？",
    "content" : "土豆红烧肉？还是糖醋里脊？",
    "writer" : "zhangsan",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 18,
    "title" : "今天装空调了！",
    "content" : "O(∩_∩)O哈哈~",
    "writer" : "quit",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 19,
    "title" : "众创梦工厂地址？",
    "content" : "求地址？",
    "writer" : "uret",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 20,
    "title" : "清华同方显示器价格？",
    "content" : "型号为：AW1920TS",
    "writer" : "robot",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 21,
    "title" : "你的开机速度是多少？",
    "content" : "晒晒你的电脑的开机速度吧~~~",
    "writer" : "honme",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 22,
    "title" : "谷歌浏览器支持富文本，IE不支持！",
    "content" : "<p>\r\n\t<span style=\"font-size:1...",
    "writer" : "erick",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 23,
    "title" : "清华同方显示器的报价，型号AW1920TS",
    "content" : "<p>\r\n\twww.baidu.com</p>\r\n<p>\r\n...",
    "writer" : "bimy",
    "writeDate" : "2016-06-30",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 24,
    "title" : "明天有雨吗？",
    "content" : "<p>\r\n\t天气预报说有雨，你们说会下吗</p>\r\n",
    "writer" : "郭燕",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 25,
    "title" : "苹果手机壳哪有卖的？",
    "content" : "",
    "writer" : "uidn",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 26,
    "title" : "今天下雪吗？",
    "content" : "<p>\r\n\t下雪？</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-01",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 27,
    "title" : "今天谁带U盘了？",
    "content" : "<p>\r\n\t借我用一下。谢谢！</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-02",
    "count" : 1,
    "reverts" : null
  } ]
}
2019-07-24 22:15:46,341 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message; UPDATE message SET message.`count`=(SELECT COUNT(*) FROM revert WHERE message.`messageID`=revert.`messageID`); 
2019-07-24 22:15:46,343 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 22:15:46,359 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 22:15:46,359 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 12
2019-07-24 22:15:46,359 DEBUG (MessageController.java:37)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 16,
    "title" : "今天有雷阵雨吗？",
    "content" : "今天到底有没有雷阵雨？？？",
    "writer" : "guest",
    "writeDate" : "2016-06-30",
    "count" : 2,
    "reverts" : null
  }, {
    "messageId" : 17,
    "title" : "中午吃什么？",
    "content" : "土豆红烧肉？还是糖醋里脊？",
    "writer" : "zhangsan",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 18,
    "title" : "今天装空调了！",
    "content" : "O(∩_∩)O哈哈~",
    "writer" : "quit",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 19,
    "title" : "众创梦工厂地址？",
    "content" : "求地址？",
    "writer" : "uret",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 20,
    "title" : "清华同方显示器价格？",
    "content" : "型号为：AW1920TS",
    "writer" : "robot",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 21,
    "title" : "你的开机速度是多少？",
    "content" : "晒晒你的电脑的开机速度吧~~~",
    "writer" : "honme",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 22,
    "title" : "谷歌浏览器支持富文本，IE不支持！",
    "content" : "<p>\r\n\t<span style=\"font-size:1...",
    "writer" : "erick",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 23,
    "title" : "清华同方显示器的报价，型号AW1920TS",
    "content" : "<p>\r\n\twww.baidu.com</p>\r\n<p>\r\n...",
    "writer" : "bimy",
    "writeDate" : "2016-06-30",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 24,
    "title" : "明天有雨吗？",
    "content" : "<p>\r\n\t天气预报说有雨，你们说会下吗</p>\r\n",
    "writer" : "郭燕",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 25,
    "title" : "苹果手机壳哪有卖的？",
    "content" : "",
    "writer" : "uidn",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 26,
    "title" : "今天下雪吗？",
    "content" : "<p>\r\n\t下雪？</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-01",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 27,
    "title" : "今天谁带U盘了？",
    "content" : "<p>\r\n\t借我用一下。谢谢！</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-02",
    "count" : 1,
    "reverts" : null
  } ]
}
2019-07-24 22:15:47,873 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message; UPDATE message SET message.`count`=(SELECT COUNT(*) FROM revert WHERE message.`messageID`=revert.`messageID`); 
2019-07-24 22:15:47,873 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 22:15:47,884 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 22:15:47,884 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 12
2019-07-24 22:15:47,888 DEBUG (MessageController.java:37)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 16,
    "title" : "今天有雷阵雨吗？",
    "content" : "今天到底有没有雷阵雨？？？",
    "writer" : "guest",
    "writeDate" : "2016-06-30",
    "count" : 2,
    "reverts" : null
  }, {
    "messageId" : 17,
    "title" : "中午吃什么？",
    "content" : "土豆红烧肉？还是糖醋里脊？",
    "writer" : "zhangsan",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 18,
    "title" : "今天装空调了！",
    "content" : "O(∩_∩)O哈哈~",
    "writer" : "quit",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 19,
    "title" : "众创梦工厂地址？",
    "content" : "求地址？",
    "writer" : "uret",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 20,
    "title" : "清华同方显示器价格？",
    "content" : "型号为：AW1920TS",
    "writer" : "robot",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 21,
    "title" : "你的开机速度是多少？",
    "content" : "晒晒你的电脑的开机速度吧~~~",
    "writer" : "honme",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 22,
    "title" : "谷歌浏览器支持富文本，IE不支持！",
    "content" : "<p>\r\n\t<span style=\"font-size:1...",
    "writer" : "erick",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 23,
    "title" : "清华同方显示器的报价，型号AW1920TS",
    "content" : "<p>\r\n\twww.baidu.com</p>\r\n<p>\r\n...",
    "writer" : "bimy",
    "writeDate" : "2016-06-30",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 24,
    "title" : "明天有雨吗？",
    "content" : "<p>\r\n\t天气预报说有雨，你们说会下吗</p>\r\n",
    "writer" : "郭燕",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 25,
    "title" : "苹果手机壳哪有卖的？",
    "content" : "",
    "writer" : "uidn",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 26,
    "title" : "今天下雪吗？",
    "content" : "<p>\r\n\t下雪？</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-01",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 27,
    "title" : "今天谁带U盘了？",
    "content" : "<p>\r\n\t借我用一下。谢谢！</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-02",
    "count" : 1,
    "reverts" : null
  } ]
}
2019-07-24 22:15:48,897 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message; UPDATE message SET message.`count`=(SELECT COUNT(*) FROM revert WHERE message.`messageID`=revert.`messageID`); 
2019-07-24 22:15:48,901 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 22:15:48,905 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 22:15:48,909 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 12
2019-07-24 22:15:48,909 DEBUG (MessageController.java:37)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 16,
    "title" : "今天有雷阵雨吗？",
    "content" : "今天到底有没有雷阵雨？？？",
    "writer" : "guest",
    "writeDate" : "2016-06-30",
    "count" : 2,
    "reverts" : null
  }, {
    "messageId" : 17,
    "title" : "中午吃什么？",
    "content" : "土豆红烧肉？还是糖醋里脊？",
    "writer" : "zhangsan",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 18,
    "title" : "今天装空调了！",
    "content" : "O(∩_∩)O哈哈~",
    "writer" : "quit",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 19,
    "title" : "众创梦工厂地址？",
    "content" : "求地址？",
    "writer" : "uret",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 20,
    "title" : "清华同方显示器价格？",
    "content" : "型号为：AW1920TS",
    "writer" : "robot",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 21,
    "title" : "你的开机速度是多少？",
    "content" : "晒晒你的电脑的开机速度吧~~~",
    "writer" : "honme",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 22,
    "title" : "谷歌浏览器支持富文本，IE不支持！",
    "content" : "<p>\r\n\t<span style=\"font-size:1...",
    "writer" : "erick",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 23,
    "title" : "清华同方显示器的报价，型号AW1920TS",
    "content" : "<p>\r\n\twww.baidu.com</p>\r\n<p>\r\n...",
    "writer" : "bimy",
    "writeDate" : "2016-06-30",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 24,
    "title" : "明天有雨吗？",
    "content" : "<p>\r\n\t天气预报说有雨，你们说会下吗</p>\r\n",
    "writer" : "郭燕",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 25,
    "title" : "苹果手机壳哪有卖的？",
    "content" : "",
    "writer" : "uidn",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 26,
    "title" : "今天下雪吗？",
    "content" : "<p>\r\n\t下雪？</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-01",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 27,
    "title" : "今天谁带U盘了？",
    "content" : "<p>\r\n\t借我用一下。谢谢！</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-02",
    "count" : 1,
    "reverts" : null
  } ]
}
2019-07-24 22:17:18,647 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product 
2019-07-24 22:17:18,653 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 22:17:18,657 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news 
2019-07-24 22:17:18,659 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 22:17:18,661 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 22:17:18,664 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 18
2019-07-24 22:17:18,666 DEBUG (NewsController.java:33)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 1,
    "title" : "创建新项目",
    "content" : "新闻内容",
    "writeDate" : 1466784000000
  }, {
    "newsId" : 2,
    "title" : "索尼位55降价送卡",
    "content" : "新闻内容3",
    "writeDate" : -30364761600000
  }, {
    "newsId" : 3,
    "title" : "理光b5不到二千",
    "content" : "你好",
    "writeDate" : 1191513600000
  }, {
    "newsId" : 5,
    "title" : "单反与镜头组合",
    "content" : null,
    "writeDate" : 1191369600000
  }, {
    "newsId" : 15,
    "title" : "百度将开拓美国和欧盟市场",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 16,
    "title" : "Uber CEO和马云交好",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 22,
    "title" : "今日早报",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 23,
    "title" : "高考查分被马云占了先机",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 24,
    "title" : "看完这个，你还想做微商吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 25,
    "title" : "农村电商只能成为空谈?",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 26,
    "title" : "上半年这些行业大爆炸",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 27,
    "title" : "阿里巴巴最为窘迫的四件事",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 28,
    "title" : "高管却离开了",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 30,
    "title" : "支付宝余额使用将受限",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 31,
    "title" : "国内垂直B2B电商平台TOP30",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 33,
    "title" : "谷歌要重新进入中国市场了吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 34,
    "title" : "今天",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 35,
    "title" : "庆十一商品促销11111",
    "content" : "222222",
    "writeDate" : 1562256000000
  } ]
}
2019-07-24 22:17:21,406 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message; UPDATE message SET message.`count`=(SELECT COUNT(*) FROM revert WHERE message.`messageID`=revert.`messageID`); 
2019-07-24 22:17:21,408 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 22:17:21,415 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 22:17:21,416 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 12
2019-07-24 22:17:21,417 DEBUG (MessageController.java:37)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 16,
    "title" : "今天有雷阵雨吗？",
    "content" : "今天到底有没有雷阵雨？？？",
    "writer" : "guest",
    "writeDate" : "2016-06-30",
    "count" : 2,
    "reverts" : null
  }, {
    "messageId" : 17,
    "title" : "中午吃什么？",
    "content" : "土豆红烧肉？还是糖醋里脊？",
    "writer" : "zhangsan",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 18,
    "title" : "今天装空调了！",
    "content" : "O(∩_∩)O哈哈~",
    "writer" : "quit",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 19,
    "title" : "众创梦工厂地址？",
    "content" : "求地址？",
    "writer" : "uret",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 20,
    "title" : "清华同方显示器价格？",
    "content" : "型号为：AW1920TS",
    "writer" : "robot",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 21,
    "title" : "你的开机速度是多少？",
    "content" : "晒晒你的电脑的开机速度吧~~~",
    "writer" : "honme",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 22,
    "title" : "谷歌浏览器支持富文本，IE不支持！",
    "content" : "<p>\r\n\t<span style=\"font-size:1...",
    "writer" : "erick",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 23,
    "title" : "清华同方显示器的报价，型号AW1920TS",
    "content" : "<p>\r\n\twww.baidu.com</p>\r\n<p>\r\n...",
    "writer" : "bimy",
    "writeDate" : "2016-06-30",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 24,
    "title" : "明天有雨吗？",
    "content" : "<p>\r\n\t天气预报说有雨，你们说会下吗</p>\r\n",
    "writer" : "郭燕",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 25,
    "title" : "苹果手机壳哪有卖的？",
    "content" : "",
    "writer" : "uidn",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 26,
    "title" : "今天下雪吗？",
    "content" : "<p>\r\n\t下雪？</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-01",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 27,
    "title" : "今天谁带U盘了？",
    "content" : "<p>\r\n\t借我用一下。谢谢！</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-02",
    "count" : 1,
    "reverts" : null
  } ]
}
2019-07-24 22:17:23,789 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message; UPDATE message SET message.`count`=(SELECT COUNT(*) FROM revert WHERE message.`messageID`=revert.`messageID`); 
2019-07-24 22:17:23,790 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 22:17:23,797 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 22:17:23,797 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 12
2019-07-24 22:17:23,801 DEBUG (MessageController.java:37)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 16,
    "title" : "今天有雷阵雨吗？",
    "content" : "今天到底有没有雷阵雨？？？",
    "writer" : "guest",
    "writeDate" : "2016-06-30",
    "count" : 2,
    "reverts" : null
  }, {
    "messageId" : 17,
    "title" : "中午吃什么？",
    "content" : "土豆红烧肉？还是糖醋里脊？",
    "writer" : "zhangsan",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 18,
    "title" : "今天装空调了！",
    "content" : "O(∩_∩)O哈哈~",
    "writer" : "quit",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 19,
    "title" : "众创梦工厂地址？",
    "content" : "求地址？",
    "writer" : "uret",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 20,
    "title" : "清华同方显示器价格？",
    "content" : "型号为：AW1920TS",
    "writer" : "robot",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 21,
    "title" : "你的开机速度是多少？",
    "content" : "晒晒你的电脑的开机速度吧~~~",
    "writer" : "honme",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 22,
    "title" : "谷歌浏览器支持富文本，IE不支持！",
    "content" : "<p>\r\n\t<span style=\"font-size:1...",
    "writer" : "erick",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 23,
    "title" : "清华同方显示器的报价，型号AW1920TS",
    "content" : "<p>\r\n\twww.baidu.com</p>\r\n<p>\r\n...",
    "writer" : "bimy",
    "writeDate" : "2016-06-30",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 24,
    "title" : "明天有雨吗？",
    "content" : "<p>\r\n\t天气预报说有雨，你们说会下吗</p>\r\n",
    "writer" : "郭燕",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 25,
    "title" : "苹果手机壳哪有卖的？",
    "content" : "",
    "writer" : "uidn",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 26,
    "title" : "今天下雪吗？",
    "content" : "<p>\r\n\t下雪？</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-01",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 27,
    "title" : "今天谁带U盘了？",
    "content" : "<p>\r\n\t借我用一下。谢谢！</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-02",
    "count" : 1,
    "reverts" : null
  } ]
}
2019-07-24 22:17:24,974 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message; UPDATE message SET message.`count`=(SELECT COUNT(*) FROM revert WHERE message.`messageID`=revert.`messageID`); 
2019-07-24 22:17:24,975 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 22:17:24,986 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 22:17:24,987 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 12
2019-07-24 22:17:24,987 DEBUG (MessageController.java:37)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 16,
    "title" : "今天有雷阵雨吗？",
    "content" : "今天到底有没有雷阵雨？？？",
    "writer" : "guest",
    "writeDate" : "2016-06-30",
    "count" : 2,
    "reverts" : null
  }, {
    "messageId" : 17,
    "title" : "中午吃什么？",
    "content" : "土豆红烧肉？还是糖醋里脊？",
    "writer" : "zhangsan",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 18,
    "title" : "今天装空调了！",
    "content" : "O(∩_∩)O哈哈~",
    "writer" : "quit",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 19,
    "title" : "众创梦工厂地址？",
    "content" : "求地址？",
    "writer" : "uret",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 20,
    "title" : "清华同方显示器价格？",
    "content" : "型号为：AW1920TS",
    "writer" : "robot",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 21,
    "title" : "你的开机速度是多少？",
    "content" : "晒晒你的电脑的开机速度吧~~~",
    "writer" : "honme",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 22,
    "title" : "谷歌浏览器支持富文本，IE不支持！",
    "content" : "<p>\r\n\t<span style=\"font-size:1...",
    "writer" : "erick",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 23,
    "title" : "清华同方显示器的报价，型号AW1920TS",
    "content" : "<p>\r\n\twww.baidu.com</p>\r\n<p>\r\n...",
    "writer" : "bimy",
    "writeDate" : "2016-06-30",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 24,
    "title" : "明天有雨吗？",
    "content" : "<p>\r\n\t天气预报说有雨，你们说会下吗</p>\r\n",
    "writer" : "郭燕",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 25,
    "title" : "苹果手机壳哪有卖的？",
    "content" : "",
    "writer" : "uidn",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 26,
    "title" : "今天下雪吗？",
    "content" : "<p>\r\n\t下雪？</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-01",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 27,
    "title" : "今天谁带U盘了？",
    "content" : "<p>\r\n\t借我用一下。谢谢！</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-02",
    "count" : 1,
    "reverts" : null
  } ]
}
2019-07-24 22:17:28,087 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message; UPDATE message SET message.`count`=(SELECT COUNT(*) FROM revert WHERE message.`messageID`=revert.`messageID`); 
2019-07-24 22:17:28,088 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 22:17:28,093 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 22:17:28,095 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 12
2019-07-24 22:17:28,096 DEBUG (MessageController.java:37)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 16,
    "title" : "今天有雷阵雨吗？",
    "content" : "今天到底有没有雷阵雨？？？",
    "writer" : "guest",
    "writeDate" : "2016-06-30",
    "count" : 2,
    "reverts" : null
  }, {
    "messageId" : 17,
    "title" : "中午吃什么？",
    "content" : "土豆红烧肉？还是糖醋里脊？",
    "writer" : "zhangsan",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 18,
    "title" : "今天装空调了！",
    "content" : "O(∩_∩)O哈哈~",
    "writer" : "quit",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 19,
    "title" : "众创梦工厂地址？",
    "content" : "求地址？",
    "writer" : "uret",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 20,
    "title" : "清华同方显示器价格？",
    "content" : "型号为：AW1920TS",
    "writer" : "robot",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 21,
    "title" : "你的开机速度是多少？",
    "content" : "晒晒你的电脑的开机速度吧~~~",
    "writer" : "honme",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 22,
    "title" : "谷歌浏览器支持富文本，IE不支持！",
    "content" : "<p>\r\n\t<span style=\"font-size:1...",
    "writer" : "erick",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 23,
    "title" : "清华同方显示器的报价，型号AW1920TS",
    "content" : "<p>\r\n\twww.baidu.com</p>\r\n<p>\r\n...",
    "writer" : "bimy",
    "writeDate" : "2016-06-30",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 24,
    "title" : "明天有雨吗？",
    "content" : "<p>\r\n\t天气预报说有雨，你们说会下吗</p>\r\n",
    "writer" : "郭燕",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 25,
    "title" : "苹果手机壳哪有卖的？",
    "content" : "",
    "writer" : "uidn",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 26,
    "title" : "今天下雪吗？",
    "content" : "<p>\r\n\t下雪？</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-01",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 27,
    "title" : "今天谁带U盘了？",
    "content" : "<p>\r\n\t借我用一下。谢谢！</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-02",
    "count" : 1,
    "reverts" : null
  } ]
}
2019-07-24 22:19:28,431 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message; UPDATE message SET message.`count`=(SELECT COUNT(*) FROM revert WHERE message.`messageID`=revert.`messageID`); 
2019-07-24 22:19:28,431 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 22:19:28,439 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 22:19:28,439 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 12
2019-07-24 22:19:28,443 DEBUG (MessageController.java:37)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 16,
    "title" : "今天有雷阵雨吗？",
    "content" : "今天到底有没有雷阵雨？？？",
    "writer" : "guest",
    "writeDate" : "2016-06-30",
    "count" : 2,
    "reverts" : null
  }, {
    "messageId" : 17,
    "title" : "中午吃什么？",
    "content" : "土豆红烧肉？还是糖醋里脊？",
    "writer" : "zhangsan",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 18,
    "title" : "今天装空调了！",
    "content" : "O(∩_∩)O哈哈~",
    "writer" : "quit",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 19,
    "title" : "众创梦工厂地址？",
    "content" : "求地址？",
    "writer" : "uret",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 20,
    "title" : "清华同方显示器价格？",
    "content" : "型号为：AW1920TS",
    "writer" : "robot",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 21,
    "title" : "你的开机速度是多少？",
    "content" : "晒晒你的电脑的开机速度吧~~~",
    "writer" : "honme",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 22,
    "title" : "谷歌浏览器支持富文本，IE不支持！",
    "content" : "<p>\r\n\t<span style=\"font-size:1...",
    "writer" : "erick",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 23,
    "title" : "清华同方显示器的报价，型号AW1920TS",
    "content" : "<p>\r\n\twww.baidu.com</p>\r\n<p>\r\n...",
    "writer" : "bimy",
    "writeDate" : "2016-06-30",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 24,
    "title" : "明天有雨吗？",
    "content" : "<p>\r\n\t天气预报说有雨，你们说会下吗</p>\r\n",
    "writer" : "郭燕",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 25,
    "title" : "苹果手机壳哪有卖的？",
    "content" : "",
    "writer" : "uidn",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 26,
    "title" : "今天下雪吗？",
    "content" : "<p>\r\n\t下雪？</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-01",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 27,
    "title" : "今天谁带U盘了？",
    "content" : "<p>\r\n\t借我用一下。谢谢！</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-02",
    "count" : 1,
    "reverts" : null
  } ]
}
2019-07-24 22:19:31,119 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message; UPDATE message SET message.`count`=(SELECT COUNT(*) FROM revert WHERE message.`messageID`=revert.`messageID`); 
2019-07-24 22:19:31,119 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 22:19:31,127 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 22:19:31,127 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 12
2019-07-24 22:19:31,127 DEBUG (MessageController.java:37)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 16,
    "title" : "今天有雷阵雨吗？",
    "content" : "今天到底有没有雷阵雨？？？",
    "writer" : "guest",
    "writeDate" : "2016-06-30",
    "count" : 2,
    "reverts" : null
  }, {
    "messageId" : 17,
    "title" : "中午吃什么？",
    "content" : "土豆红烧肉？还是糖醋里脊？",
    "writer" : "zhangsan",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 18,
    "title" : "今天装空调了！",
    "content" : "O(∩_∩)O哈哈~",
    "writer" : "quit",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 19,
    "title" : "众创梦工厂地址？",
    "content" : "求地址？",
    "writer" : "uret",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 20,
    "title" : "清华同方显示器价格？",
    "content" : "型号为：AW1920TS",
    "writer" : "robot",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 21,
    "title" : "你的开机速度是多少？",
    "content" : "晒晒你的电脑的开机速度吧~~~",
    "writer" : "honme",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 22,
    "title" : "谷歌浏览器支持富文本，IE不支持！",
    "content" : "<p>\r\n\t<span style=\"font-size:1...",
    "writer" : "erick",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 23,
    "title" : "清华同方显示器的报价，型号AW1920TS",
    "content" : "<p>\r\n\twww.baidu.com</p>\r\n<p>\r\n...",
    "writer" : "bimy",
    "writeDate" : "2016-06-30",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 24,
    "title" : "明天有雨吗？",
    "content" : "<p>\r\n\t天气预报说有雨，你们说会下吗</p>\r\n",
    "writer" : "郭燕",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 25,
    "title" : "苹果手机壳哪有卖的？",
    "content" : "",
    "writer" : "uidn",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 26,
    "title" : "今天下雪吗？",
    "content" : "<p>\r\n\t下雪？</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-01",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 27,
    "title" : "今天谁带U盘了？",
    "content" : "<p>\r\n\t借我用一下。谢谢！</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-02",
    "count" : 1,
    "reverts" : null
  } ]
}
2019-07-24 22:19:34,176 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message; UPDATE message SET message.`count`=(SELECT COUNT(*) FROM revert WHERE message.`messageID`=revert.`messageID`); 
2019-07-24 22:19:34,179 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 22:19:34,189 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 22:19:34,190 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 12
2019-07-24 22:19:34,192 DEBUG (MessageController.java:37)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 16,
    "title" : "今天有雷阵雨吗？",
    "content" : "今天到底有没有雷阵雨？？？",
    "writer" : "guest",
    "writeDate" : "2016-06-30",
    "count" : 2,
    "reverts" : null
  }, {
    "messageId" : 17,
    "title" : "中午吃什么？",
    "content" : "土豆红烧肉？还是糖醋里脊？",
    "writer" : "zhangsan",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 18,
    "title" : "今天装空调了！",
    "content" : "O(∩_∩)O哈哈~",
    "writer" : "quit",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 19,
    "title" : "众创梦工厂地址？",
    "content" : "求地址？",
    "writer" : "uret",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 20,
    "title" : "清华同方显示器价格？",
    "content" : "型号为：AW1920TS",
    "writer" : "robot",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 21,
    "title" : "你的开机速度是多少？",
    "content" : "晒晒你的电脑的开机速度吧~~~",
    "writer" : "honme",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 22,
    "title" : "谷歌浏览器支持富文本，IE不支持！",
    "content" : "<p>\r\n\t<span style=\"font-size:1...",
    "writer" : "erick",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 23,
    "title" : "清华同方显示器的报价，型号AW1920TS",
    "content" : "<p>\r\n\twww.baidu.com</p>\r\n<p>\r\n...",
    "writer" : "bimy",
    "writeDate" : "2016-06-30",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 24,
    "title" : "明天有雨吗？",
    "content" : "<p>\r\n\t天气预报说有雨，你们说会下吗</p>\r\n",
    "writer" : "郭燕",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 25,
    "title" : "苹果手机壳哪有卖的？",
    "content" : "",
    "writer" : "uidn",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 26,
    "title" : "今天下雪吗？",
    "content" : "<p>\r\n\t下雪？</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-01",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 27,
    "title" : "今天谁带U盘了？",
    "content" : "<p>\r\n\t借我用一下。谢谢！</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-02",
    "count" : 1,
    "reverts" : null
  } ]
}
2019-07-24 22:19:37,031 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message; UPDATE message SET message.`count`=(SELECT COUNT(*) FROM revert WHERE message.`messageID`=revert.`messageID`); 
2019-07-24 22:19:37,033 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 22:19:37,041 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 22:19:37,042 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 12
2019-07-24 22:19:37,043 DEBUG (MessageController.java:37)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 16,
    "title" : "今天有雷阵雨吗？",
    "content" : "今天到底有没有雷阵雨？？？",
    "writer" : "guest",
    "writeDate" : "2016-06-30",
    "count" : 2,
    "reverts" : null
  }, {
    "messageId" : 17,
    "title" : "中午吃什么？",
    "content" : "土豆红烧肉？还是糖醋里脊？",
    "writer" : "zhangsan",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 18,
    "title" : "今天装空调了！",
    "content" : "O(∩_∩)O哈哈~",
    "writer" : "quit",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 19,
    "title" : "众创梦工厂地址？",
    "content" : "求地址？",
    "writer" : "uret",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 20,
    "title" : "清华同方显示器价格？",
    "content" : "型号为：AW1920TS",
    "writer" : "robot",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 21,
    "title" : "你的开机速度是多少？",
    "content" : "晒晒你的电脑的开机速度吧~~~",
    "writer" : "honme",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 22,
    "title" : "谷歌浏览器支持富文本，IE不支持！",
    "content" : "<p>\r\n\t<span style=\"font-size:1...",
    "writer" : "erick",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 23,
    "title" : "清华同方显示器的报价，型号AW1920TS",
    "content" : "<p>\r\n\twww.baidu.com</p>\r\n<p>\r\n...",
    "writer" : "bimy",
    "writeDate" : "2016-06-30",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 24,
    "title" : "明天有雨吗？",
    "content" : "<p>\r\n\t天气预报说有雨，你们说会下吗</p>\r\n",
    "writer" : "郭燕",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 25,
    "title" : "苹果手机壳哪有卖的？",
    "content" : "",
    "writer" : "uidn",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 26,
    "title" : "今天下雪吗？",
    "content" : "<p>\r\n\t下雪？</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-01",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 27,
    "title" : "今天谁带U盘了？",
    "content" : "<p>\r\n\t借我用一下。谢谢！</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-02",
    "count" : 1,
    "reverts" : null
  } ]
}
2019-07-24 22:19:38,473 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message; UPDATE message SET message.`count`=(SELECT COUNT(*) FROM revert WHERE message.`messageID`=revert.`messageID`); 
2019-07-24 22:19:38,474 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 22:19:38,481 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 22:19:38,482 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 12
2019-07-24 22:19:38,484 DEBUG (MessageController.java:37)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 16,
    "title" : "今天有雷阵雨吗？",
    "content" : "今天到底有没有雷阵雨？？？",
    "writer" : "guest",
    "writeDate" : "2016-06-30",
    "count" : 2,
    "reverts" : null
  }, {
    "messageId" : 17,
    "title" : "中午吃什么？",
    "content" : "土豆红烧肉？还是糖醋里脊？",
    "writer" : "zhangsan",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 18,
    "title" : "今天装空调了！",
    "content" : "O(∩_∩)O哈哈~",
    "writer" : "quit",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 19,
    "title" : "众创梦工厂地址？",
    "content" : "求地址？",
    "writer" : "uret",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 20,
    "title" : "清华同方显示器价格？",
    "content" : "型号为：AW1920TS",
    "writer" : "robot",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 21,
    "title" : "你的开机速度是多少？",
    "content" : "晒晒你的电脑的开机速度吧~~~",
    "writer" : "honme",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 22,
    "title" : "谷歌浏览器支持富文本，IE不支持！",
    "content" : "<p>\r\n\t<span style=\"font-size:1...",
    "writer" : "erick",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 23,
    "title" : "清华同方显示器的报价，型号AW1920TS",
    "content" : "<p>\r\n\twww.baidu.com</p>\r\n<p>\r\n...",
    "writer" : "bimy",
    "writeDate" : "2016-06-30",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 24,
    "title" : "明天有雨吗？",
    "content" : "<p>\r\n\t天气预报说有雨，你们说会下吗</p>\r\n",
    "writer" : "郭燕",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 25,
    "title" : "苹果手机壳哪有卖的？",
    "content" : "",
    "writer" : "uidn",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 26,
    "title" : "今天下雪吗？",
    "content" : "<p>\r\n\t下雪？</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-01",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 27,
    "title" : "今天谁带U盘了？",
    "content" : "<p>\r\n\t借我用一下。谢谢！</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-02",
    "count" : 1,
    "reverts" : null
  } ]
}
2019-07-24 22:19:41,964 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message; UPDATE message SET message.`count`=(SELECT COUNT(*) FROM revert WHERE message.`messageID`=revert.`messageID`); 
2019-07-24 22:19:42,072 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 22:19:42,080 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 22:19:42,081 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 12
2019-07-24 22:19:42,081 DEBUG (MessageController.java:37)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 16,
    "title" : "今天有雷阵雨吗？",
    "content" : "今天到底有没有雷阵雨？？？",
    "writer" : "guest",
    "writeDate" : "2016-06-30",
    "count" : 2,
    "reverts" : null
  }, {
    "messageId" : 17,
    "title" : "中午吃什么？",
    "content" : "土豆红烧肉？还是糖醋里脊？",
    "writer" : "zhangsan",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 18,
    "title" : "今天装空调了！",
    "content" : "O(∩_∩)O哈哈~",
    "writer" : "quit",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 19,
    "title" : "众创梦工厂地址？",
    "content" : "求地址？",
    "writer" : "uret",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 20,
    "title" : "清华同方显示器价格？",
    "content" : "型号为：AW1920TS",
    "writer" : "robot",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 21,
    "title" : "你的开机速度是多少？",
    "content" : "晒晒你的电脑的开机速度吧~~~",
    "writer" : "honme",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 22,
    "title" : "谷歌浏览器支持富文本，IE不支持！",
    "content" : "<p>\r\n\t<span style=\"font-size:1...",
    "writer" : "erick",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 23,
    "title" : "清华同方显示器的报价，型号AW1920TS",
    "content" : "<p>\r\n\twww.baidu.com</p>\r\n<p>\r\n...",
    "writer" : "bimy",
    "writeDate" : "2016-06-30",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 24,
    "title" : "明天有雨吗？",
    "content" : "<p>\r\n\t天气预报说有雨，你们说会下吗</p>\r\n",
    "writer" : "郭燕",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 25,
    "title" : "苹果手机壳哪有卖的？",
    "content" : "",
    "writer" : "uidn",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 26,
    "title" : "今天下雪吗？",
    "content" : "<p>\r\n\t下雪？</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-01",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 27,
    "title" : "今天谁带U盘了？",
    "content" : "<p>\r\n\t借我用一下。谢谢！</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-02",
    "count" : 1,
    "reverts" : null
  } ]
}
2019-07-24 22:19:44,266 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message; UPDATE message SET message.`count`=(SELECT COUNT(*) FROM revert WHERE message.`messageID`=revert.`messageID`); 
2019-07-24 22:19:44,268 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 22:19:44,275 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 22:19:44,276 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 12
2019-07-24 22:19:44,277 DEBUG (MessageController.java:37)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 16,
    "title" : "今天有雷阵雨吗？",
    "content" : "今天到底有没有雷阵雨？？？",
    "writer" : "guest",
    "writeDate" : "2016-06-30",
    "count" : 2,
    "reverts" : null
  }, {
    "messageId" : 17,
    "title" : "中午吃什么？",
    "content" : "土豆红烧肉？还是糖醋里脊？",
    "writer" : "zhangsan",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 18,
    "title" : "今天装空调了！",
    "content" : "O(∩_∩)O哈哈~",
    "writer" : "quit",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 19,
    "title" : "众创梦工厂地址？",
    "content" : "求地址？",
    "writer" : "uret",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 20,
    "title" : "清华同方显示器价格？",
    "content" : "型号为：AW1920TS",
    "writer" : "robot",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 21,
    "title" : "你的开机速度是多少？",
    "content" : "晒晒你的电脑的开机速度吧~~~",
    "writer" : "honme",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 22,
    "title" : "谷歌浏览器支持富文本，IE不支持！",
    "content" : "<p>\r\n\t<span style=\"font-size:1...",
    "writer" : "erick",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 23,
    "title" : "清华同方显示器的报价，型号AW1920TS",
    "content" : "<p>\r\n\twww.baidu.com</p>\r\n<p>\r\n...",
    "writer" : "bimy",
    "writeDate" : "2016-06-30",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 24,
    "title" : "明天有雨吗？",
    "content" : "<p>\r\n\t天气预报说有雨，你们说会下吗</p>\r\n",
    "writer" : "郭燕",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 25,
    "title" : "苹果手机壳哪有卖的？",
    "content" : "",
    "writer" : "uidn",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 26,
    "title" : "今天下雪吗？",
    "content" : "<p>\r\n\t下雪？</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-01",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 27,
    "title" : "今天谁带U盘了？",
    "content" : "<p>\r\n\t借我用一下。谢谢！</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-02",
    "count" : 1,
    "reverts" : null
  } ]
}
2019-07-24 22:19:45,586 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message; UPDATE message SET message.`count`=(SELECT COUNT(*) FROM revert WHERE message.`messageID`=revert.`messageID`); 
2019-07-24 22:19:45,588 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 22:19:45,595 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 22:19:45,597 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 12
2019-07-24 22:19:45,599 DEBUG (MessageController.java:37)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 16,
    "title" : "今天有雷阵雨吗？",
    "content" : "今天到底有没有雷阵雨？？？",
    "writer" : "guest",
    "writeDate" : "2016-06-30",
    "count" : 2,
    "reverts" : null
  }, {
    "messageId" : 17,
    "title" : "中午吃什么？",
    "content" : "土豆红烧肉？还是糖醋里脊？",
    "writer" : "zhangsan",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 18,
    "title" : "今天装空调了！",
    "content" : "O(∩_∩)O哈哈~",
    "writer" : "quit",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 19,
    "title" : "众创梦工厂地址？",
    "content" : "求地址？",
    "writer" : "uret",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 20,
    "title" : "清华同方显示器价格？",
    "content" : "型号为：AW1920TS",
    "writer" : "robot",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 21,
    "title" : "你的开机速度是多少？",
    "content" : "晒晒你的电脑的开机速度吧~~~",
    "writer" : "honme",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 22,
    "title" : "谷歌浏览器支持富文本，IE不支持！",
    "content" : "<p>\r\n\t<span style=\"font-size:1...",
    "writer" : "erick",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 23,
    "title" : "清华同方显示器的报价，型号AW1920TS",
    "content" : "<p>\r\n\twww.baidu.com</p>\r\n<p>\r\n...",
    "writer" : "bimy",
    "writeDate" : "2016-06-30",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 24,
    "title" : "明天有雨吗？",
    "content" : "<p>\r\n\t天气预报说有雨，你们说会下吗</p>\r\n",
    "writer" : "郭燕",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 25,
    "title" : "苹果手机壳哪有卖的？",
    "content" : "",
    "writer" : "uidn",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 26,
    "title" : "今天下雪吗？",
    "content" : "<p>\r\n\t下雪？</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-01",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 27,
    "title" : "今天谁带U盘了？",
    "content" : "<p>\r\n\t借我用一下。谢谢！</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-02",
    "count" : 1,
    "reverts" : null
  } ]
}
2019-07-24 22:25:54,103 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message; UPDATE message SET message.`count`=(SELECT COUNT(*) FROM revert WHERE message.`messageID`=revert.`messageID`); 
2019-07-24 22:25:54,104 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 22:25:54,111 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 22:25:54,113 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 12
2019-07-24 22:25:54,116 DEBUG (MessageController.java:37)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 16,
    "title" : "今天有雷阵雨吗？",
    "content" : "今天到底有没有雷阵雨？？？",
    "writer" : "guest",
    "writeDate" : "2016-06-30",
    "count" : 2,
    "reverts" : null
  }, {
    "messageId" : 17,
    "title" : "中午吃什么？",
    "content" : "土豆红烧肉？还是糖醋里脊？",
    "writer" : "zhangsan",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 18,
    "title" : "今天装空调了！",
    "content" : "O(∩_∩)O哈哈~",
    "writer" : "quit",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 19,
    "title" : "众创梦工厂地址？",
    "content" : "求地址？",
    "writer" : "uret",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 20,
    "title" : "清华同方显示器价格？",
    "content" : "型号为：AW1920TS",
    "writer" : "robot",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 21,
    "title" : "你的开机速度是多少？",
    "content" : "晒晒你的电脑的开机速度吧~~~",
    "writer" : "honme",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 22,
    "title" : "谷歌浏览器支持富文本，IE不支持！",
    "content" : "<p>\r\n\t<span style=\"font-size:1...",
    "writer" : "erick",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 23,
    "title" : "清华同方显示器的报价，型号AW1920TS",
    "content" : "<p>\r\n\twww.baidu.com</p>\r\n<p>\r\n...",
    "writer" : "bimy",
    "writeDate" : "2016-06-30",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 24,
    "title" : "明天有雨吗？",
    "content" : "<p>\r\n\t天气预报说有雨，你们说会下吗</p>\r\n",
    "writer" : "郭燕",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 25,
    "title" : "苹果手机壳哪有卖的？",
    "content" : "",
    "writer" : "uidn",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 26,
    "title" : "今天下雪吗？",
    "content" : "<p>\r\n\t下雪？</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-01",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 27,
    "title" : "今天谁带U盘了？",
    "content" : "<p>\r\n\t借我用一下。谢谢！</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-02",
    "count" : 1,
    "reverts" : null
  } ]
}
2019-07-24 22:26:00,876 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message; UPDATE message SET message.`count`=(SELECT COUNT(*) FROM revert WHERE message.`messageID`=revert.`messageID`); 
2019-07-24 22:26:00,878 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 22:26:00,883 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 22:26:00,885 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 12
2019-07-24 22:26:00,885 DEBUG (MessageController.java:37)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 16,
    "title" : "今天有雷阵雨吗？",
    "content" : "今天到底有没有雷阵雨？？？",
    "writer" : "guest",
    "writeDate" : "2016-06-30",
    "count" : 2,
    "reverts" : null
  }, {
    "messageId" : 17,
    "title" : "中午吃什么？",
    "content" : "土豆红烧肉？还是糖醋里脊？",
    "writer" : "zhangsan",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 18,
    "title" : "今天装空调了！",
    "content" : "O(∩_∩)O哈哈~",
    "writer" : "quit",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 19,
    "title" : "众创梦工厂地址？",
    "content" : "求地址？",
    "writer" : "uret",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 20,
    "title" : "清华同方显示器价格？",
    "content" : "型号为：AW1920TS",
    "writer" : "robot",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 21,
    "title" : "你的开机速度是多少？",
    "content" : "晒晒你的电脑的开机速度吧~~~",
    "writer" : "honme",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 22,
    "title" : "谷歌浏览器支持富文本，IE不支持！",
    "content" : "<p>\r\n\t<span style=\"font-size:1...",
    "writer" : "erick",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 23,
    "title" : "清华同方显示器的报价，型号AW1920TS",
    "content" : "<p>\r\n\twww.baidu.com</p>\r\n<p>\r\n...",
    "writer" : "bimy",
    "writeDate" : "2016-06-30",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 24,
    "title" : "明天有雨吗？",
    "content" : "<p>\r\n\t天气预报说有雨，你们说会下吗</p>\r\n",
    "writer" : "郭燕",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 25,
    "title" : "苹果手机壳哪有卖的？",
    "content" : "",
    "writer" : "uidn",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 26,
    "title" : "今天下雪吗？",
    "content" : "<p>\r\n\t下雪？</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-01",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 27,
    "title" : "今天谁带U盘了？",
    "content" : "<p>\r\n\t借我用一下。谢谢！</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-02",
    "count" : 1,
    "reverts" : null
  } ]
}
2019-07-24 22:26:02,157 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message; UPDATE message SET message.`count`=(SELECT COUNT(*) FROM revert WHERE message.`messageID`=revert.`messageID`); 
2019-07-24 22:26:02,160 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 22:26:02,168 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 22:26:02,169 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 12
2019-07-24 22:26:02,171 DEBUG (MessageController.java:37)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 16,
    "title" : "今天有雷阵雨吗？",
    "content" : "今天到底有没有雷阵雨？？？",
    "writer" : "guest",
    "writeDate" : "2016-06-30",
    "count" : 2,
    "reverts" : null
  }, {
    "messageId" : 17,
    "title" : "中午吃什么？",
    "content" : "土豆红烧肉？还是糖醋里脊？",
    "writer" : "zhangsan",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 18,
    "title" : "今天装空调了！",
    "content" : "O(∩_∩)O哈哈~",
    "writer" : "quit",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 19,
    "title" : "众创梦工厂地址？",
    "content" : "求地址？",
    "writer" : "uret",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 20,
    "title" : "清华同方显示器价格？",
    "content" : "型号为：AW1920TS",
    "writer" : "robot",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 21,
    "title" : "你的开机速度是多少？",
    "content" : "晒晒你的电脑的开机速度吧~~~",
    "writer" : "honme",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 22,
    "title" : "谷歌浏览器支持富文本，IE不支持！",
    "content" : "<p>\r\n\t<span style=\"font-size:1...",
    "writer" : "erick",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 23,
    "title" : "清华同方显示器的报价，型号AW1920TS",
    "content" : "<p>\r\n\twww.baidu.com</p>\r\n<p>\r\n...",
    "writer" : "bimy",
    "writeDate" : "2016-06-30",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 24,
    "title" : "明天有雨吗？",
    "content" : "<p>\r\n\t天气预报说有雨，你们说会下吗</p>\r\n",
    "writer" : "郭燕",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 25,
    "title" : "苹果手机壳哪有卖的？",
    "content" : "",
    "writer" : "uidn",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 26,
    "title" : "今天下雪吗？",
    "content" : "<p>\r\n\t下雪？</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-01",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 27,
    "title" : "今天谁带U盘了？",
    "content" : "<p>\r\n\t借我用一下。谢谢！</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-02",
    "count" : 1,
    "reverts" : null
  } ]
}
2019-07-24 22:26:38,898 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message; UPDATE message SET message.`count`=(SELECT COUNT(*) FROM revert WHERE message.`messageID`=revert.`messageID`); 
2019-07-24 22:26:38,902 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 22:26:38,908 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 22:26:38,908 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 12
2019-07-24 22:26:38,912 DEBUG (MessageController.java:37)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 16,
    "title" : "今天有雷阵雨吗？",
    "content" : "今天到底有没有雷阵雨？？？",
    "writer" : "guest",
    "writeDate" : "2016-06-30",
    "count" : 2,
    "reverts" : null
  }, {
    "messageId" : 17,
    "title" : "中午吃什么？",
    "content" : "土豆红烧肉？还是糖醋里脊？",
    "writer" : "zhangsan",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 18,
    "title" : "今天装空调了！",
    "content" : "O(∩_∩)O哈哈~",
    "writer" : "quit",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 19,
    "title" : "众创梦工厂地址？",
    "content" : "求地址？",
    "writer" : "uret",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 20,
    "title" : "清华同方显示器价格？",
    "content" : "型号为：AW1920TS",
    "writer" : "robot",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 21,
    "title" : "你的开机速度是多少？",
    "content" : "晒晒你的电脑的开机速度吧~~~",
    "writer" : "honme",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 22,
    "title" : "谷歌浏览器支持富文本，IE不支持！",
    "content" : "<p>\r\n\t<span style=\"font-size:1...",
    "writer" : "erick",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 23,
    "title" : "清华同方显示器的报价，型号AW1920TS",
    "content" : "<p>\r\n\twww.baidu.com</p>\r\n<p>\r\n...",
    "writer" : "bimy",
    "writeDate" : "2016-06-30",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 24,
    "title" : "明天有雨吗？",
    "content" : "<p>\r\n\t天气预报说有雨，你们说会下吗</p>\r\n",
    "writer" : "郭燕",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 25,
    "title" : "苹果手机壳哪有卖的？",
    "content" : "",
    "writer" : "uidn",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 26,
    "title" : "今天下雪吗？",
    "content" : "<p>\r\n\t下雪？</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-01",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 27,
    "title" : "今天谁带U盘了？",
    "content" : "<p>\r\n\t借我用一下。谢谢！</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-02",
    "count" : 1,
    "reverts" : null
  } ]
}
2019-07-24 22:26:41,103 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message; UPDATE message SET message.`count`=(SELECT COUNT(*) FROM revert WHERE message.`messageID`=revert.`messageID`); 
2019-07-24 22:26:41,107 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 22:26:41,119 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 22:26:41,119 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 12
2019-07-24 22:26:41,123 DEBUG (MessageController.java:37)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 16,
    "title" : "今天有雷阵雨吗？",
    "content" : "今天到底有没有雷阵雨？？？",
    "writer" : "guest",
    "writeDate" : "2016-06-30",
    "count" : 2,
    "reverts" : null
  }, {
    "messageId" : 17,
    "title" : "中午吃什么？",
    "content" : "土豆红烧肉？还是糖醋里脊？",
    "writer" : "zhangsan",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 18,
    "title" : "今天装空调了！",
    "content" : "O(∩_∩)O哈哈~",
    "writer" : "quit",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 19,
    "title" : "众创梦工厂地址？",
    "content" : "求地址？",
    "writer" : "uret",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 20,
    "title" : "清华同方显示器价格？",
    "content" : "型号为：AW1920TS",
    "writer" : "robot",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 21,
    "title" : "你的开机速度是多少？",
    "content" : "晒晒你的电脑的开机速度吧~~~",
    "writer" : "honme",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 22,
    "title" : "谷歌浏览器支持富文本，IE不支持！",
    "content" : "<p>\r\n\t<span style=\"font-size:1...",
    "writer" : "erick",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 23,
    "title" : "清华同方显示器的报价，型号AW1920TS",
    "content" : "<p>\r\n\twww.baidu.com</p>\r\n<p>\r\n...",
    "writer" : "bimy",
    "writeDate" : "2016-06-30",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 24,
    "title" : "明天有雨吗？",
    "content" : "<p>\r\n\t天气预报说有雨，你们说会下吗</p>\r\n",
    "writer" : "郭燕",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 25,
    "title" : "苹果手机壳哪有卖的？",
    "content" : "",
    "writer" : "uidn",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 26,
    "title" : "今天下雪吗？",
    "content" : "<p>\r\n\t下雪？</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-01",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 27,
    "title" : "今天谁带U盘了？",
    "content" : "<p>\r\n\t借我用一下。谢谢！</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-02",
    "count" : 1,
    "reverts" : null
  } ]
}
2019-07-24 22:26:43,852 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message; UPDATE message SET message.`count`=(SELECT COUNT(*) FROM revert WHERE message.`messageID`=revert.`messageID`); 
2019-07-24 22:26:43,852 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 22:26:43,861 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 22:26:43,862 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 12
2019-07-24 22:26:43,862 DEBUG (MessageController.java:37)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 16,
    "title" : "今天有雷阵雨吗？",
    "content" : "今天到底有没有雷阵雨？？？",
    "writer" : "guest",
    "writeDate" : "2016-06-30",
    "count" : 2,
    "reverts" : null
  }, {
    "messageId" : 17,
    "title" : "中午吃什么？",
    "content" : "土豆红烧肉？还是糖醋里脊？",
    "writer" : "zhangsan",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 18,
    "title" : "今天装空调了！",
    "content" : "O(∩_∩)O哈哈~",
    "writer" : "quit",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 19,
    "title" : "众创梦工厂地址？",
    "content" : "求地址？",
    "writer" : "uret",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 20,
    "title" : "清华同方显示器价格？",
    "content" : "型号为：AW1920TS",
    "writer" : "robot",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 21,
    "title" : "你的开机速度是多少？",
    "content" : "晒晒你的电脑的开机速度吧~~~",
    "writer" : "honme",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 22,
    "title" : "谷歌浏览器支持富文本，IE不支持！",
    "content" : "<p>\r\n\t<span style=\"font-size:1...",
    "writer" : "erick",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 23,
    "title" : "清华同方显示器的报价，型号AW1920TS",
    "content" : "<p>\r\n\twww.baidu.com</p>\r\n<p>\r\n...",
    "writer" : "bimy",
    "writeDate" : "2016-06-30",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 24,
    "title" : "明天有雨吗？",
    "content" : "<p>\r\n\t天气预报说有雨，你们说会下吗</p>\r\n",
    "writer" : "郭燕",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 25,
    "title" : "苹果手机壳哪有卖的？",
    "content" : "",
    "writer" : "uidn",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 26,
    "title" : "今天下雪吗？",
    "content" : "<p>\r\n\t下雪？</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-01",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 27,
    "title" : "今天谁带U盘了？",
    "content" : "<p>\r\n\t借我用一下。谢谢！</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-02",
    "count" : 1,
    "reverts" : null
  } ]
}
2019-07-24 22:30:48,458 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message; UPDATE message SET message.`count`=(SELECT COUNT(*) FROM revert WHERE message.`messageID`=revert.`messageID`); 
2019-07-24 22:30:48,462 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 22:30:48,474 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 22:30:48,474 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 12
2019-07-24 22:30:48,478 DEBUG (MessageController.java:37)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 16,
    "title" : "今天有雷阵雨吗？",
    "content" : "今天到底有没有雷阵雨？？？",
    "writer" : "guest",
    "writeDate" : "2016-06-30",
    "count" : 2,
    "reverts" : null
  }, {
    "messageId" : 17,
    "title" : "中午吃什么？",
    "content" : "土豆红烧肉？还是糖醋里脊？",
    "writer" : "zhangsan",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 18,
    "title" : "今天装空调了！",
    "content" : "O(∩_∩)O哈哈~",
    "writer" : "quit",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 19,
    "title" : "众创梦工厂地址？",
    "content" : "求地址？",
    "writer" : "uret",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 20,
    "title" : "清华同方显示器价格？",
    "content" : "型号为：AW1920TS",
    "writer" : "robot",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 21,
    "title" : "你的开机速度是多少？",
    "content" : "晒晒你的电脑的开机速度吧~~~",
    "writer" : "honme",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 22,
    "title" : "谷歌浏览器支持富文本，IE不支持！",
    "content" : "<p>\r\n\t<span style=\"font-size:1...",
    "writer" : "erick",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 23,
    "title" : "清华同方显示器的报价，型号AW1920TS",
    "content" : "<p>\r\n\twww.baidu.com</p>\r\n<p>\r\n...",
    "writer" : "bimy",
    "writeDate" : "2016-06-30",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 24,
    "title" : "明天有雨吗？",
    "content" : "<p>\r\n\t天气预报说有雨，你们说会下吗</p>\r\n",
    "writer" : "郭燕",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 25,
    "title" : "苹果手机壳哪有卖的？",
    "content" : "",
    "writer" : "uidn",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 26,
    "title" : "今天下雪吗？",
    "content" : "<p>\r\n\t下雪？</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-01",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 27,
    "title" : "今天谁带U盘了？",
    "content" : "<p>\r\n\t借我用一下。谢谢！</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-02",
    "count" : 1,
    "reverts" : null
  } ]
}
2019-07-24 22:30:50,607 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message; UPDATE message SET message.`count`=(SELECT COUNT(*) FROM revert WHERE message.`messageID`=revert.`messageID`); 
2019-07-24 22:30:50,612 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 22:30:50,626 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 22:30:50,627 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 12
2019-07-24 22:30:50,629 DEBUG (MessageController.java:37)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 16,
    "title" : "今天有雷阵雨吗？",
    "content" : "今天到底有没有雷阵雨？？？",
    "writer" : "guest",
    "writeDate" : "2016-06-30",
    "count" : 2,
    "reverts" : null
  }, {
    "messageId" : 17,
    "title" : "中午吃什么？",
    "content" : "土豆红烧肉？还是糖醋里脊？",
    "writer" : "zhangsan",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 18,
    "title" : "今天装空调了！",
    "content" : "O(∩_∩)O哈哈~",
    "writer" : "quit",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 19,
    "title" : "众创梦工厂地址？",
    "content" : "求地址？",
    "writer" : "uret",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 20,
    "title" : "清华同方显示器价格？",
    "content" : "型号为：AW1920TS",
    "writer" : "robot",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 21,
    "title" : "你的开机速度是多少？",
    "content" : "晒晒你的电脑的开机速度吧~~~",
    "writer" : "honme",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 22,
    "title" : "谷歌浏览器支持富文本，IE不支持！",
    "content" : "<p>\r\n\t<span style=\"font-size:1...",
    "writer" : "erick",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 23,
    "title" : "清华同方显示器的报价，型号AW1920TS",
    "content" : "<p>\r\n\twww.baidu.com</p>\r\n<p>\r\n...",
    "writer" : "bimy",
    "writeDate" : "2016-06-30",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 24,
    "title" : "明天有雨吗？",
    "content" : "<p>\r\n\t天气预报说有雨，你们说会下吗</p>\r\n",
    "writer" : "郭燕",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 25,
    "title" : "苹果手机壳哪有卖的？",
    "content" : "",
    "writer" : "uidn",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 26,
    "title" : "今天下雪吗？",
    "content" : "<p>\r\n\t下雪？</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-01",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 27,
    "title" : "今天谁带U盘了？",
    "content" : "<p>\r\n\t借我用一下。谢谢！</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-02",
    "count" : 1,
    "reverts" : null
  } ]
}
2019-07-24 22:30:54,225 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message; UPDATE message SET message.`count`=(SELECT COUNT(*) FROM revert WHERE message.`messageID`=revert.`messageID`); 
2019-07-24 22:30:54,229 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 22:30:54,240 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 22:30:54,240 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 12
2019-07-24 22:30:54,244 DEBUG (MessageController.java:37)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 16,
    "title" : "今天有雷阵雨吗？",
    "content" : "今天到底有没有雷阵雨？？？",
    "writer" : "guest",
    "writeDate" : "2016-06-30",
    "count" : 2,
    "reverts" : null
  }, {
    "messageId" : 17,
    "title" : "中午吃什么？",
    "content" : "土豆红烧肉？还是糖醋里脊？",
    "writer" : "zhangsan",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 18,
    "title" : "今天装空调了！",
    "content" : "O(∩_∩)O哈哈~",
    "writer" : "quit",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 19,
    "title" : "众创梦工厂地址？",
    "content" : "求地址？",
    "writer" : "uret",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 20,
    "title" : "清华同方显示器价格？",
    "content" : "型号为：AW1920TS",
    "writer" : "robot",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 21,
    "title" : "你的开机速度是多少？",
    "content" : "晒晒你的电脑的开机速度吧~~~",
    "writer" : "honme",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 22,
    "title" : "谷歌浏览器支持富文本，IE不支持！",
    "content" : "<p>\r\n\t<span style=\"font-size:1...",
    "writer" : "erick",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 23,
    "title" : "清华同方显示器的报价，型号AW1920TS",
    "content" : "<p>\r\n\twww.baidu.com</p>\r\n<p>\r\n...",
    "writer" : "bimy",
    "writeDate" : "2016-06-30",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 24,
    "title" : "明天有雨吗？",
    "content" : "<p>\r\n\t天气预报说有雨，你们说会下吗</p>\r\n",
    "writer" : "郭燕",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 25,
    "title" : "苹果手机壳哪有卖的？",
    "content" : "",
    "writer" : "uidn",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 26,
    "title" : "今天下雪吗？",
    "content" : "<p>\r\n\t下雪？</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-01",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 27,
    "title" : "今天谁带U盘了？",
    "content" : "<p>\r\n\t借我用一下。谢谢！</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-02",
    "count" : 1,
    "reverts" : null
  } ]
}
2019-07-24 22:31:16,174 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message; UPDATE message SET message.`count`=(SELECT COUNT(*) FROM revert WHERE message.`messageID`=revert.`messageID`); 
2019-07-24 22:31:16,177 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 22:31:16,183 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 22:31:16,183 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 12
2019-07-24 22:31:16,183 DEBUG (MessageController.java:37)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 16,
    "title" : "今天有雷阵雨吗？",
    "content" : "今天到底有没有雷阵雨？？？",
    "writer" : "guest",
    "writeDate" : "2016-06-30",
    "count" : 2,
    "reverts" : null
  }, {
    "messageId" : 17,
    "title" : "中午吃什么？",
    "content" : "土豆红烧肉？还是糖醋里脊？",
    "writer" : "zhangsan",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 18,
    "title" : "今天装空调了！",
    "content" : "O(∩_∩)O哈哈~",
    "writer" : "quit",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 19,
    "title" : "众创梦工厂地址？",
    "content" : "求地址？",
    "writer" : "uret",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 20,
    "title" : "清华同方显示器价格？",
    "content" : "型号为：AW1920TS",
    "writer" : "robot",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 21,
    "title" : "你的开机速度是多少？",
    "content" : "晒晒你的电脑的开机速度吧~~~",
    "writer" : "honme",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 22,
    "title" : "谷歌浏览器支持富文本，IE不支持！",
    "content" : "<p>\r\n\t<span style=\"font-size:1...",
    "writer" : "erick",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 23,
    "title" : "清华同方显示器的报价，型号AW1920TS",
    "content" : "<p>\r\n\twww.baidu.com</p>\r\n<p>\r\n...",
    "writer" : "bimy",
    "writeDate" : "2016-06-30",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 24,
    "title" : "明天有雨吗？",
    "content" : "<p>\r\n\t天气预报说有雨，你们说会下吗</p>\r\n",
    "writer" : "郭燕",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 25,
    "title" : "苹果手机壳哪有卖的？",
    "content" : "",
    "writer" : "uidn",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 26,
    "title" : "今天下雪吗？",
    "content" : "<p>\r\n\t下雪？</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-01",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 27,
    "title" : "今天谁带U盘了？",
    "content" : "<p>\r\n\t借我用一下。谢谢！</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-02",
    "count" : 1,
    "reverts" : null
  } ]
}
2019-07-24 22:31:18,775 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message; UPDATE message SET message.`count`=(SELECT COUNT(*) FROM revert WHERE message.`messageID`=revert.`messageID`); 
2019-07-24 22:31:18,775 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 22:31:18,788 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 22:31:18,788 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 12
2019-07-24 22:31:18,788 DEBUG (MessageController.java:37)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 16,
    "title" : "今天有雷阵雨吗？",
    "content" : "今天到底有没有雷阵雨？？？",
    "writer" : "guest",
    "writeDate" : "2016-06-30",
    "count" : 2,
    "reverts" : null
  }, {
    "messageId" : 17,
    "title" : "中午吃什么？",
    "content" : "土豆红烧肉？还是糖醋里脊？",
    "writer" : "zhangsan",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 18,
    "title" : "今天装空调了！",
    "content" : "O(∩_∩)O哈哈~",
    "writer" : "quit",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 19,
    "title" : "众创梦工厂地址？",
    "content" : "求地址？",
    "writer" : "uret",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 20,
    "title" : "清华同方显示器价格？",
    "content" : "型号为：AW1920TS",
    "writer" : "robot",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 21,
    "title" : "你的开机速度是多少？",
    "content" : "晒晒你的电脑的开机速度吧~~~",
    "writer" : "honme",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 22,
    "title" : "谷歌浏览器支持富文本，IE不支持！",
    "content" : "<p>\r\n\t<span style=\"font-size:1...",
    "writer" : "erick",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 23,
    "title" : "清华同方显示器的报价，型号AW1920TS",
    "content" : "<p>\r\n\twww.baidu.com</p>\r\n<p>\r\n...",
    "writer" : "bimy",
    "writeDate" : "2016-06-30",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 24,
    "title" : "明天有雨吗？",
    "content" : "<p>\r\n\t天气预报说有雨，你们说会下吗</p>\r\n",
    "writer" : "郭燕",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 25,
    "title" : "苹果手机壳哪有卖的？",
    "content" : "",
    "writer" : "uidn",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 26,
    "title" : "今天下雪吗？",
    "content" : "<p>\r\n\t下雪？</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-01",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 27,
    "title" : "今天谁带U盘了？",
    "content" : "<p>\r\n\t借我用一下。谢谢！</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-02",
    "count" : 1,
    "reverts" : null
  } ]
}
2019-07-24 22:31:20,853 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message; UPDATE message SET message.`count`=(SELECT COUNT(*) FROM revert WHERE message.`messageID`=revert.`messageID`); 
2019-07-24 22:31:20,854 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 22:31:20,869 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 22:31:20,871 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 12
2019-07-24 22:31:20,873 DEBUG (MessageController.java:37)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 16,
    "title" : "今天有雷阵雨吗？",
    "content" : "今天到底有没有雷阵雨？？？",
    "writer" : "guest",
    "writeDate" : "2016-06-30",
    "count" : 2,
    "reverts" : null
  }, {
    "messageId" : 17,
    "title" : "中午吃什么？",
    "content" : "土豆红烧肉？还是糖醋里脊？",
    "writer" : "zhangsan",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 18,
    "title" : "今天装空调了！",
    "content" : "O(∩_∩)O哈哈~",
    "writer" : "quit",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 19,
    "title" : "众创梦工厂地址？",
    "content" : "求地址？",
    "writer" : "uret",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 20,
    "title" : "清华同方显示器价格？",
    "content" : "型号为：AW1920TS",
    "writer" : "robot",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 21,
    "title" : "你的开机速度是多少？",
    "content" : "晒晒你的电脑的开机速度吧~~~",
    "writer" : "honme",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 22,
    "title" : "谷歌浏览器支持富文本，IE不支持！",
    "content" : "<p>\r\n\t<span style=\"font-size:1...",
    "writer" : "erick",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 23,
    "title" : "清华同方显示器的报价，型号AW1920TS",
    "content" : "<p>\r\n\twww.baidu.com</p>\r\n<p>\r\n...",
    "writer" : "bimy",
    "writeDate" : "2016-06-30",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 24,
    "title" : "明天有雨吗？",
    "content" : "<p>\r\n\t天气预报说有雨，你们说会下吗</p>\r\n",
    "writer" : "郭燕",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 25,
    "title" : "苹果手机壳哪有卖的？",
    "content" : "",
    "writer" : "uidn",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 26,
    "title" : "今天下雪吗？",
    "content" : "<p>\r\n\t下雪？</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-01",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 27,
    "title" : "今天谁带U盘了？",
    "content" : "<p>\r\n\t借我用一下。谢谢！</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-02",
    "count" : 1,
    "reverts" : null
  } ]
}
2019-07-24 22:31:34,783 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message; UPDATE message SET message.`count`=(SELECT COUNT(*) FROM revert WHERE message.`messageID`=revert.`messageID`); 
2019-07-24 22:31:34,787 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 22:31:34,794 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 22:31:34,794 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 12
2019-07-24 22:31:34,794 DEBUG (MessageController.java:37)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 16,
    "title" : "今天有雷阵雨吗？",
    "content" : "今天到底有没有雷阵雨？？？",
    "writer" : "guest",
    "writeDate" : "2016-06-30",
    "count" : 2,
    "reverts" : null
  }, {
    "messageId" : 17,
    "title" : "中午吃什么？",
    "content" : "土豆红烧肉？还是糖醋里脊？",
    "writer" : "zhangsan",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 18,
    "title" : "今天装空调了！",
    "content" : "O(∩_∩)O哈哈~",
    "writer" : "quit",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 19,
    "title" : "众创梦工厂地址？",
    "content" : "求地址？",
    "writer" : "uret",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 20,
    "title" : "清华同方显示器价格？",
    "content" : "型号为：AW1920TS",
    "writer" : "robot",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 21,
    "title" : "你的开机速度是多少？",
    "content" : "晒晒你的电脑的开机速度吧~~~",
    "writer" : "honme",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 22,
    "title" : "谷歌浏览器支持富文本，IE不支持！",
    "content" : "<p>\r\n\t<span style=\"font-size:1...",
    "writer" : "erick",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 23,
    "title" : "清华同方显示器的报价，型号AW1920TS",
    "content" : "<p>\r\n\twww.baidu.com</p>\r\n<p>\r\n...",
    "writer" : "bimy",
    "writeDate" : "2016-06-30",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 24,
    "title" : "明天有雨吗？",
    "content" : "<p>\r\n\t天气预报说有雨，你们说会下吗</p>\r\n",
    "writer" : "郭燕",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 25,
    "title" : "苹果手机壳哪有卖的？",
    "content" : "",
    "writer" : "uidn",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 26,
    "title" : "今天下雪吗？",
    "content" : "<p>\r\n\t下雪？</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-01",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 27,
    "title" : "今天谁带U盘了？",
    "content" : "<p>\r\n\t借我用一下。谢谢！</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-02",
    "count" : 1,
    "reverts" : null
  } ]
}
2019-07-24 22:31:37,478 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message; UPDATE message SET message.`count`=(SELECT COUNT(*) FROM revert WHERE message.`messageID`=revert.`messageID`); 
2019-07-24 22:31:37,482 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 22:31:37,486 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 22:31:37,490 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 12
2019-07-24 22:31:37,490 DEBUG (MessageController.java:37)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 16,
    "title" : "今天有雷阵雨吗？",
    "content" : "今天到底有没有雷阵雨？？？",
    "writer" : "guest",
    "writeDate" : "2016-06-30",
    "count" : 2,
    "reverts" : null
  }, {
    "messageId" : 17,
    "title" : "中午吃什么？",
    "content" : "土豆红烧肉？还是糖醋里脊？",
    "writer" : "zhangsan",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 18,
    "title" : "今天装空调了！",
    "content" : "O(∩_∩)O哈哈~",
    "writer" : "quit",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 19,
    "title" : "众创梦工厂地址？",
    "content" : "求地址？",
    "writer" : "uret",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 20,
    "title" : "清华同方显示器价格？",
    "content" : "型号为：AW1920TS",
    "writer" : "robot",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 21,
    "title" : "你的开机速度是多少？",
    "content" : "晒晒你的电脑的开机速度吧~~~",
    "writer" : "honme",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 22,
    "title" : "谷歌浏览器支持富文本，IE不支持！",
    "content" : "<p>\r\n\t<span style=\"font-size:1...",
    "writer" : "erick",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 23,
    "title" : "清华同方显示器的报价，型号AW1920TS",
    "content" : "<p>\r\n\twww.baidu.com</p>\r\n<p>\r\n...",
    "writer" : "bimy",
    "writeDate" : "2016-06-30",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 24,
    "title" : "明天有雨吗？",
    "content" : "<p>\r\n\t天气预报说有雨，你们说会下吗</p>\r\n",
    "writer" : "郭燕",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 25,
    "title" : "苹果手机壳哪有卖的？",
    "content" : "",
    "writer" : "uidn",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 26,
    "title" : "今天下雪吗？",
    "content" : "<p>\r\n\t下雪？</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-01",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 27,
    "title" : "今天谁带U盘了？",
    "content" : "<p>\r\n\t借我用一下。谢谢！</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-02",
    "count" : 1,
    "reverts" : null
  } ]
}
2019-07-24 22:32:04,322 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message; UPDATE message SET message.`count`=(SELECT COUNT(*) FROM revert WHERE message.`messageID`=revert.`messageID`); 
2019-07-24 22:32:04,322 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 22:32:04,330 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 22:32:04,334 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 12
2019-07-24 22:32:04,334 DEBUG (MessageController.java:37)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 16,
    "title" : "今天有雷阵雨吗？",
    "content" : "今天到底有没有雷阵雨？？？",
    "writer" : "guest",
    "writeDate" : "2016-06-30",
    "count" : 2,
    "reverts" : null
  }, {
    "messageId" : 17,
    "title" : "中午吃什么？",
    "content" : "土豆红烧肉？还是糖醋里脊？",
    "writer" : "zhangsan",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 18,
    "title" : "今天装空调了！",
    "content" : "O(∩_∩)O哈哈~",
    "writer" : "quit",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 19,
    "title" : "众创梦工厂地址？",
    "content" : "求地址？",
    "writer" : "uret",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 20,
    "title" : "清华同方显示器价格？",
    "content" : "型号为：AW1920TS",
    "writer" : "robot",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 21,
    "title" : "你的开机速度是多少？",
    "content" : "晒晒你的电脑的开机速度吧~~~",
    "writer" : "honme",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 22,
    "title" : "谷歌浏览器支持富文本，IE不支持！",
    "content" : "<p>\r\n\t<span style=\"font-size:1...",
    "writer" : "erick",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 23,
    "title" : "清华同方显示器的报价，型号AW1920TS",
    "content" : "<p>\r\n\twww.baidu.com</p>\r\n<p>\r\n...",
    "writer" : "bimy",
    "writeDate" : "2016-06-30",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 24,
    "title" : "明天有雨吗？",
    "content" : "<p>\r\n\t天气预报说有雨，你们说会下吗</p>\r\n",
    "writer" : "郭燕",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 25,
    "title" : "苹果手机壳哪有卖的？",
    "content" : "",
    "writer" : "uidn",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 26,
    "title" : "今天下雪吗？",
    "content" : "<p>\r\n\t下雪？</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-01",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 27,
    "title" : "今天谁带U盘了？",
    "content" : "<p>\r\n\t借我用一下。谢谢！</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-02",
    "count" : 1,
    "reverts" : null
  } ]
}
2019-07-24 22:32:07,779 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message; UPDATE message SET message.`count`=(SELECT COUNT(*) FROM revert WHERE message.`messageID`=revert.`messageID`); 
2019-07-24 22:32:07,779 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 22:32:07,788 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 22:32:07,788 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 12
2019-07-24 22:32:07,792 DEBUG (MessageController.java:37)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 16,
    "title" : "今天有雷阵雨吗？",
    "content" : "今天到底有没有雷阵雨？？？",
    "writer" : "guest",
    "writeDate" : "2016-06-30",
    "count" : 2,
    "reverts" : null
  }, {
    "messageId" : 17,
    "title" : "中午吃什么？",
    "content" : "土豆红烧肉？还是糖醋里脊？",
    "writer" : "zhangsan",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 18,
    "title" : "今天装空调了！",
    "content" : "O(∩_∩)O哈哈~",
    "writer" : "quit",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 19,
    "title" : "众创梦工厂地址？",
    "content" : "求地址？",
    "writer" : "uret",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 20,
    "title" : "清华同方显示器价格？",
    "content" : "型号为：AW1920TS",
    "writer" : "robot",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 21,
    "title" : "你的开机速度是多少？",
    "content" : "晒晒你的电脑的开机速度吧~~~",
    "writer" : "honme",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 22,
    "title" : "谷歌浏览器支持富文本，IE不支持！",
    "content" : "<p>\r\n\t<span style=\"font-size:1...",
    "writer" : "erick",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 23,
    "title" : "清华同方显示器的报价，型号AW1920TS",
    "content" : "<p>\r\n\twww.baidu.com</p>\r\n<p>\r\n...",
    "writer" : "bimy",
    "writeDate" : "2016-06-30",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 24,
    "title" : "明天有雨吗？",
    "content" : "<p>\r\n\t天气预报说有雨，你们说会下吗</p>\r\n",
    "writer" : "郭燕",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 25,
    "title" : "苹果手机壳哪有卖的？",
    "content" : "",
    "writer" : "uidn",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 26,
    "title" : "今天下雪吗？",
    "content" : "<p>\r\n\t下雪？</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-01",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 27,
    "title" : "今天谁带U盘了？",
    "content" : "<p>\r\n\t借我用一下。谢谢！</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-02",
    "count" : 1,
    "reverts" : null
  } ]
}
2019-07-24 22:32:08,730 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message; UPDATE message SET message.`count`=(SELECT COUNT(*) FROM revert WHERE message.`messageID`=revert.`messageID`); 
2019-07-24 22:32:08,734 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 22:32:08,742 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 22:32:08,742 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 12
2019-07-24 22:32:08,746 DEBUG (MessageController.java:37)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 16,
    "title" : "今天有雷阵雨吗？",
    "content" : "今天到底有没有雷阵雨？？？",
    "writer" : "guest",
    "writeDate" : "2016-06-30",
    "count" : 2,
    "reverts" : null
  }, {
    "messageId" : 17,
    "title" : "中午吃什么？",
    "content" : "土豆红烧肉？还是糖醋里脊？",
    "writer" : "zhangsan",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 18,
    "title" : "今天装空调了！",
    "content" : "O(∩_∩)O哈哈~",
    "writer" : "quit",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 19,
    "title" : "众创梦工厂地址？",
    "content" : "求地址？",
    "writer" : "uret",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 20,
    "title" : "清华同方显示器价格？",
    "content" : "型号为：AW1920TS",
    "writer" : "robot",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 21,
    "title" : "你的开机速度是多少？",
    "content" : "晒晒你的电脑的开机速度吧~~~",
    "writer" : "honme",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 22,
    "title" : "谷歌浏览器支持富文本，IE不支持！",
    "content" : "<p>\r\n\t<span style=\"font-size:1...",
    "writer" : "erick",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 23,
    "title" : "清华同方显示器的报价，型号AW1920TS",
    "content" : "<p>\r\n\twww.baidu.com</p>\r\n<p>\r\n...",
    "writer" : "bimy",
    "writeDate" : "2016-06-30",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 24,
    "title" : "明天有雨吗？",
    "content" : "<p>\r\n\t天气预报说有雨，你们说会下吗</p>\r\n",
    "writer" : "郭燕",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 25,
    "title" : "苹果手机壳哪有卖的？",
    "content" : "",
    "writer" : "uidn",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 26,
    "title" : "今天下雪吗？",
    "content" : "<p>\r\n\t下雪？</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-01",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 27,
    "title" : "今天谁带U盘了？",
    "content" : "<p>\r\n\t借我用一下。谢谢！</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-02",
    "count" : 1,
    "reverts" : null
  } ]
}
2019-07-24 22:32:21,444 ERROR (BaseController.java:258)- 参数类型错误
org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'int'; nested exception is java.lang.NumberFormatException: For input string: ""
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:132)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:126)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NumberFormatException: For input string: ""
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Integer.parseInt(Integer.java:592)
	at java.lang.Integer.valueOf(Integer.java:766)
	at org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:211)
	at org.springframework.beans.propertyeditors.CustomNumberEditor.setAsText(CustomNumberEditor.java:115)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:429)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:402)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:155)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:73)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53)
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:693)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:124)
	... 51 common frames omitted
2019-07-24 22:32:33,901 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message; UPDATE message SET message.`count`=(SELECT COUNT(*) FROM revert WHERE message.`messageID`=revert.`messageID`); 
2019-07-24 22:32:33,902 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 22:32:33,909 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 22:32:33,910 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 12
2019-07-24 22:32:33,911 DEBUG (MessageController.java:37)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 16,
    "title" : "今天有雷阵雨吗？",
    "content" : "今天到底有没有雷阵雨？？？",
    "writer" : "guest",
    "writeDate" : "2016-06-30",
    "count" : 2,
    "reverts" : null
  }, {
    "messageId" : 17,
    "title" : "中午吃什么？",
    "content" : "土豆红烧肉？还是糖醋里脊？",
    "writer" : "zhangsan",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 18,
    "title" : "今天装空调了！",
    "content" : "O(∩_∩)O哈哈~",
    "writer" : "quit",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 19,
    "title" : "众创梦工厂地址？",
    "content" : "求地址？",
    "writer" : "uret",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 20,
    "title" : "清华同方显示器价格？",
    "content" : "型号为：AW1920TS",
    "writer" : "robot",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 21,
    "title" : "你的开机速度是多少？",
    "content" : "晒晒你的电脑的开机速度吧~~~",
    "writer" : "honme",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 22,
    "title" : "谷歌浏览器支持富文本，IE不支持！",
    "content" : "<p>\r\n\t<span style=\"font-size:1...",
    "writer" : "erick",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 23,
    "title" : "清华同方显示器的报价，型号AW1920TS",
    "content" : "<p>\r\n\twww.baidu.com</p>\r\n<p>\r\n...",
    "writer" : "bimy",
    "writeDate" : "2016-06-30",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 24,
    "title" : "明天有雨吗？",
    "content" : "<p>\r\n\t天气预报说有雨，你们说会下吗</p>\r\n",
    "writer" : "郭燕",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 25,
    "title" : "苹果手机壳哪有卖的？",
    "content" : "",
    "writer" : "uidn",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 26,
    "title" : "今天下雪吗？",
    "content" : "<p>\r\n\t下雪？</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-01",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 27,
    "title" : "今天谁带U盘了？",
    "content" : "<p>\r\n\t借我用一下。谢谢！</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-02",
    "count" : 1,
    "reverts" : null
  } ]
}
2019-07-24 22:37:20,173 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message; UPDATE message SET message.`count`=(SELECT COUNT(*) FROM revert WHERE message.`messageID`=revert.`messageID`); 
2019-07-24 22:37:20,173 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 22:37:20,185 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 22:37:20,185 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 12
2019-07-24 22:37:20,185 DEBUG (MessageController.java:37)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 16,
    "title" : "今天有雷阵雨吗？",
    "content" : "今天到底有没有雷阵雨？？？",
    "writer" : "guest",
    "writeDate" : "2016-06-30",
    "count" : 2,
    "reverts" : null
  }, {
    "messageId" : 17,
    "title" : "中午吃什么？",
    "content" : "土豆红烧肉？还是糖醋里脊？",
    "writer" : "zhangsan",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 18,
    "title" : "今天装空调了！",
    "content" : "O(∩_∩)O哈哈~",
    "writer" : "quit",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 19,
    "title" : "众创梦工厂地址？",
    "content" : "求地址？",
    "writer" : "uret",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 20,
    "title" : "清华同方显示器价格？",
    "content" : "型号为：AW1920TS",
    "writer" : "robot",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 21,
    "title" : "你的开机速度是多少？",
    "content" : "晒晒你的电脑的开机速度吧~~~",
    "writer" : "honme",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 22,
    "title" : "谷歌浏览器支持富文本，IE不支持！",
    "content" : "<p>\r\n\t<span style=\"font-size:1...",
    "writer" : "erick",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 23,
    "title" : "清华同方显示器的报价，型号AW1920TS",
    "content" : "<p>\r\n\twww.baidu.com</p>\r\n<p>\r\n...",
    "writer" : "bimy",
    "writeDate" : "2016-06-30",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 24,
    "title" : "明天有雨吗？",
    "content" : "<p>\r\n\t天气预报说有雨，你们说会下吗</p>\r\n",
    "writer" : "郭燕",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 25,
    "title" : "苹果手机壳哪有卖的？",
    "content" : "",
    "writer" : "uidn",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 26,
    "title" : "今天下雪吗？",
    "content" : "<p>\r\n\t下雪？</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-01",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 27,
    "title" : "今天谁带U盘了？",
    "content" : "<p>\r\n\t借我用一下。谢谢！</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-02",
    "count" : 1,
    "reverts" : null
  } ]
}
2019-07-24 22:37:23,376 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message; UPDATE message SET message.`count`=(SELECT COUNT(*) FROM revert WHERE message.`messageID`=revert.`messageID`); 
2019-07-24 22:37:23,378 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 22:37:23,390 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 22:37:23,391 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 12
2019-07-24 22:37:23,393 DEBUG (MessageController.java:37)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 16,
    "title" : "今天有雷阵雨吗？",
    "content" : "今天到底有没有雷阵雨？？？",
    "writer" : "guest",
    "writeDate" : "2016-06-30",
    "count" : 2,
    "reverts" : null
  }, {
    "messageId" : 17,
    "title" : "中午吃什么？",
    "content" : "土豆红烧肉？还是糖醋里脊？",
    "writer" : "zhangsan",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 18,
    "title" : "今天装空调了！",
    "content" : "O(∩_∩)O哈哈~",
    "writer" : "quit",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 19,
    "title" : "众创梦工厂地址？",
    "content" : "求地址？",
    "writer" : "uret",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 20,
    "title" : "清华同方显示器价格？",
    "content" : "型号为：AW1920TS",
    "writer" : "robot",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 21,
    "title" : "你的开机速度是多少？",
    "content" : "晒晒你的电脑的开机速度吧~~~",
    "writer" : "honme",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 22,
    "title" : "谷歌浏览器支持富文本，IE不支持！",
    "content" : "<p>\r\n\t<span style=\"font-size:1...",
    "writer" : "erick",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 23,
    "title" : "清华同方显示器的报价，型号AW1920TS",
    "content" : "<p>\r\n\twww.baidu.com</p>\r\n<p>\r\n...",
    "writer" : "bimy",
    "writeDate" : "2016-06-30",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 24,
    "title" : "明天有雨吗？",
    "content" : "<p>\r\n\t天气预报说有雨，你们说会下吗</p>\r\n",
    "writer" : "郭燕",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 25,
    "title" : "苹果手机壳哪有卖的？",
    "content" : "",
    "writer" : "uidn",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 26,
    "title" : "今天下雪吗？",
    "content" : "<p>\r\n\t下雪？</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-01",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 27,
    "title" : "今天谁带U盘了？",
    "content" : "<p>\r\n\t借我用一下。谢谢！</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-02",
    "count" : 1,
    "reverts" : null
  } ]
}
2019-07-24 22:37:38,793 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message; UPDATE message SET message.`count`=(SELECT COUNT(*) FROM revert WHERE message.`messageID`=revert.`messageID`); 
2019-07-24 22:37:38,793 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 22:37:38,803 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 22:37:38,803 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 12
2019-07-24 22:37:38,806 DEBUG (MessageController.java:37)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 16,
    "title" : "今天有雷阵雨吗？",
    "content" : "今天到底有没有雷阵雨？？？",
    "writer" : "guest",
    "writeDate" : "2016-06-30",
    "count" : 2,
    "reverts" : null
  }, {
    "messageId" : 17,
    "title" : "中午吃什么？",
    "content" : "土豆红烧肉？还是糖醋里脊？",
    "writer" : "zhangsan",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 18,
    "title" : "今天装空调了！",
    "content" : "O(∩_∩)O哈哈~",
    "writer" : "quit",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 19,
    "title" : "众创梦工厂地址？",
    "content" : "求地址？",
    "writer" : "uret",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 20,
    "title" : "清华同方显示器价格？",
    "content" : "型号为：AW1920TS",
    "writer" : "robot",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 21,
    "title" : "你的开机速度是多少？",
    "content" : "晒晒你的电脑的开机速度吧~~~",
    "writer" : "honme",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 22,
    "title" : "谷歌浏览器支持富文本，IE不支持！",
    "content" : "<p>\r\n\t<span style=\"font-size:1...",
    "writer" : "erick",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 23,
    "title" : "清华同方显示器的报价，型号AW1920TS",
    "content" : "<p>\r\n\twww.baidu.com</p>\r\n<p>\r\n...",
    "writer" : "bimy",
    "writeDate" : "2016-06-30",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 24,
    "title" : "明天有雨吗？",
    "content" : "<p>\r\n\t天气预报说有雨，你们说会下吗</p>\r\n",
    "writer" : "郭燕",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 25,
    "title" : "苹果手机壳哪有卖的？",
    "content" : "",
    "writer" : "uidn",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 26,
    "title" : "今天下雪吗？",
    "content" : "<p>\r\n\t下雪？</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-01",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 27,
    "title" : "今天谁带U盘了？",
    "content" : "<p>\r\n\t借我用一下。谢谢！</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-02",
    "count" : 1,
    "reverts" : null
  } ]
}
2019-07-24 22:37:41,058 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message; UPDATE message SET message.`count`=(SELECT COUNT(*) FROM revert WHERE message.`messageID`=revert.`messageID`); 
2019-07-24 22:37:41,058 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 22:37:41,066 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 22:37:41,066 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 12
2019-07-24 22:37:41,070 DEBUG (MessageController.java:37)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 16,
    "title" : "今天有雷阵雨吗？",
    "content" : "今天到底有没有雷阵雨？？？",
    "writer" : "guest",
    "writeDate" : "2016-06-30",
    "count" : 2,
    "reverts" : null
  }, {
    "messageId" : 17,
    "title" : "中午吃什么？",
    "content" : "土豆红烧肉？还是糖醋里脊？",
    "writer" : "zhangsan",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 18,
    "title" : "今天装空调了！",
    "content" : "O(∩_∩)O哈哈~",
    "writer" : "quit",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 19,
    "title" : "众创梦工厂地址？",
    "content" : "求地址？",
    "writer" : "uret",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 20,
    "title" : "清华同方显示器价格？",
    "content" : "型号为：AW1920TS",
    "writer" : "robot",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 21,
    "title" : "你的开机速度是多少？",
    "content" : "晒晒你的电脑的开机速度吧~~~",
    "writer" : "honme",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 22,
    "title" : "谷歌浏览器支持富文本，IE不支持！",
    "content" : "<p>\r\n\t<span style=\"font-size:1...",
    "writer" : "erick",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 23,
    "title" : "清华同方显示器的报价，型号AW1920TS",
    "content" : "<p>\r\n\twww.baidu.com</p>\r\n<p>\r\n...",
    "writer" : "bimy",
    "writeDate" : "2016-06-30",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 24,
    "title" : "明天有雨吗？",
    "content" : "<p>\r\n\t天气预报说有雨，你们说会下吗</p>\r\n",
    "writer" : "郭燕",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 25,
    "title" : "苹果手机壳哪有卖的？",
    "content" : "",
    "writer" : "uidn",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 26,
    "title" : "今天下雪吗？",
    "content" : "<p>\r\n\t下雪？</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-01",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 27,
    "title" : "今天谁带U盘了？",
    "content" : "<p>\r\n\t借我用一下。谢谢！</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-02",
    "count" : 1,
    "reverts" : null
  } ]
}
2019-07-24 22:37:43,169 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message; UPDATE message SET message.`count`=(SELECT COUNT(*) FROM revert WHERE message.`messageID`=revert.`messageID`); 
2019-07-24 22:37:43,169 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 22:37:43,177 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 22:37:43,181 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 12
2019-07-24 22:37:43,184 DEBUG (MessageController.java:37)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 16,
    "title" : "今天有雷阵雨吗？",
    "content" : "今天到底有没有雷阵雨？？？",
    "writer" : "guest",
    "writeDate" : "2016-06-30",
    "count" : 2,
    "reverts" : null
  }, {
    "messageId" : 17,
    "title" : "中午吃什么？",
    "content" : "土豆红烧肉？还是糖醋里脊？",
    "writer" : "zhangsan",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 18,
    "title" : "今天装空调了！",
    "content" : "O(∩_∩)O哈哈~",
    "writer" : "quit",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 19,
    "title" : "众创梦工厂地址？",
    "content" : "求地址？",
    "writer" : "uret",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 20,
    "title" : "清华同方显示器价格？",
    "content" : "型号为：AW1920TS",
    "writer" : "robot",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 21,
    "title" : "你的开机速度是多少？",
    "content" : "晒晒你的电脑的开机速度吧~~~",
    "writer" : "honme",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 22,
    "title" : "谷歌浏览器支持富文本，IE不支持！",
    "content" : "<p>\r\n\t<span style=\"font-size:1...",
    "writer" : "erick",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 23,
    "title" : "清华同方显示器的报价，型号AW1920TS",
    "content" : "<p>\r\n\twww.baidu.com</p>\r\n<p>\r\n...",
    "writer" : "bimy",
    "writeDate" : "2016-06-30",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 24,
    "title" : "明天有雨吗？",
    "content" : "<p>\r\n\t天气预报说有雨，你们说会下吗</p>\r\n",
    "writer" : "郭燕",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 25,
    "title" : "苹果手机壳哪有卖的？",
    "content" : "",
    "writer" : "uidn",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 26,
    "title" : "今天下雪吗？",
    "content" : "<p>\r\n\t下雪？</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-01",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 27,
    "title" : "今天谁带U盘了？",
    "content" : "<p>\r\n\t借我用一下。谢谢！</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-02",
    "count" : 1,
    "reverts" : null
  } ]
}
2019-07-24 22:41:50,748 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message; UPDATE message SET message.`count`=(SELECT COUNT(*) FROM revert WHERE message.`messageID`=revert.`messageID`); 
2019-07-24 22:41:50,752 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 22:41:50,760 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 22:41:50,760 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 12
2019-07-24 22:41:50,760 DEBUG (MessageController.java:37)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 16,
    "title" : "今天有雷阵雨吗？",
    "content" : "今天到底有没有雷阵雨？？？",
    "writer" : "guest",
    "writeDate" : "2016-06-30",
    "count" : 2,
    "reverts" : null
  }, {
    "messageId" : 17,
    "title" : "中午吃什么？",
    "content" : "土豆红烧肉？还是糖醋里脊？",
    "writer" : "zhangsan",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 18,
    "title" : "今天装空调了！",
    "content" : "O(∩_∩)O哈哈~",
    "writer" : "quit",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 19,
    "title" : "众创梦工厂地址？",
    "content" : "求地址？",
    "writer" : "uret",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 20,
    "title" : "清华同方显示器价格？",
    "content" : "型号为：AW1920TS",
    "writer" : "robot",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 21,
    "title" : "你的开机速度是多少？",
    "content" : "晒晒你的电脑的开机速度吧~~~",
    "writer" : "honme",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 22,
    "title" : "谷歌浏览器支持富文本，IE不支持！",
    "content" : "<p>\r\n\t<span style=\"font-size:1...",
    "writer" : "erick",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 23,
    "title" : "清华同方显示器的报价，型号AW1920TS",
    "content" : "<p>\r\n\twww.baidu.com</p>\r\n<p>\r\n...",
    "writer" : "bimy",
    "writeDate" : "2016-06-30",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 24,
    "title" : "明天有雨吗？",
    "content" : "<p>\r\n\t天气预报说有雨，你们说会下吗</p>\r\n",
    "writer" : "郭燕",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 25,
    "title" : "苹果手机壳哪有卖的？",
    "content" : "",
    "writer" : "uidn",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 26,
    "title" : "今天下雪吗？",
    "content" : "<p>\r\n\t下雪？</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-01",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 27,
    "title" : "今天谁带U盘了？",
    "content" : "<p>\r\n\t借我用一下。谢谢！</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-02",
    "count" : 1,
    "reverts" : null
  } ]
}
2019-07-24 22:41:54,471 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message; UPDATE message SET message.`count`=(SELECT COUNT(*) FROM revert WHERE message.`messageID`=revert.`messageID`); 
2019-07-24 22:41:54,471 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 22:41:54,479 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 22:41:54,479 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 12
2019-07-24 22:41:54,479 DEBUG (MessageController.java:37)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 16,
    "title" : "今天有雷阵雨吗？",
    "content" : "今天到底有没有雷阵雨？？？",
    "writer" : "guest",
    "writeDate" : "2016-06-30",
    "count" : 2,
    "reverts" : null
  }, {
    "messageId" : 17,
    "title" : "中午吃什么？",
    "content" : "土豆红烧肉？还是糖醋里脊？",
    "writer" : "zhangsan",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 18,
    "title" : "今天装空调了！",
    "content" : "O(∩_∩)O哈哈~",
    "writer" : "quit",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 19,
    "title" : "众创梦工厂地址？",
    "content" : "求地址？",
    "writer" : "uret",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 20,
    "title" : "清华同方显示器价格？",
    "content" : "型号为：AW1920TS",
    "writer" : "robot",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 21,
    "title" : "你的开机速度是多少？",
    "content" : "晒晒你的电脑的开机速度吧~~~",
    "writer" : "honme",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 22,
    "title" : "谷歌浏览器支持富文本，IE不支持！",
    "content" : "<p>\r\n\t<span style=\"font-size:1...",
    "writer" : "erick",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 23,
    "title" : "清华同方显示器的报价，型号AW1920TS",
    "content" : "<p>\r\n\twww.baidu.com</p>\r\n<p>\r\n...",
    "writer" : "bimy",
    "writeDate" : "2016-06-30",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 24,
    "title" : "明天有雨吗？",
    "content" : "<p>\r\n\t天气预报说有雨，你们说会下吗</p>\r\n",
    "writer" : "郭燕",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 25,
    "title" : "苹果手机壳哪有卖的？",
    "content" : "",
    "writer" : "uidn",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 26,
    "title" : "今天下雪吗？",
    "content" : "<p>\r\n\t下雪？</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-01",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 27,
    "title" : "今天谁带U盘了？",
    "content" : "<p>\r\n\t借我用一下。谢谢！</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-02",
    "count" : 1,
    "reverts" : null
  } ]
}
2019-07-24 22:41:56,848 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message; UPDATE message SET message.`count`=(SELECT COUNT(*) FROM revert WHERE message.`messageID`=revert.`messageID`); 
2019-07-24 22:41:56,853 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 22:41:56,863 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 22:41:56,864 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 12
2019-07-24 22:41:56,867 DEBUG (MessageController.java:37)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 16,
    "title" : "今天有雷阵雨吗？",
    "content" : "今天到底有没有雷阵雨？？？",
    "writer" : "guest",
    "writeDate" : "2016-06-30",
    "count" : 2,
    "reverts" : null
  }, {
    "messageId" : 17,
    "title" : "中午吃什么？",
    "content" : "土豆红烧肉？还是糖醋里脊？",
    "writer" : "zhangsan",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 18,
    "title" : "今天装空调了！",
    "content" : "O(∩_∩)O哈哈~",
    "writer" : "quit",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 19,
    "title" : "众创梦工厂地址？",
    "content" : "求地址？",
    "writer" : "uret",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 20,
    "title" : "清华同方显示器价格？",
    "content" : "型号为：AW1920TS",
    "writer" : "robot",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 21,
    "title" : "你的开机速度是多少？",
    "content" : "晒晒你的电脑的开机速度吧~~~",
    "writer" : "honme",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 22,
    "title" : "谷歌浏览器支持富文本，IE不支持！",
    "content" : "<p>\r\n\t<span style=\"font-size:1...",
    "writer" : "erick",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 23,
    "title" : "清华同方显示器的报价，型号AW1920TS",
    "content" : "<p>\r\n\twww.baidu.com</p>\r\n<p>\r\n...",
    "writer" : "bimy",
    "writeDate" : "2016-06-30",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 24,
    "title" : "明天有雨吗？",
    "content" : "<p>\r\n\t天气预报说有雨，你们说会下吗</p>\r\n",
    "writer" : "郭燕",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 25,
    "title" : "苹果手机壳哪有卖的？",
    "content" : "",
    "writer" : "uidn",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 26,
    "title" : "今天下雪吗？",
    "content" : "<p>\r\n\t下雪？</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-01",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 27,
    "title" : "今天谁带U盘了？",
    "content" : "<p>\r\n\t借我用一下。谢谢！</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-02",
    "count" : 1,
    "reverts" : null
  } ]
}
2019-07-24 22:41:59,522 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message; UPDATE message SET message.`count`=(SELECT COUNT(*) FROM revert WHERE message.`messageID`=revert.`messageID`); 
2019-07-24 22:41:59,523 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 22:41:59,538 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 22:41:59,540 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 12
2019-07-24 22:41:59,542 DEBUG (MessageController.java:37)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 16,
    "title" : "今天有雷阵雨吗？",
    "content" : "今天到底有没有雷阵雨？？？",
    "writer" : "guest",
    "writeDate" : "2016-06-30",
    "count" : 2,
    "reverts" : null
  }, {
    "messageId" : 17,
    "title" : "中午吃什么？",
    "content" : "土豆红烧肉？还是糖醋里脊？",
    "writer" : "zhangsan",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 18,
    "title" : "今天装空调了！",
    "content" : "O(∩_∩)O哈哈~",
    "writer" : "quit",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 19,
    "title" : "众创梦工厂地址？",
    "content" : "求地址？",
    "writer" : "uret",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 20,
    "title" : "清华同方显示器价格？",
    "content" : "型号为：AW1920TS",
    "writer" : "robot",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 21,
    "title" : "你的开机速度是多少？",
    "content" : "晒晒你的电脑的开机速度吧~~~",
    "writer" : "honme",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 22,
    "title" : "谷歌浏览器支持富文本，IE不支持！",
    "content" : "<p>\r\n\t<span style=\"font-size:1...",
    "writer" : "erick",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 23,
    "title" : "清华同方显示器的报价，型号AW1920TS",
    "content" : "<p>\r\n\twww.baidu.com</p>\r\n<p>\r\n...",
    "writer" : "bimy",
    "writeDate" : "2016-06-30",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 24,
    "title" : "明天有雨吗？",
    "content" : "<p>\r\n\t天气预报说有雨，你们说会下吗</p>\r\n",
    "writer" : "郭燕",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 25,
    "title" : "苹果手机壳哪有卖的？",
    "content" : "",
    "writer" : "uidn",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 26,
    "title" : "今天下雪吗？",
    "content" : "<p>\r\n\t下雪？</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-01",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 27,
    "title" : "今天谁带U盘了？",
    "content" : "<p>\r\n\t借我用一下。谢谢！</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-02",
    "count" : 1,
    "reverts" : null
  } ]
}
2019-07-24 22:43:05,226 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from product 
2019-07-24 22:43:05,229 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 22:43:05,229 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news 
2019-07-24 22:43:05,230 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 22:43:05,236 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 18
2019-07-24 22:43:05,236 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 22:43:05,238 DEBUG (NewsController.java:33)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 1,
    "title" : "创建新项目",
    "content" : "新闻内容",
    "writeDate" : 1466784000000
  }, {
    "newsId" : 2,
    "title" : "索尼位55降价送卡",
    "content" : "新闻内容3",
    "writeDate" : -30364761600000
  }, {
    "newsId" : 3,
    "title" : "理光b5不到二千",
    "content" : "你好",
    "writeDate" : 1191513600000
  }, {
    "newsId" : 5,
    "title" : "单反与镜头组合",
    "content" : null,
    "writeDate" : 1191369600000
  }, {
    "newsId" : 15,
    "title" : "百度将开拓美国和欧盟市场",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 16,
    "title" : "Uber CEO和马云交好",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 22,
    "title" : "今日早报",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 23,
    "title" : "高考查分被马云占了先机",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 24,
    "title" : "看完这个，你还想做微商吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 25,
    "title" : "农村电商只能成为空谈?",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 26,
    "title" : "上半年这些行业大爆炸",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 27,
    "title" : "阿里巴巴最为窘迫的四件事",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 28,
    "title" : "高管却离开了",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 30,
    "title" : "支付宝余额使用将受限",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 31,
    "title" : "国内垂直B2B电商平台TOP30",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 33,
    "title" : "谷歌要重新进入中国市场了吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 34,
    "title" : "今天",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 35,
    "title" : "庆十一商品促销11111",
    "content" : "222222",
    "writeDate" : 1562256000000
  } ]
}
2019-07-24 22:48:55,864 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message; UPDATE message SET message.`count`=(SELECT COUNT(*) FROM revert WHERE message.`messageID`=revert.`messageID`); 
2019-07-24 22:48:55,866 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 22:48:55,878 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 22:48:55,879 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 12
2019-07-24 22:48:55,880 DEBUG (MessageController.java:37)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 16,
    "title" : "今天有雷阵雨吗？",
    "content" : "今天到底有没有雷阵雨？？？",
    "writer" : "guest",
    "writeDate" : "2016-06-30",
    "count" : 2,
    "reverts" : null
  }, {
    "messageId" : 17,
    "title" : "中午吃什么？",
    "content" : "土豆红烧肉？还是糖醋里脊？",
    "writer" : "zhangsan",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 18,
    "title" : "今天装空调了！",
    "content" : "O(∩_∩)O哈哈~",
    "writer" : "quit",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 19,
    "title" : "众创梦工厂地址？",
    "content" : "求地址？",
    "writer" : "uret",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 20,
    "title" : "清华同方显示器价格？",
    "content" : "型号为：AW1920TS",
    "writer" : "robot",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 21,
    "title" : "你的开机速度是多少？",
    "content" : "晒晒你的电脑的开机速度吧~~~",
    "writer" : "honme",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 22,
    "title" : "谷歌浏览器支持富文本，IE不支持！",
    "content" : "<p>\r\n\t<span style=\"font-size:1...",
    "writer" : "erick",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 23,
    "title" : "清华同方显示器的报价，型号AW1920TS",
    "content" : "<p>\r\n\twww.baidu.com</p>\r\n<p>\r\n...",
    "writer" : "bimy",
    "writeDate" : "2016-06-30",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 24,
    "title" : "明天有雨吗？",
    "content" : "<p>\r\n\t天气预报说有雨，你们说会下吗</p>\r\n",
    "writer" : "郭燕",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 25,
    "title" : "苹果手机壳哪有卖的？",
    "content" : "",
    "writer" : "uidn",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 26,
    "title" : "今天下雪吗？",
    "content" : "<p>\r\n\t下雪？</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-01",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 27,
    "title" : "今天谁带U盘了？",
    "content" : "<p>\r\n\t借我用一下。谢谢！</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-02",
    "count" : 1,
    "reverts" : null
  } ]
}
2019-07-24 22:48:58,753 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message; UPDATE message SET message.`count`=(SELECT COUNT(*) FROM revert WHERE message.`messageID`=revert.`messageID`); 
2019-07-24 22:48:58,755 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 22:48:58,766 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 22:48:58,767 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 12
2019-07-24 22:48:58,770 DEBUG (MessageController.java:37)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 16,
    "title" : "今天有雷阵雨吗？",
    "content" : "今天到底有没有雷阵雨？？？",
    "writer" : "guest",
    "writeDate" : "2016-06-30",
    "count" : 2,
    "reverts" : null
  }, {
    "messageId" : 17,
    "title" : "中午吃什么？",
    "content" : "土豆红烧肉？还是糖醋里脊？",
    "writer" : "zhangsan",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 18,
    "title" : "今天装空调了！",
    "content" : "O(∩_∩)O哈哈~",
    "writer" : "quit",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 19,
    "title" : "众创梦工厂地址？",
    "content" : "求地址？",
    "writer" : "uret",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 20,
    "title" : "清华同方显示器价格？",
    "content" : "型号为：AW1920TS",
    "writer" : "robot",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 21,
    "title" : "你的开机速度是多少？",
    "content" : "晒晒你的电脑的开机速度吧~~~",
    "writer" : "honme",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 22,
    "title" : "谷歌浏览器支持富文本，IE不支持！",
    "content" : "<p>\r\n\t<span style=\"font-size:1...",
    "writer" : "erick",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 23,
    "title" : "清华同方显示器的报价，型号AW1920TS",
    "content" : "<p>\r\n\twww.baidu.com</p>\r\n<p>\r\n...",
    "writer" : "bimy",
    "writeDate" : "2016-06-30",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 24,
    "title" : "明天有雨吗？",
    "content" : "<p>\r\n\t天气预报说有雨，你们说会下吗</p>\r\n",
    "writer" : "郭燕",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 25,
    "title" : "苹果手机壳哪有卖的？",
    "content" : "",
    "writer" : "uidn",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 26,
    "title" : "今天下雪吗？",
    "content" : "<p>\r\n\t下雪？</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-01",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 27,
    "title" : "今天谁带U盘了？",
    "content" : "<p>\r\n\t借我用一下。谢谢！</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-02",
    "count" : 1,
    "reverts" : null
  } ]
}
2019-07-24 22:49:01,008 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message; UPDATE message SET message.`count`=(SELECT COUNT(*) FROM revert WHERE message.`messageID`=revert.`messageID`); 
2019-07-24 22:49:01,009 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 22:49:01,019 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 22:49:01,020 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 12
2019-07-24 22:49:01,022 DEBUG (MessageController.java:37)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 16,
    "title" : "今天有雷阵雨吗？",
    "content" : "今天到底有没有雷阵雨？？？",
    "writer" : "guest",
    "writeDate" : "2016-06-30",
    "count" : 2,
    "reverts" : null
  }, {
    "messageId" : 17,
    "title" : "中午吃什么？",
    "content" : "土豆红烧肉？还是糖醋里脊？",
    "writer" : "zhangsan",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 18,
    "title" : "今天装空调了！",
    "content" : "O(∩_∩)O哈哈~",
    "writer" : "quit",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 19,
    "title" : "众创梦工厂地址？",
    "content" : "求地址？",
    "writer" : "uret",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 20,
    "title" : "清华同方显示器价格？",
    "content" : "型号为：AW1920TS",
    "writer" : "robot",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 21,
    "title" : "你的开机速度是多少？",
    "content" : "晒晒你的电脑的开机速度吧~~~",
    "writer" : "honme",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 22,
    "title" : "谷歌浏览器支持富文本，IE不支持！",
    "content" : "<p>\r\n\t<span style=\"font-size:1...",
    "writer" : "erick",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 23,
    "title" : "清华同方显示器的报价，型号AW1920TS",
    "content" : "<p>\r\n\twww.baidu.com</p>\r\n<p>\r\n...",
    "writer" : "bimy",
    "writeDate" : "2016-06-30",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 24,
    "title" : "明天有雨吗？",
    "content" : "<p>\r\n\t天气预报说有雨，你们说会下吗</p>\r\n",
    "writer" : "郭燕",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 25,
    "title" : "苹果手机壳哪有卖的？",
    "content" : "",
    "writer" : "uidn",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 26,
    "title" : "今天下雪吗？",
    "content" : "<p>\r\n\t下雪？</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-01",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 27,
    "title" : "今天谁带U盘了？",
    "content" : "<p>\r\n\t借我用一下。谢谢！</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-02",
    "count" : 1,
    "reverts" : null
  } ]
}
2019-07-24 22:49:03,724 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message; UPDATE message SET message.`count`=(SELECT COUNT(*) FROM revert WHERE message.`messageID`=revert.`messageID`); 
2019-07-24 22:49:03,726 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 22:49:03,734 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 22:49:03,735 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 12
2019-07-24 22:49:03,737 DEBUG (MessageController.java:37)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 16,
    "title" : "今天有雷阵雨吗？",
    "content" : "今天到底有没有雷阵雨？？？",
    "writer" : "guest",
    "writeDate" : "2016-06-30",
    "count" : 2,
    "reverts" : null
  }, {
    "messageId" : 17,
    "title" : "中午吃什么？",
    "content" : "土豆红烧肉？还是糖醋里脊？",
    "writer" : "zhangsan",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 18,
    "title" : "今天装空调了！",
    "content" : "O(∩_∩)O哈哈~",
    "writer" : "quit",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 19,
    "title" : "众创梦工厂地址？",
    "content" : "求地址？",
    "writer" : "uret",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 20,
    "title" : "清华同方显示器价格？",
    "content" : "型号为：AW1920TS",
    "writer" : "robot",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 21,
    "title" : "你的开机速度是多少？",
    "content" : "晒晒你的电脑的开机速度吧~~~",
    "writer" : "honme",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 22,
    "title" : "谷歌浏览器支持富文本，IE不支持！",
    "content" : "<p>\r\n\t<span style=\"font-size:1...",
    "writer" : "erick",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 23,
    "title" : "清华同方显示器的报价，型号AW1920TS",
    "content" : "<p>\r\n\twww.baidu.com</p>\r\n<p>\r\n...",
    "writer" : "bimy",
    "writeDate" : "2016-06-30",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 24,
    "title" : "明天有雨吗？",
    "content" : "<p>\r\n\t天气预报说有雨，你们说会下吗</p>\r\n",
    "writer" : "郭燕",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 25,
    "title" : "苹果手机壳哪有卖的？",
    "content" : "",
    "writer" : "uidn",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 26,
    "title" : "今天下雪吗？",
    "content" : "<p>\r\n\t下雪？</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-01",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 27,
    "title" : "今天谁带U盘了？",
    "content" : "<p>\r\n\t借我用一下。谢谢！</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-02",
    "count" : 1,
    "reverts" : null
  } ]
}
2019-07-24 22:49:24,282 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message; UPDATE message SET message.`count`=(SELECT COUNT(*) FROM revert WHERE message.`messageID`=revert.`messageID`); 
2019-07-24 22:49:24,286 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 22:49:24,295 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 22:49:24,297 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 12
2019-07-24 22:49:24,298 DEBUG (MessageController.java:37)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 16,
    "title" : "今天有雷阵雨吗？",
    "content" : "今天到底有没有雷阵雨？？？",
    "writer" : "guest",
    "writeDate" : "2016-06-30",
    "count" : 2,
    "reverts" : null
  }, {
    "messageId" : 17,
    "title" : "中午吃什么？",
    "content" : "土豆红烧肉？还是糖醋里脊？",
    "writer" : "zhangsan",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 18,
    "title" : "今天装空调了！",
    "content" : "O(∩_∩)O哈哈~",
    "writer" : "quit",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 19,
    "title" : "众创梦工厂地址？",
    "content" : "求地址？",
    "writer" : "uret",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 20,
    "title" : "清华同方显示器价格？",
    "content" : "型号为：AW1920TS",
    "writer" : "robot",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 21,
    "title" : "你的开机速度是多少？",
    "content" : "晒晒你的电脑的开机速度吧~~~",
    "writer" : "honme",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 22,
    "title" : "谷歌浏览器支持富文本，IE不支持！",
    "content" : "<p>\r\n\t<span style=\"font-size:1...",
    "writer" : "erick",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 23,
    "title" : "清华同方显示器的报价，型号AW1920TS",
    "content" : "<p>\r\n\twww.baidu.com</p>\r\n<p>\r\n...",
    "writer" : "bimy",
    "writeDate" : "2016-06-30",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 24,
    "title" : "明天有雨吗？",
    "content" : "<p>\r\n\t天气预报说有雨，你们说会下吗</p>\r\n",
    "writer" : "郭燕",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 25,
    "title" : "苹果手机壳哪有卖的？",
    "content" : "",
    "writer" : "uidn",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 26,
    "title" : "今天下雪吗？",
    "content" : "<p>\r\n\t下雪？</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-01",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 27,
    "title" : "今天谁带U盘了？",
    "content" : "<p>\r\n\t借我用一下。谢谢！</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-02",
    "count" : 1,
    "reverts" : null
  } ]
}
2019-07-24 22:49:26,913 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message; UPDATE message SET message.`count`=(SELECT COUNT(*) FROM revert WHERE message.`messageID`=revert.`messageID`); 
2019-07-24 22:49:26,914 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 22:49:26,922 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 22:49:26,923 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 12
2019-07-24 22:49:26,925 DEBUG (MessageController.java:37)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 16,
    "title" : "今天有雷阵雨吗？",
    "content" : "今天到底有没有雷阵雨？？？",
    "writer" : "guest",
    "writeDate" : "2016-06-30",
    "count" : 2,
    "reverts" : null
  }, {
    "messageId" : 17,
    "title" : "中午吃什么？",
    "content" : "土豆红烧肉？还是糖醋里脊？",
    "writer" : "zhangsan",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 18,
    "title" : "今天装空调了！",
    "content" : "O(∩_∩)O哈哈~",
    "writer" : "quit",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 19,
    "title" : "众创梦工厂地址？",
    "content" : "求地址？",
    "writer" : "uret",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 20,
    "title" : "清华同方显示器价格？",
    "content" : "型号为：AW1920TS",
    "writer" : "robot",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 21,
    "title" : "你的开机速度是多少？",
    "content" : "晒晒你的电脑的开机速度吧~~~",
    "writer" : "honme",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 22,
    "title" : "谷歌浏览器支持富文本，IE不支持！",
    "content" : "<p>\r\n\t<span style=\"font-size:1...",
    "writer" : "erick",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 23,
    "title" : "清华同方显示器的报价，型号AW1920TS",
    "content" : "<p>\r\n\twww.baidu.com</p>\r\n<p>\r\n...",
    "writer" : "bimy",
    "writeDate" : "2016-06-30",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 24,
    "title" : "明天有雨吗？",
    "content" : "<p>\r\n\t天气预报说有雨，你们说会下吗</p>\r\n",
    "writer" : "郭燕",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 25,
    "title" : "苹果手机壳哪有卖的？",
    "content" : "",
    "writer" : "uidn",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 26,
    "title" : "今天下雪吗？",
    "content" : "<p>\r\n\t下雪？</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-01",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 27,
    "title" : "今天谁带U盘了？",
    "content" : "<p>\r\n\t借我用一下。谢谢！</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-02",
    "count" : 1,
    "reverts" : null
  } ]
}
2019-07-24 22:50:47,212 ERROR (BaseController.java:258)- 参数类型错误
org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'int'; nested exception is java.lang.NumberFormatException: For input string: ""
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:132)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:126)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NumberFormatException: For input string: ""
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Integer.parseInt(Integer.java:592)
	at java.lang.Integer.valueOf(Integer.java:766)
	at org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:211)
	at org.springframework.beans.propertyeditors.CustomNumberEditor.setAsText(CustomNumberEditor.java:115)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:429)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:402)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:155)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:73)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53)
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:693)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:124)
	... 51 common frames omitted
2019-07-24 22:50:51,654 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message; UPDATE message SET message.`count`=(SELECT COUNT(*) FROM revert WHERE message.`messageID`=revert.`messageID`); 
2019-07-24 22:50:51,655 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 22:50:51,661 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 22:50:51,662 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 12
2019-07-24 22:50:51,664 DEBUG (MessageController.java:37)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 16,
    "title" : "今天有雷阵雨吗？",
    "content" : "今天到底有没有雷阵雨？？？",
    "writer" : "guest",
    "writeDate" : "2016-06-30",
    "count" : 2,
    "reverts" : null
  }, {
    "messageId" : 17,
    "title" : "中午吃什么？",
    "content" : "土豆红烧肉？还是糖醋里脊？",
    "writer" : "zhangsan",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 18,
    "title" : "今天装空调了！",
    "content" : "O(∩_∩)O哈哈~",
    "writer" : "quit",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 19,
    "title" : "众创梦工厂地址？",
    "content" : "求地址？",
    "writer" : "uret",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 20,
    "title" : "清华同方显示器价格？",
    "content" : "型号为：AW1920TS",
    "writer" : "robot",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 21,
    "title" : "你的开机速度是多少？",
    "content" : "晒晒你的电脑的开机速度吧~~~",
    "writer" : "honme",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 22,
    "title" : "谷歌浏览器支持富文本，IE不支持！",
    "content" : "<p>\r\n\t<span style=\"font-size:1...",
    "writer" : "erick",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 23,
    "title" : "清华同方显示器的报价，型号AW1920TS",
    "content" : "<p>\r\n\twww.baidu.com</p>\r\n<p>\r\n...",
    "writer" : "bimy",
    "writeDate" : "2016-06-30",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 24,
    "title" : "明天有雨吗？",
    "content" : "<p>\r\n\t天气预报说有雨，你们说会下吗</p>\r\n",
    "writer" : "郭燕",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 25,
    "title" : "苹果手机壳哪有卖的？",
    "content" : "",
    "writer" : "uidn",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 26,
    "title" : "今天下雪吗？",
    "content" : "<p>\r\n\t下雪？</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-01",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 27,
    "title" : "今天谁带U盘了？",
    "content" : "<p>\r\n\t借我用一下。谢谢！</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-02",
    "count" : 1,
    "reverts" : null
  } ]
}
2019-07-24 22:51:22,861 ERROR (BaseController.java:258)- 参数类型错误
org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'int'; nested exception is java.lang.NumberFormatException: For input string: ""
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:132)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:126)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NumberFormatException: For input string: ""
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Integer.parseInt(Integer.java:592)
	at java.lang.Integer.valueOf(Integer.java:766)
	at org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:211)
	at org.springframework.beans.propertyeditors.CustomNumberEditor.setAsText(CustomNumberEditor.java:115)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:429)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:402)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:155)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:73)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53)
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:693)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:124)
	... 51 common frames omitted
2019-07-24 22:51:46,581 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message; UPDATE message SET message.`count`=(SELECT COUNT(*) FROM revert WHERE message.`messageID`=revert.`messageID`); 
2019-07-24 22:51:46,584 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 22:51:46,611 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 22:51:46,612 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 12
2019-07-24 22:51:46,613 DEBUG (MessageController.java:37)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 16,
    "title" : "今天有雷阵雨吗？",
    "content" : "今天到底有没有雷阵雨？？？",
    "writer" : "guest",
    "writeDate" : "2016-06-30",
    "count" : 2,
    "reverts" : null
  }, {
    "messageId" : 17,
    "title" : "中午吃什么？",
    "content" : "土豆红烧肉？还是糖醋里脊？",
    "writer" : "zhangsan",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 18,
    "title" : "今天装空调了！",
    "content" : "O(∩_∩)O哈哈~",
    "writer" : "quit",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 19,
    "title" : "众创梦工厂地址？",
    "content" : "求地址？",
    "writer" : "uret",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 20,
    "title" : "清华同方显示器价格？",
    "content" : "型号为：AW1920TS",
    "writer" : "robot",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 21,
    "title" : "你的开机速度是多少？",
    "content" : "晒晒你的电脑的开机速度吧~~~",
    "writer" : "honme",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 22,
    "title" : "谷歌浏览器支持富文本，IE不支持！",
    "content" : "<p>\r\n\t<span style=\"font-size:1...",
    "writer" : "erick",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 23,
    "title" : "清华同方显示器的报价，型号AW1920TS",
    "content" : "<p>\r\n\twww.baidu.com</p>\r\n<p>\r\n...",
    "writer" : "bimy",
    "writeDate" : "2016-06-30",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 24,
    "title" : "明天有雨吗？",
    "content" : "<p>\r\n\t天气预报说有雨，你们说会下吗</p>\r\n",
    "writer" : "郭燕",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 25,
    "title" : "苹果手机壳哪有卖的？",
    "content" : "",
    "writer" : "uidn",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 26,
    "title" : "今天下雪吗？",
    "content" : "<p>\r\n\t下雪？</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-01",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 27,
    "title" : "今天谁带U盘了？",
    "content" : "<p>\r\n\t借我用一下。谢谢！</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-02",
    "count" : 1,
    "reverts" : null
  } ]
}
2019-07-24 22:51:48,285 ERROR (BaseController.java:258)- 参数类型错误
org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'int'; nested exception is java.lang.NumberFormatException: For input string: ""
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:132)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:126)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NumberFormatException: For input string: ""
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Integer.parseInt(Integer.java:592)
	at java.lang.Integer.valueOf(Integer.java:766)
	at org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:211)
	at org.springframework.beans.propertyeditors.CustomNumberEditor.setAsText(CustomNumberEditor.java:115)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:429)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:402)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:155)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:73)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53)
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:693)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:124)
	... 51 common frames omitted
2019-07-24 22:51:50,912 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message; UPDATE message SET message.`count`=(SELECT COUNT(*) FROM revert WHERE message.`messageID`=revert.`messageID`); 
2019-07-24 22:51:50,913 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 22:51:50,919 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 22:51:50,920 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 12
2019-07-24 22:51:50,922 DEBUG (MessageController.java:37)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 16,
    "title" : "今天有雷阵雨吗？",
    "content" : "今天到底有没有雷阵雨？？？",
    "writer" : "guest",
    "writeDate" : "2016-06-30",
    "count" : 2,
    "reverts" : null
  }, {
    "messageId" : 17,
    "title" : "中午吃什么？",
    "content" : "土豆红烧肉？还是糖醋里脊？",
    "writer" : "zhangsan",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 18,
    "title" : "今天装空调了！",
    "content" : "O(∩_∩)O哈哈~",
    "writer" : "quit",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 19,
    "title" : "众创梦工厂地址？",
    "content" : "求地址？",
    "writer" : "uret",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 20,
    "title" : "清华同方显示器价格？",
    "content" : "型号为：AW1920TS",
    "writer" : "robot",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 21,
    "title" : "你的开机速度是多少？",
    "content" : "晒晒你的电脑的开机速度吧~~~",
    "writer" : "honme",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 22,
    "title" : "谷歌浏览器支持富文本，IE不支持！",
    "content" : "<p>\r\n\t<span style=\"font-size:1...",
    "writer" : "erick",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 23,
    "title" : "清华同方显示器的报价，型号AW1920TS",
    "content" : "<p>\r\n\twww.baidu.com</p>\r\n<p>\r\n...",
    "writer" : "bimy",
    "writeDate" : "2016-06-30",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 24,
    "title" : "明天有雨吗？",
    "content" : "<p>\r\n\t天气预报说有雨，你们说会下吗</p>\r\n",
    "writer" : "郭燕",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 25,
    "title" : "苹果手机壳哪有卖的？",
    "content" : "",
    "writer" : "uidn",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 26,
    "title" : "今天下雪吗？",
    "content" : "<p>\r\n\t下雪？</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-01",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 27,
    "title" : "今天谁带U盘了？",
    "content" : "<p>\r\n\t借我用一下。谢谢！</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-02",
    "count" : 1,
    "reverts" : null
  } ]
}
2019-07-24 22:54:16,000 ERROR (BaseController.java:258)- 参数类型错误
org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'int'; nested exception is java.lang.NumberFormatException: For input string: ""
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:132)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:126)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NumberFormatException: For input string: ""
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Integer.parseInt(Integer.java:592)
	at java.lang.Integer.valueOf(Integer.java:766)
	at org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:211)
	at org.springframework.beans.propertyeditors.CustomNumberEditor.setAsText(CustomNumberEditor.java:115)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:429)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:402)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:155)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:73)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53)
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:693)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:124)
	... 51 common frames omitted
2019-07-24 22:54:27,678 ERROR (BaseController.java:258)- 参数类型错误
org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'int'; nested exception is java.lang.NumberFormatException: For input string: ""
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:132)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:126)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NumberFormatException: For input string: ""
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Integer.parseInt(Integer.java:592)
	at java.lang.Integer.valueOf(Integer.java:766)
	at org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:211)
	at org.springframework.beans.propertyeditors.CustomNumberEditor.setAsText(CustomNumberEditor.java:115)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:429)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:402)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:155)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:73)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53)
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:693)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:124)
	... 51 common frames omitted
2019-07-24 22:54:30,514 ERROR (BaseController.java:258)- 参数类型错误
org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'int'; nested exception is java.lang.NumberFormatException: For input string: ""
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:132)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:126)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NumberFormatException: For input string: ""
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Integer.parseInt(Integer.java:592)
	at java.lang.Integer.valueOf(Integer.java:766)
	at org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:211)
	at org.springframework.beans.propertyeditors.CustomNumberEditor.setAsText(CustomNumberEditor.java:115)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:429)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:402)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:155)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:73)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53)
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:693)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:124)
	... 51 common frames omitted
2019-07-24 22:54:43,527 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news 
2019-07-24 22:54:43,528 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 22:54:43,531 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 18
2019-07-24 22:54:43,533 DEBUG (NewsController.java:33)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 1,
    "title" : "创建新项目",
    "content" : "新闻内容",
    "writeDate" : 1466784000000
  }, {
    "newsId" : 2,
    "title" : "索尼位55降价送卡",
    "content" : "新闻内容3",
    "writeDate" : -30364761600000
  }, {
    "newsId" : 3,
    "title" : "理光b5不到二千",
    "content" : "你好",
    "writeDate" : 1191513600000
  }, {
    "newsId" : 5,
    "title" : "单反与镜头组合",
    "content" : null,
    "writeDate" : 1191369600000
  }, {
    "newsId" : 15,
    "title" : "百度将开拓美国和欧盟市场",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 16,
    "title" : "Uber CEO和马云交好",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 22,
    "title" : "今日早报",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 23,
    "title" : "高考查分被马云占了先机",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 24,
    "title" : "看完这个，你还想做微商吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 25,
    "title" : "农村电商只能成为空谈?",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 26,
    "title" : "上半年这些行业大爆炸",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 27,
    "title" : "阿里巴巴最为窘迫的四件事",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 28,
    "title" : "高管却离开了",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 30,
    "title" : "支付宝余额使用将受限",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 31,
    "title" : "国内垂直B2B电商平台TOP30",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 33,
    "title" : "谷歌要重新进入中国市场了吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 34,
    "title" : "今天",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 35,
    "title" : "庆十一商品促销11111",
    "content" : "222222",
    "writeDate" : 1562256000000
  } ]
}
2019-07-24 22:54:45,754 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news WHERE newsId = ? 
2019-07-24 22:54:45,756 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 22:54:45,759 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 22:57:45,742 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message; UPDATE message SET message.`count`=(SELECT COUNT(*) FROM revert WHERE message.`messageID`=revert.`messageID`); 
2019-07-24 22:57:45,743 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 22:57:45,755 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 22:57:45,756 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 12
2019-07-24 22:57:45,758 DEBUG (MessageController.java:37)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 16,
    "title" : "今天有雷阵雨吗？",
    "content" : "今天到底有没有雷阵雨？？？",
    "writer" : "guest",
    "writeDate" : "2016-06-30",
    "count" : 2,
    "reverts" : null
  }, {
    "messageId" : 17,
    "title" : "中午吃什么？",
    "content" : "土豆红烧肉？还是糖醋里脊？",
    "writer" : "zhangsan",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 18,
    "title" : "今天装空调了！",
    "content" : "O(∩_∩)O哈哈~",
    "writer" : "quit",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 19,
    "title" : "众创梦工厂地址？",
    "content" : "求地址？",
    "writer" : "uret",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 20,
    "title" : "清华同方显示器价格？",
    "content" : "型号为：AW1920TS",
    "writer" : "robot",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 21,
    "title" : "你的开机速度是多少？",
    "content" : "晒晒你的电脑的开机速度吧~~~",
    "writer" : "honme",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 22,
    "title" : "谷歌浏览器支持富文本，IE不支持！",
    "content" : "<p>\r\n\t<span style=\"font-size:1...",
    "writer" : "erick",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 23,
    "title" : "清华同方显示器的报价，型号AW1920TS",
    "content" : "<p>\r\n\twww.baidu.com</p>\r\n<p>\r\n...",
    "writer" : "bimy",
    "writeDate" : "2016-06-30",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 24,
    "title" : "明天有雨吗？",
    "content" : "<p>\r\n\t天气预报说有雨，你们说会下吗</p>\r\n",
    "writer" : "郭燕",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 25,
    "title" : "苹果手机壳哪有卖的？",
    "content" : "",
    "writer" : "uidn",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 26,
    "title" : "今天下雪吗？",
    "content" : "<p>\r\n\t下雪？</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-01",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 27,
    "title" : "今天谁带U盘了？",
    "content" : "<p>\r\n\t借我用一下。谢谢！</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-02",
    "count" : 1,
    "reverts" : null
  } ]
}
2019-07-24 22:57:48,282 ERROR (BaseController.java:258)- 参数类型错误
org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'int'; nested exception is java.lang.NumberFormatException: For input string: ""
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:132)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:126)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NumberFormatException: For input string: ""
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Integer.parseInt(Integer.java:592)
	at java.lang.Integer.valueOf(Integer.java:766)
	at org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:211)
	at org.springframework.beans.propertyeditors.CustomNumberEditor.setAsText(CustomNumberEditor.java:115)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:429)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:402)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:155)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:73)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53)
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:693)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:124)
	... 51 common frames omitted
2019-07-24 22:58:32,989 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message; UPDATE message SET message.`count`=(SELECT COUNT(*) FROM revert WHERE message.`messageID`=revert.`messageID`); 
2019-07-24 22:58:32,990 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 22:58:32,998 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 22:58:33,000 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 12
2019-07-24 22:58:33,002 DEBUG (MessageController.java:37)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 16,
    "title" : "今天有雷阵雨吗？",
    "content" : "今天到底有没有雷阵雨？？？",
    "writer" : "guest",
    "writeDate" : "2016-06-30",
    "count" : 2,
    "reverts" : null
  }, {
    "messageId" : 17,
    "title" : "中午吃什么？",
    "content" : "土豆红烧肉？还是糖醋里脊？",
    "writer" : "zhangsan",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 18,
    "title" : "今天装空调了！",
    "content" : "O(∩_∩)O哈哈~",
    "writer" : "quit",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 19,
    "title" : "众创梦工厂地址？",
    "content" : "求地址？",
    "writer" : "uret",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 20,
    "title" : "清华同方显示器价格？",
    "content" : "型号为：AW1920TS",
    "writer" : "robot",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 21,
    "title" : "你的开机速度是多少？",
    "content" : "晒晒你的电脑的开机速度吧~~~",
    "writer" : "honme",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 22,
    "title" : "谷歌浏览器支持富文本，IE不支持！",
    "content" : "<p>\r\n\t<span style=\"font-size:1...",
    "writer" : "erick",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 23,
    "title" : "清华同方显示器的报价，型号AW1920TS",
    "content" : "<p>\r\n\twww.baidu.com</p>\r\n<p>\r\n...",
    "writer" : "bimy",
    "writeDate" : "2016-06-30",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 24,
    "title" : "明天有雨吗？",
    "content" : "<p>\r\n\t天气预报说有雨，你们说会下吗</p>\r\n",
    "writer" : "郭燕",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 25,
    "title" : "苹果手机壳哪有卖的？",
    "content" : "",
    "writer" : "uidn",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 26,
    "title" : "今天下雪吗？",
    "content" : "<p>\r\n\t下雪？</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-01",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 27,
    "title" : "今天谁带U盘了？",
    "content" : "<p>\r\n\t借我用一下。谢谢！</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-02",
    "count" : 1,
    "reverts" : null
  } ]
}
2019-07-24 22:58:34,734 ERROR (BaseController.java:258)- 参数类型错误
org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'int'; nested exception is java.lang.NumberFormatException: For input string: ""
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:132)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:126)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NumberFormatException: For input string: ""
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Integer.parseInt(Integer.java:592)
	at java.lang.Integer.valueOf(Integer.java:766)
	at org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:211)
	at org.springframework.beans.propertyeditors.CustomNumberEditor.setAsText(CustomNumberEditor.java:115)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:429)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:402)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:155)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:73)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53)
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:693)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:124)
	... 51 common frames omitted
2019-07-24 22:58:39,310 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message; UPDATE message SET message.`count`=(SELECT COUNT(*) FROM revert WHERE message.`messageID`=revert.`messageID`); 
2019-07-24 22:58:39,311 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 22:58:39,322 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 22:58:39,324 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 12
2019-07-24 22:58:39,325 DEBUG (MessageController.java:37)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 16,
    "title" : "今天有雷阵雨吗？",
    "content" : "今天到底有没有雷阵雨？？？",
    "writer" : "guest",
    "writeDate" : "2016-06-30",
    "count" : 2,
    "reverts" : null
  }, {
    "messageId" : 17,
    "title" : "中午吃什么？",
    "content" : "土豆红烧肉？还是糖醋里脊？",
    "writer" : "zhangsan",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 18,
    "title" : "今天装空调了！",
    "content" : "O(∩_∩)O哈哈~",
    "writer" : "quit",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 19,
    "title" : "众创梦工厂地址？",
    "content" : "求地址？",
    "writer" : "uret",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 20,
    "title" : "清华同方显示器价格？",
    "content" : "型号为：AW1920TS",
    "writer" : "robot",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 21,
    "title" : "你的开机速度是多少？",
    "content" : "晒晒你的电脑的开机速度吧~~~",
    "writer" : "honme",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 22,
    "title" : "谷歌浏览器支持富文本，IE不支持！",
    "content" : "<p>\r\n\t<span style=\"font-size:1...",
    "writer" : "erick",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 23,
    "title" : "清华同方显示器的报价，型号AW1920TS",
    "content" : "<p>\r\n\twww.baidu.com</p>\r\n<p>\r\n...",
    "writer" : "bimy",
    "writeDate" : "2016-06-30",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 24,
    "title" : "明天有雨吗？",
    "content" : "<p>\r\n\t天气预报说有雨，你们说会下吗</p>\r\n",
    "writer" : "郭燕",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 25,
    "title" : "苹果手机壳哪有卖的？",
    "content" : "",
    "writer" : "uidn",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 26,
    "title" : "今天下雪吗？",
    "content" : "<p>\r\n\t下雪？</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-01",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 27,
    "title" : "今天谁带U盘了？",
    "content" : "<p>\r\n\t借我用一下。谢谢！</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-02",
    "count" : 1,
    "reverts" : null
  } ]
}
2019-07-24 23:03:23,028 ERROR (BaseController.java:258)- 参数类型错误
org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'int'; nested exception is java.lang.NumberFormatException: For input string: ""
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:132)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:126)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NumberFormatException: For input string: ""
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Integer.parseInt(Integer.java:592)
	at java.lang.Integer.valueOf(Integer.java:766)
	at org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:211)
	at org.springframework.beans.propertyeditors.CustomNumberEditor.setAsText(CustomNumberEditor.java:115)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:429)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:402)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:155)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:73)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53)
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:693)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:124)
	... 51 common frames omitted
2019-07-24 23:03:27,331 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message; UPDATE message SET message.`count`=(SELECT COUNT(*) FROM revert WHERE message.`messageID`=revert.`messageID`); 
2019-07-24 23:03:27,333 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 23:03:27,342 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 23:03:27,344 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 12
2019-07-24 23:03:27,345 DEBUG (MessageController.java:37)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 16,
    "title" : "今天有雷阵雨吗？",
    "content" : "今天到底有没有雷阵雨？？？",
    "writer" : "guest",
    "writeDate" : "2016-06-30",
    "count" : 2,
    "reverts" : null
  }, {
    "messageId" : 17,
    "title" : "中午吃什么？",
    "content" : "土豆红烧肉？还是糖醋里脊？",
    "writer" : "zhangsan",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 18,
    "title" : "今天装空调了！",
    "content" : "O(∩_∩)O哈哈~",
    "writer" : "quit",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 19,
    "title" : "众创梦工厂地址？",
    "content" : "求地址？",
    "writer" : "uret",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 20,
    "title" : "清华同方显示器价格？",
    "content" : "型号为：AW1920TS",
    "writer" : "robot",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 21,
    "title" : "你的开机速度是多少？",
    "content" : "晒晒你的电脑的开机速度吧~~~",
    "writer" : "honme",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 22,
    "title" : "谷歌浏览器支持富文本，IE不支持！",
    "content" : "<p>\r\n\t<span style=\"font-size:1...",
    "writer" : "erick",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 23,
    "title" : "清华同方显示器的报价，型号AW1920TS",
    "content" : "<p>\r\n\twww.baidu.com</p>\r\n<p>\r\n...",
    "writer" : "bimy",
    "writeDate" : "2016-06-30",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 24,
    "title" : "明天有雨吗？",
    "content" : "<p>\r\n\t天气预报说有雨，你们说会下吗</p>\r\n",
    "writer" : "郭燕",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 25,
    "title" : "苹果手机壳哪有卖的？",
    "content" : "",
    "writer" : "uidn",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 26,
    "title" : "今天下雪吗？",
    "content" : "<p>\r\n\t下雪？</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-01",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 27,
    "title" : "今天谁带U盘了？",
    "content" : "<p>\r\n\t借我用一下。谢谢！</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-02",
    "count" : 1,
    "reverts" : null
  } ]
}
2019-07-24 23:04:49,016 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news 
2019-07-24 23:04:49,018 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 23:04:49,024 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 18
2019-07-24 23:04:49,025 DEBUG (NewsController.java:33)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 1,
    "title" : "创建新项目",
    "content" : "新闻内容",
    "writeDate" : 1466784000000
  }, {
    "newsId" : 2,
    "title" : "索尼位55降价送卡",
    "content" : "新闻内容3",
    "writeDate" : -30364761600000
  }, {
    "newsId" : 3,
    "title" : "理光b5不到二千",
    "content" : "你好",
    "writeDate" : 1191513600000
  }, {
    "newsId" : 5,
    "title" : "单反与镜头组合",
    "content" : null,
    "writeDate" : 1191369600000
  }, {
    "newsId" : 15,
    "title" : "百度将开拓美国和欧盟市场",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 16,
    "title" : "Uber CEO和马云交好",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 22,
    "title" : "今日早报",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 23,
    "title" : "高考查分被马云占了先机",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 24,
    "title" : "看完这个，你还想做微商吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 25,
    "title" : "农村电商只能成为空谈?",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 26,
    "title" : "上半年这些行业大爆炸",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 27,
    "title" : "阿里巴巴最为窘迫的四件事",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 28,
    "title" : "高管却离开了",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 30,
    "title" : "支付宝余额使用将受限",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 31,
    "title" : "国内垂直B2B电商平台TOP30",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 33,
    "title" : "谷歌要重新进入中国市场了吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 34,
    "title" : "今天",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 35,
    "title" : "庆十一商品促销11111",
    "content" : "222222",
    "writeDate" : 1562256000000
  } ]
}
2019-07-24 23:04:51,954 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news WHERE newsId = ? 
2019-07-24 23:04:51,964 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 2(Integer)
2019-07-24 23:04:51,966 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 23:04:56,470 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news 
2019-07-24 23:04:56,471 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 23:04:56,474 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 18
2019-07-24 23:04:56,476 DEBUG (NewsController.java:33)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 1,
    "title" : "创建新项目",
    "content" : "新闻内容",
    "writeDate" : 1466784000000
  }, {
    "newsId" : 2,
    "title" : "索尼位55降价送卡",
    "content" : "新闻内容3",
    "writeDate" : -30364761600000
  }, {
    "newsId" : 3,
    "title" : "理光b5不到二千",
    "content" : "你好",
    "writeDate" : 1191513600000
  }, {
    "newsId" : 5,
    "title" : "单反与镜头组合",
    "content" : null,
    "writeDate" : 1191369600000
  }, {
    "newsId" : 15,
    "title" : "百度将开拓美国和欧盟市场",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 16,
    "title" : "Uber CEO和马云交好",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 22,
    "title" : "今日早报",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 23,
    "title" : "高考查分被马云占了先机",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 24,
    "title" : "看完这个，你还想做微商吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 25,
    "title" : "农村电商只能成为空谈?",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 26,
    "title" : "上半年这些行业大爆炸",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 27,
    "title" : "阿里巴巴最为窘迫的四件事",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 28,
    "title" : "高管却离开了",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 30,
    "title" : "支付宝余额使用将受限",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 31,
    "title" : "国内垂直B2B电商平台TOP30",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 33,
    "title" : "谷歌要重新进入中国市场了吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 34,
    "title" : "今天",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 35,
    "title" : "庆十一商品促销11111",
    "content" : "222222",
    "writeDate" : 1562256000000
  } ]
}
2019-07-24 23:05:01,854 ERROR (BaseController.java:258)- 参数类型错误
org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'int'; nested exception is java.lang.NumberFormatException: For input string: ""
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:132)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:126)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NumberFormatException: For input string: ""
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Integer.parseInt(Integer.java:592)
	at java.lang.Integer.valueOf(Integer.java:766)
	at org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:211)
	at org.springframework.beans.propertyeditors.CustomNumberEditor.setAsText(CustomNumberEditor.java:115)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:429)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:402)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:155)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:73)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53)
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:693)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:124)
	... 51 common frames omitted
2019-07-24 23:05:04,931 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: select * from message; UPDATE message SET message.`count`=(SELECT COUNT(*) FROM revert WHERE message.`messageID`=revert.`messageID`); 
2019-07-24 23:05:04,955 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 23:05:04,967 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 12
2019-07-24 23:05:04,968 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 12
2019-07-24 23:05:04,970 DEBUG (MessageController.java:37)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 16,
    "title" : "今天有雷阵雨吗？",
    "content" : "今天到底有没有雷阵雨？？？",
    "writer" : "guest",
    "writeDate" : "2016-06-30",
    "count" : 2,
    "reverts" : null
  }, {
    "messageId" : 17,
    "title" : "中午吃什么？",
    "content" : "土豆红烧肉？还是糖醋里脊？",
    "writer" : "zhangsan",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 18,
    "title" : "今天装空调了！",
    "content" : "O(∩_∩)O哈哈~",
    "writer" : "quit",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 19,
    "title" : "众创梦工厂地址？",
    "content" : "求地址？",
    "writer" : "uret",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 20,
    "title" : "清华同方显示器价格？",
    "content" : "型号为：AW1920TS",
    "writer" : "robot",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 21,
    "title" : "你的开机速度是多少？",
    "content" : "晒晒你的电脑的开机速度吧~~~",
    "writer" : "honme",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 22,
    "title" : "谷歌浏览器支持富文本，IE不支持！",
    "content" : "<p>\r\n\t<span style=\"font-size:1...",
    "writer" : "erick",
    "writeDate" : "2016-06-30",
    "count" : 4,
    "reverts" : null
  }, {
    "messageId" : 23,
    "title" : "清华同方显示器的报价，型号AW1920TS",
    "content" : "<p>\r\n\twww.baidu.com</p>\r\n<p>\r\n...",
    "writer" : "bimy",
    "writeDate" : "2016-06-30",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 24,
    "title" : "明天有雨吗？",
    "content" : "<p>\r\n\t天气预报说有雨，你们说会下吗</p>\r\n",
    "writer" : "郭燕",
    "writeDate" : "2016-06-30",
    "count" : 1,
    "reverts" : null
  }, {
    "messageId" : 25,
    "title" : "苹果手机壳哪有卖的？",
    "content" : "",
    "writer" : "uidn",
    "writeDate" : "2016-06-30",
    "count" : 0,
    "reverts" : null
  }, {
    "messageId" : 26,
    "title" : "今天下雪吗？",
    "content" : "<p>\r\n\t下雪？</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-01",
    "count" : 3,
    "reverts" : null
  }, {
    "messageId" : 27,
    "title" : "今天谁带U盘了？",
    "content" : "<p>\r\n\t借我用一下。谢谢！</p>\r\n",
    "writer" : "刘新乐",
    "writeDate" : "2016-07-02",
    "count" : 1,
    "reverts" : null
  } ]
}
2019-07-24 23:11:07,909 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news WHERE newsId = ? 
2019-07-24 23:11:07,911 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-24 23:11:07,916 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-24 23:11:12,852 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM news 
2019-07-24 23:11:12,854 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-24 23:11:12,857 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 18
2019-07-24 23:11:12,858 DEBUG (NewsController.java:33)- json===>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "newsId" : 1,
    "title" : "创建新项目",
    "content" : "新闻内容",
    "writeDate" : 1466784000000
  }, {
    "newsId" : 2,
    "title" : "索尼位55降价送卡",
    "content" : "新闻内容3",
    "writeDate" : -30364761600000
  }, {
    "newsId" : 3,
    "title" : "理光b5不到二千",
    "content" : "你好",
    "writeDate" : 1191513600000
  }, {
    "newsId" : 5,
    "title" : "单反与镜头组合",
    "content" : null,
    "writeDate" : 1191369600000
  }, {
    "newsId" : 15,
    "title" : "百度将开拓美国和欧盟市场",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 16,
    "title" : "Uber CEO和马云交好",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 22,
    "title" : "今日早报",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 23,
    "title" : "高考查分被马云占了先机",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 24,
    "title" : "看完这个，你还想做微商吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 25,
    "title" : "农村电商只能成为空谈?",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 26,
    "title" : "上半年这些行业大爆炸",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 27,
    "title" : "阿里巴巴最为窘迫的四件事",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 28,
    "title" : "高管却离开了",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 30,
    "title" : "支付宝余额使用将受限",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 31,
    "title" : "国内垂直B2B电商平台TOP30",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 33,
    "title" : "谷歌要重新进入中国市场了吗？",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 34,
    "title" : "今天",
    "content" : null,
    "writeDate" : 1467417600000
  }, {
    "newsId" : 35,
    "title" : "庆十一商品促销11111",
    "content" : "222222",
    "writeDate" : 1562256000000
  } ]
}
